{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":14223893203828558407,"abi":{"parameters":[{"name":"input_state","type":{"kind":"struct","path":"fog_of_war_chess::GameState","fields":[{"name":"game_ended","type":{"kind":"boolean"}},{"name":"move_count","type":{"kind":"field"}},{"name":"mpc_state","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::RoundState","fields":[{"name":"round_number","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"user_encrypt_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"user_mask_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"previous_output_states","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::UserOutputState","fields":[{"name":"ciphertext","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::common::crypto::Ciphertext","fields":[{"name":"data","type":{"kind":"array","length":128,"type":{"kind":"field"}}}]}},{"name":"mask_commitments","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}},{"name":"user_updated_mask_commitments","type":{"kind":"array","length":2,"type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}}}]}}}]}}]},"visibility":"private"},{"name":"user_state","type":{"kind":"struct","path":"fog_of_war_chess::UserState","fields":[{"name":"encrypt_secret","type":{"kind":"field"}},{"name":"mask_secret","type":{"kind":"field"}},{"name":"visible_squares","type":{"kind":"array","length":64,"type":{"kind":"field"}}},{"name":"game_state","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"fog_of_war_chess::piece::Piece","fields":[{"name":"id","type":{"kind":"field"}},{"name":"player_id","type":{"kind":"field"}},{"name":"has_moved","type":{"kind":"field"}}]}}}]},"visibility":"private"},{"name":"move_data","type":{"kind":"struct","path":"fog_of_war_chess::MoveData","fields":[{"name":"x1","type":{"kind":"field"}},{"name":"y1","type":{"kind":"field"}},{"name":"x2","type":{"kind":"field"}},{"name":"y2","type":{"kind":"field"}}]},"visibility":"private"},{"name":"player_id","type":{"kind":"field"},"visibility":"private"}],"return_type":{"abi_type":{"kind":"tuple","fields":[{"kind":"struct","path":"fog_of_war_chess::GameState","fields":[{"name":"game_ended","type":{"kind":"boolean"}},{"name":"move_count","type":{"kind":"field"}},{"name":"mpc_state","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::RoundState","fields":[{"name":"round_number","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"user_encrypt_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"user_mask_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"previous_output_states","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::UserOutputState","fields":[{"name":"ciphertext","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::common::crypto::Ciphertext","fields":[{"name":"data","type":{"kind":"array","length":128,"type":{"kind":"field"}}}]}},{"name":"mask_commitments","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}},{"name":"user_updated_mask_commitments","type":{"kind":"array","length":2,"type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}}}]}}}]}}]},{"kind":"field"},{"kind":"field"}]},"visibility":"public"},"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"6485997221020871071":{"error_kind":"string","string":"call to assert_max_bit_size"},"13265554733035650515":{"error_kind":"string","string":"BigNum::validate_gt check fails"},"14225679739041873922":{"error_kind":"string","string":"Index out of bounds"},"16761564377371454734":{"error_kind":"string","string":"Array index out of bounds"},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"}}},"bytecode":"","debug_symbols":"","file_map":{"5":{"source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields_as_written().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u128 {\n    fn eq(self, other: u128) -> bool {\n        self == other\n    }\n}\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u128 {\n    fn cmp(self, other: u128) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use crate::cmp::{max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n","path":"std/cmp.nr"},"16":{"source":"use crate::cmp::Eq;\nuse crate::ops::arith::{Add, Neg, Sub};\n\n/// A point on the embedded elliptic curve\n/// By definition, the base field of the embedded curve is the scalar field of the proof system curve, i.e the Noir Field.\n/// x and y denotes the Weierstrass coordinates of the point, if is_infinite is false.\npub struct EmbeddedCurvePoint {\n    pub x: Field,\n    pub y: Field,\n    pub is_infinite: bool,\n}\n\nimpl EmbeddedCurvePoint {\n    /// Elliptic curve point doubling operation\n    /// returns the doubled point of a point P, i.e P+P\n    pub fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    /// Returns the null element of the curve; 'the point at infinity'\n    pub fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    /// Adds two points P+Q, using the curve addition formula, and also handles point at infinity\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    /// Points subtraction operation, using addition and negation\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    /// Negates a point P, i.e returns -P, by negating the y coordinate.\n    /// If the point is at infinity, then the result is also at infinity.\n    fn neg(self) -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: self.x, y: -self.y, is_infinite: self.is_infinite }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    /// Checks whether two points are equal\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite)\n            | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\n/// Scalar for the embedded curve represented as low and high limbs\n/// By definition, the scalar field of the embedded curve is base field of the proving system curve.\n/// It may not fit into a Field element, so it is represented with two Field elements; its low and high limbs.\npub struct EmbeddedCurveScalar {\n    pub lo: Field,\n    pub hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    #[field(bn254)]\n    pub fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a, b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n\n    //Bytes to scalar: take the first (after the specified offset) 16 bytes of the input as the lo value, and the next 16 bytes as the hi value\n    #[field(bn254)]\n    pub(crate) fn from_bytes(bytes: [u8; 64], offset: u32) -> EmbeddedCurveScalar {\n        let mut v = 1;\n        let mut lo = 0 as Field;\n        let mut hi = 0 as Field;\n        for i in 0..16 {\n            lo = lo + (bytes[offset + 31 - i] as Field) * v;\n            hi = hi + (bytes[offset + 15 - i] as Field) * v;\n            v = v * 256;\n        }\n        let sig_s = crate::embedded_curve_ops::EmbeddedCurveScalar { lo, hi };\n        sig_s\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, other: Self) -> bool {\n        (other.hi == self.hi) & (other.lo == self.lo)\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the\n// underlying proof system.\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> EmbeddedCurvePoint\n// docs:end:multi_scalar_mul\n{\n    let point_array = multi_scalar_mul_array_return(points, scalars);\n    EmbeddedCurvePoint { x: point_array[0], y: point_array[1], is_infinite: point_array[2] as bool }\n}\n\n#[foreign(multi_scalar_mul)]\npub(crate) fn multi_scalar_mul_array_return<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> [Field; 3] {}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(scalar: EmbeddedCurveScalar) -> EmbeddedCurvePoint\n// docs:end:fixed_base_scalar_mul\n{\n    let g1 = EmbeddedCurvePoint {\n        x: 1,\n        y: 17631683881184975370165255887551781615748388533673675138860,\n        is_infinite: false,\n    };\n    multi_scalar_mul([g1], [scalar])\n}\n\n/// This function only assumes that the points are on the curve\n/// It handles corner cases around the infinity point causing some overhead compared to embedded_curve_add_not_nul and embedded_curve_add_unsafe\n// This is a hack because returning an `EmbeddedCurvePoint` from a foreign function in brillig returns a [BrilligVariable::SingleAddr; 2] rather than BrilligVariable::BrilligArray\n// as is defined in the brillig bytecode format. This is a workaround which allows us to fix this without modifying the serialization format.\n// docs:start:embedded_curve_add\npub fn embedded_curve_add(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    // docs:end:embedded_curve_add\n    let x_coordinates_match = point1.x == point2.x;\n    let y_coordinates_match = point1.y == point2.y;\n    let double_predicate = (x_coordinates_match & y_coordinates_match);\n    let infinity_predicate = (x_coordinates_match & !y_coordinates_match);\n    let point1_1 = EmbeddedCurvePoint {\n        x: point1.x + (x_coordinates_match as Field),\n        y: point1.y,\n        is_infinite: x_coordinates_match,\n    };\n    // point1_1 is guaranteed to have a different abscissa than point2\n    let mut result = embedded_curve_add_unsafe(point1_1, point2);\n    result.is_infinite = x_coordinates_match;\n\n    // dbl if x_match, y_match\n    let double = embedded_curve_add_unsafe(point1, point1);\n    result = if double_predicate { double } else { result };\n\n    // infinity if x_match, !y_match\n    if point1.is_infinite {\n        result = point2;\n    }\n    if point2.is_infinite {\n        result = point1;\n    }\n    let mut result_is_infinity = infinity_predicate & (!point1.is_infinite & !point2.is_infinite);\n    result.is_infinite = result_is_infinity | (point1.is_infinite & point2.is_infinite);\n    result\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(\n    _point1: EmbeddedCurvePoint,\n    _point2: EmbeddedCurvePoint,\n) -> [Field; 3] {}\n\n/// This function assumes that:\n/// The points are on the curve, and\n/// The points don't share an x-coordinate, and\n/// Neither point is the infinity point.\n/// If it is used with correct input, the function ensures the correct non-zero result is returned.\n/// Except for points on the curve, the other assumptions are checked by the function. It will cause assertion failure if they are not respected.\npub fn embedded_curve_add_not_nul(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    assert(point1.x != point2.x);\n    assert(!point1.is_infinite);\n    assert(!point2.is_infinite);\n    embedded_curve_add_unsafe(point1, point2)\n}\n\n/// Unsafe ec addition\n/// If the inputs are the same, it will perform a doubling, but only if point1 and point2 are the same variable.\n/// If they have the same value but are different variables, the result will be incorrect because in this case\n/// it assumes (but does not check) that the points' x-coordinates are not equal.\n/// It also assumes neither point is the infinity point.\npub fn embedded_curve_add_unsafe(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    let point_array = embedded_curve_add_array_return(point1, point2);\n    let x = point_array[0];\n    let y = point_array[1];\n\n    EmbeddedCurvePoint { x, y, is_infinite: false }\n}\n","path":"std/embedded_curve_ops.nr"},"17":{"source":"use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(mut x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_64 = (x as u64) as Field;\n\n    let high = (x - low_upper_64) / TWO_POW_64;\n    let low = low_upper_64 * TWO_POW_64 + low_lower_64;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    // Safety: borrow is enforced to be boolean due to its type.\n    // if borrow is 0, it asserts that (alo > blo && ahi >= bhi)\n    // if borrow is 1, it asserts that (alo <= blo && ahi > bhi)\n    unsafe {\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        // Safety: decomposition is properly checked below\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(\n            // Safety: already unconstrained\n            unsafe { field_less_than(b, a) },\n        );\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unsafe in unconstrained\n        unsafe {\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        // Safety: Take a hint of the comparison and verify it\n        unsafe {\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"18":{"source":"pub mod bn254;\nuse crate::{runtime::is_unconstrained, static_assert};\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        static_assert(\n            BIT_SIZE < modulus_num_bits() as u32,\n            \"BIT_SIZE must be less than modulus_num_bits\",\n        );\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    fn _to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    fn _to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_le_bits\n        let bits = self._to_le_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[N - 1 - i] != p[N - 1 - i]) {\n                        assert(p[N - 1 - i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_be_bits\n        let bits = self._to_be_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the decomposition does not overflow the modulus\n            let p = modulus_be_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[i] != p[i]) {\n                        assert(p[i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            static_assert(1 < radix, \"radix must be greater than 1\");\n            static_assert(radix <= 256, \"radix must be less than or equal to 256\");\n            static_assert(radix & (radix - 1) == 0, \"radix must be a power of 2\");\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // `_radix` must be less than 256\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unconstrained context\n        unsafe {\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use crate::{panic::panic, runtime};\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        // 259, in base 256, big endian, is [1, 3].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 1, 3]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        // 259, in base 256, little endian, is [3, 1].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [3, 1, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test(should_fail_with = \"radix must be greater than 1\")]\n    fn test_to_le_radix_1() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(1);\n        } else {\n            panic(f\"radix must be greater than 1\");\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be greater than 2\n    //#[test]\n    //fn test_to_le_radix_brillig_1() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(1);\n    //        crate::println(out);\n    //        let expected = [0; 8];\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test(should_fail_with = \"radix must be a power of 2\")]\n    fn test_to_le_radix_3() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(3);\n        } else {\n            panic(f\"radix must be a power of 2\");\n        }\n    }\n\n    #[test]\n    fn test_to_le_radix_brillig_3() {\n        // this test should only fail in constrained mode\n        if runtime::is_unconstrained() {\n            let field = 1;\n            let out: [u8; 8] = field.to_le_radix(3);\n            let mut expected = [0; 8];\n            expected[0] = 1;\n            assert(out == expected, \"unexpected result\");\n        }\n    }\n\n    #[test(should_fail_with = \"radix must be less than or equal to 256\")]\n    fn test_to_le_radix_512() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(512);\n        } else {\n            panic(f\"radix must be less than or equal to 256\")\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be less than 512\n    //#[test]\n    //fn test_to_le_radix_brillig_512() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(512);\n    //        let mut expected = [0; 8];\n    //        expected[0] = 1;\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"25":{"source":"use crate::default::Default;\nuse crate::hash::Hasher;\n\ncomptime global RATE: u32 = 3;\n\npub struct Poseidon2 {\n    cache: [Field; 3],\n    state: [Field; 4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        Poseidon2::hash_internal(input, message_size, message_size != N)\n    }\n\n    pub fn new(iv: Field) -> Poseidon2 {\n        let mut result =\n            Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) {\n        // add the cache into sponge state\n        for i in 0..RATE {\n            // We effectively zero-pad the cache by only adding to the state\n            // cache that is less than the specified `cache_size`\n            if i < self.cache_size {\n                self.state[i] += self.cache[i];\n            }\n        }\n        self.state = crate::hash::poseidon2_permutation(self.state, 4);\n    }\n\n    fn absorb(&mut self, input: Field) {\n        assert(!self.squeeze_mode);\n        if self.cache_size == RATE {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        assert(!self.squeeze_mode);\n        // If we're in absorb mode, apply sponge permutation to compress the cache.\n        self.perform_duplex();\n        self.squeeze_mode = true;\n\n        // Pop one item off the top of the permutation and return it.\n        self.state[0]\n    }\n\n    fn hash_internal<let N: u32>(\n        input: [Field; N],\n        in_len: u32,\n        is_variable_length: bool,\n    ) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv: Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\npub struct Poseidon2Hasher {\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv: Field = (self._state.len() as Field) * 18446744073709551616; // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher { _state: &[] }\n    }\n}\n","path":"std/hash/poseidon2.nr"},"61":{"source":"use fog_of_war_chess::{empty_game_state, GameState, move, MoveData, UserState};\n\nfn main(\n    input_state: GameState,\n    user_state: UserState,\n    move_data: MoveData,\n    player_id: Field,\n) -> pub (GameState, Field, Field) {\n    move(input_state, user_state, move_data, player_id)\n}\nuse std::hash::poseidon2::Poseidon2::hash as poseidon2;\n\n#[test]\nfn test_main() {\n    let mut game_state: GameState = empty_game_state();\n    let mut alice_state: UserState = UserState::default();\n    let mut bob_state: UserState = UserState::default();\n\n    alice_state.encrypt_secret = poseidon2([1], 1);\n    alice_state.mask_secret = poseidon2([2], 1);\n    bob_state.encrypt_secret = poseidon2([3], 1);\n    bob_state.mask_secret = poseidon2([4], 1);\n\n    game_state =\n        game_state.commit_to_user_secrets(alice_state.encrypt_secret, alice_state.mask_secret, 0);\n    game_state =\n        game_state.commit_to_user_secrets(bob_state.encrypt_secret, bob_state.mask_secret, 1);\n\n    // alice moves pawn\n\n    let alice_move: MoveData = MoveData { x1: 4, y1: 1, x2: 4, y2: 3 };\n    let _ = move(game_state, alice_state, alice_move, 0);\n}\n","path":"/Users/zac/chess-app/circuit/src/main.nr"},"64":{"source":"mod benchmarks;\n\nuse mpclib::selective_disclosure::selective_disclosure::{\n    consume_round_commitments, create_round_commitments, RoundState, UserOutputState,\n};\n\nuse crate::validate_move::validate_move_and_update_board_state;\n\nuse crate::piece::{Piece, PieceData, Pieces};\n\nmod update_vision;\nmod vision_table;\nmod piece;\nmod validate_move;\nmod api;\n\nuse update_vision::update_vision;\n\nuse std::hash::poseidon2::Poseidon2::hash as poseidon2;\n\ntype RoundMpcState = RoundState<64, 2>;\npub struct GameState {\n    pub game_ended: bool,\n    pub move_count: Field,\n    pub mpc_state: RoundMpcState,\n}\nimpl std::default::Default for GameState {\n    fn default() -> Self {\n        GameState { game_ended: false, move_count: 0, mpc_state: RoundMpcState::default() }\n    }\n}\n\nimpl GameState {\n    pub fn hash(self) -> Field {\n        let buffer: [Field; 3] = [self.game_ended as Field, self.move_count, self.mpc_state.hash()];\n        poseidon2(buffer, 3)\n    }\n    pub fn commit_to_user_secrets(\n        self,\n        encrypt_secret: Field,\n        mask_secret: Field,\n        player_id: Field,\n    ) -> GameState {\n        let mut updated = self;\n\n        let secret_hashes = [poseidon2([encrypt_secret, -1], 2), poseidon2([mask_secret, -1], 2)];\n        updated.mpc_state.user_encrypt_secret_hashes[player_id] = secret_hashes[0];\n        updated.mpc_state.user_mask_secret_hashes[player_id] = secret_hashes[1];\n        updated\n    }\n}\n\npub struct MoveData {\n    pub x1: Field,\n    pub y1: Field,\n    pub x2: Field,\n    pub y2: Field,\n}\nimpl MoveData {\n    fn new(x1: Field, y1: Field, x2: Field, y2: Field) -> Self {\n        MoveData { x1, y1, x2, y2 }\n    }\n}\n\npub struct UserState {\n    pub encrypt_secret: Field,\n    pub mask_secret: Field,\n    pub visible_squares: [Field; 64],\n    pub game_state: [Piece; 64],\n}\n\nimpl std::default::Default for UserState {\n    fn default() -> Self {\n        UserState {\n            encrypt_secret: 0,\n            mask_secret: 0,\n            visible_squares: [0; 64],\n            game_state: [Piece::default(); 64],\n        }\n    }\n}\n\nimpl UserState {\n\n    pub(crate) fn initialize(self, player_id: Field) -> Self {\n        let first_32_square_visibility = 1 - player_id;\n        let last_32_square_visibility = player_id;\n        assert_eq(WHITE_PLAYER_ID, 0);\n        assert_eq(BLACK_PLAYER_ID, 1);\n        let mut visibility: [Field; 64] = [0; 64];\n        for i in 0..32 {\n            visibility[i] = first_32_square_visibility;\n            visibility[i + 32] = last_32_square_visibility;\n        }\n\n        let white_game_state: [Piece; 16] = [\n            Piece { id: Pieces::ROOK, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::QUEEN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KING, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::ROOK, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n        ];\n\n        let black_game_state: [Piece; 16] = [\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::ROOK, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::QUEEN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KING, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::ROOK, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n        ];\n\n        let mut game_state: [Piece; 64] = [Piece::default(); 64];\n        for i in 0..16 {\n            if (player_id == WHITE_PLAYER_ID) {\n                game_state[i] = white_game_state[i];\n            } else {\n                game_state[i + 48] = black_game_state[i];\n            }\n        }\n        UserState {\n            encrypt_secret: self.encrypt_secret,\n            mask_secret: self.mask_secret,\n            visible_squares: visibility,\n            game_state,\n        }\n    }\n\n    fn encode_game_state(self) -> [Field; 64] {\n        let mut r: [Field; 64] = [0; 64];\n        for i in 0..64 {\n            r[i] = self.game_state[i].encode();\n        }\n        r\n    }\n\n    fn hash(self) -> Field {\n        let encoded = self.encode_game_state();\n\n        let mut hash_buffer: [Field; 130] = [0; 130];\n        for i in 0..64 {\n            hash_buffer[i] = encoded[i];\n            hash_buffer[i + 64] = self.visible_squares[i];\n        }\n        hash_buffer[128] = self.encrypt_secret;\n        hash_buffer[129] = self.mask_secret;\n        poseidon2(hash_buffer, 130)\n    }\n}\nglobal BLACK_PLAYER_ID: Field = 1;\nglobal WHITE_PLAYER_ID: Field = 0;\n\nstruct AdditionalMoveData {\n    extra_state_update: PieceData,\n    extra_state_update_needed: bool,\n    extra_state_removal: PieceData,\n    extra_state_removal_needed: bool,\n}\nimpl std::default::Default for AdditionalMoveData {\n    fn default() -> Self {\n        AdditionalMoveData {\n            extra_state_update: PieceData::default(),\n            extra_state_update_needed: false,\n            extra_state_removal: PieceData::default(),\n            extra_state_removal_needed: false,\n        }\n    }\n}\n\npub fn consume_opponent_move_and_update_game_state(\n    input_state: GameState,\n    user_state: UserState,\n    player_id: Field,\n) -> UserState {\n    let opponent_output_state = consume_round_commitments(\n        user_state.mask_secret,\n        input_state.mpc_state,\n        player_id as u32,\n    );\n\n    let mut new_state = user_state;\n    // We don't need to check the move is legal, as black will have validated this when making a move proof\n    // TODO: EN PASSANT DOES NOT WORK BECAUSE WE NEED TO DELETE A SQUARE AND REPLACE WITH NOTHING\n    for i in 0..64 {\n        let is_some = opponent_output_state[0][i].is_some() as Field;\n        // if (opponent_output_state[0][i].is_some()) {\n        let decoded_packed = opponent_output_state[0][i].unwrap_unchecked();\n        let decoded: Piece = Piece::decode(decoded_packed);\n\n        let decoded_is_empty = (decoded.id == Pieces::EMPTY_SQUARE) as Field;\n        let original_square_is_not_empty =\n            (user_state.game_state[i].id != Pieces::EMPTY_SQUARE) as Field;\n        let original_square_not_player = (user_state.game_state[i].player_id != player_id) as Field;\n\n        let update_square = (1 - decoded_is_empty) * is_some;\n        let delete_square =\n            decoded_is_empty * original_square_is_not_empty * original_square_not_player * is_some;\n        std::as_witness(update_square);\n        std::as_witness(delete_square);\n        let leave_square_alone = (1 - update_square) * (1 - delete_square);\n        std::as_witness(leave_square_alone);\n\n        let original_packed = user_state.game_state[i].encode();\n\n        let updated_square = original_packed * leave_square_alone + decoded_packed * update_square;\n        new_state.game_state[i] = Piece::decode(updated_square);\n        // if (decoded.id != Pieces::EMPTY_SQUARE) {\n        //     new_state.game_state[i] = decoded;\n        // } else if (\n        //     (user_state.game_state[i].id != Pieces::EMPTY_SQUARE)\n        //         & (user_state.game_state[i].player_id != player_id)\n        // ) {\n        //     new_state.game_state[i] = Piece { id: 0, player_id: 0, has_moved: 0 };\n        // }\n        //}\n    }\n\n    new_state\n}\n\nunconstrained fn __div2(input: Field) -> u32 {\n    let r = input as u32;\n    r / 2\n}\n\npub fn move(\n    input_state: GameState,\n    user_state: UserState,\n    move_data: MoveData,\n    player_id: Field,\n) -> (GameState, Field, Field) {\n    assert((player_id == WHITE_PLAYER_ID) | (player_id == BLACK_PLAYER_ID));\n    assert_eq(input_state.game_ended, false);\n    // Safety: cheapish check to see if player_id is correct. If move_count = even, white's turn. odd = black's turn\n    let move_count_div2 = unsafe { __div2(input_state.move_count) };\n    assert_eq(move_count_div2 as Field * 2 + player_id, input_state.move_count);\n    let mut user_state = user_state;\n    if ((input_state.move_count == 0) | (input_state.move_count == 1)) {\n        user_state = UserState::initialize(user_state, player_id);\n    }\n\n    // TODO: we need to validate that the provided user state is the same as a user state value that white previously committed to\n    // we can just output the user state hash and the game state hash and have a higher level fn handle it\n    move_data.x1.assert_max_bit_size::<3>();\n    move_data.x2.assert_max_bit_size::<3>();\n    move_data.y1.assert_max_bit_size::<3>();\n    move_data.y2.assert_max_bit_size::<3>();\n\n    let mut user_state: UserState =\n        consume_opponent_move_and_update_game_state(input_state, user_state, player_id);\n\n    // Validate Move\n    // Update Game State\n    let starting_piece = user_state.game_state[move_data.x1 + move_data.y1 * 8];\n    // let ending_piece = user_state.game_state[move_data.x2 + move_data.y2 * 8];\n    let starting_piece_data: PieceData =\n        PieceData { id: starting_piece.id, x: move_data.x1, y: move_data.y1, exists: 1 };\n    let ending_piece_data: PieceData =\n        PieceData { id: starting_piece.id, x: move_data.x2, y: move_data.y2, exists: 1 };\n\n    let existing_end_piece = user_state.game_state[move_data.x2 + move_data.y2 * 8];\n    let mut game_ended = false;\n    if ((existing_end_piece.id == Pieces::KING) & (existing_end_piece.player_id != player_id)) {\n        game_ended = true;\n    }\n\n    user_state.game_state = validate_move_and_update_board_state(\n        user_state.game_state,\n        starting_piece_data,\n        ending_piece_data,\n        player_id,\n    );\n    // If black has moved and captured a white piece, whice's mask vector needs to be updated\n    let visible_squares = update_vision(user_state.game_state, player_id);\n\n    // validate_move_and_update_board_state(user_state.encoded_pieces)\n    // when used inside a Noir program, previous_round_hash should be sourced from a pub variable\n    // assert_eq(previous_round_hash, round_state.hash());\n\n    // TODO this logic should be wrapped in a helper function\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([user_state.encrypt_secret, -1], 2),\n        input_state.mpc_state.user_encrypt_secret_hashes[player_id],\n    );\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([user_state.mask_secret, -1], 2),\n        input_state.mpc_state.user_mask_secret_hashes[player_id],\n    );\n    let white_output_state: UserOutputState<64, 2> = create_round_commitments(\n        user_state.encode_game_state(),\n        visible_squares,\n        user_state.encrypt_secret,\n        user_state.mask_secret,\n        input_state.mpc_state,\n        player_id as u32,\n    );\n\n    let output_mpc_state = input_state.mpc_state.update2(white_output_state, player_id as u32);\n\n    let mut output_state = GameState {\n        game_ended,\n        move_count: input_state.move_count + 1,\n        mpc_state: output_mpc_state,\n    };\n\n    (output_state, output_state.hash(), user_state.hash())\n    // need to validate move.\n    // if Castle, or En Passant, 2 states need to be updated\n\n    // White has received Black's mask commitments (what black wants to see from white)\n}\n\npub fn empty_game_state() -> GameState {\n    GameState::default()\n}\n\n#[test]\nfn test_move() {\n    let mut game_state: GameState = empty_game_state();\n\n    let mut alice_state: UserState = UserState::default();\n    let mut bob_state: UserState = UserState::default();\n\n    alice_state.encrypt_secret = poseidon2([1], 1);\n    alice_state.mask_secret = poseidon2([2], 1);\n    bob_state.encrypt_secret = poseidon2([3], 1);\n    bob_state.mask_secret = poseidon2([4], 1);\n\n    game_state =\n        game_state.commit_to_user_secrets(alice_state.encrypt_secret, alice_state.mask_secret, 0);\n    game_state =\n        game_state.commit_to_user_secrets(bob_state.encrypt_secret, bob_state.mask_secret, 1);\n\n    // alice moves pawn\n\n    let alice_move: MoveData = MoveData { x1: 4, y1: 1, x2: 4, y2: 3 };\n    let m = move(game_state, alice_state, alice_move, WHITE_PLAYER_ID);\n    game_state = m.0;\n    let mut alice_state =\n        api::update_user_state_from_move(true, alice_state, alice_move, WHITE_PLAYER_ID);\n\n    // bob updates her state after receiving alice's move output\n    let mut bob_new_state =\n        consume_opponent_move_and_update_game_state(game_state, bob_state, BLACK_PLAYER_ID);\n\n    let bob_move: MoveData = MoveData { x1: 4, y1: 6, x2: 4, y2: 4 };\n    let m = move(game_state, bob_state, bob_move, BLACK_PLAYER_ID);\n    game_state = m.0;\n    bob_state = api::update_user_state_from_move(true, bob_new_state, bob_move, BLACK_PLAYER_ID);\n    // // alice updates her state after receiving bob's move output\n    let alice_new_state =\n        consume_opponent_move_and_update_game_state(game_state, alice_state, WHITE_PLAYER_ID);\n\n    // alice moves queen to H5\n    let alice_move = MoveData { x1: 3, y1: 0, x2: 7, y2: 4 };\n    let m = move(game_state, alice_state, alice_move, WHITE_PLAYER_ID);\n    game_state = m.0;\n    alice_state =\n        api::update_user_state_from_move(false, alice_new_state, alice_move, WHITE_PLAYER_ID);\n    // // bob updates her state after receiving alice's move output\n    let bob_new_state =\n        consume_opponent_move_and_update_game_state(game_state, bob_state, BLACK_PLAYER_ID);\n\n    // bob moves pawn to F5\n    let bob_move = MoveData { x1: 5, y1: 6, x2: 5, y2: 5 };\n    let m = move(game_state, bob_state, bob_move, BLACK_PLAYER_ID);\n    game_state = m.0;\n    bob_state = api::update_user_state_from_move(false, bob_new_state, bob_move, BLACK_PLAYER_ID);\n    // alice moves queen to E8, checkmate\n\n    let alice_new_state =\n        consume_opponent_move_and_update_game_state(game_state, alice_state, WHITE_PLAYER_ID);\n\n    let alice_move = MoveData { x1: 7, y1: 4, x2: 4, y2: 7 };\n    let m = move(game_state, alice_state, alice_move, WHITE_PLAYER_ID);\n    game_state = m.0;\n    alice_state =\n        api::update_user_state_from_move(false, alice_new_state, alice_move, WHITE_PLAYER_ID);\n    assert_eq(game_state.game_ended, true);\n    // // alice updates her state after receiving bob's move output\n    // let alice_state =\n    //     consume_opponent_move_and_update_game_state(game_state, alice_state, WHITE_PLAYER_ID);\n\n}\n","path":"/Users/zac/fog_of_war_chess/src/lib.nr"},"65":{"source":"pub(crate) mod Pieces {\n    pub(crate) global EMPTY_SQUARE: Field = 0;\n    pub(crate) global WHITE_PAWN: Field = 1;\n    pub(crate) global BLACK_PAWN: Field = 2;\n    pub(crate) global KNIGHT: Field = 3;\n    pub(crate) global BISHOP: Field = 4;\n    pub(crate) global ROOK: Field = 5;\n    pub(crate) global QUEEN: Field = 6;\n    pub(crate) global KING: Field = 7;\n}\n\npub struct Piece {\n    pub id: Field,\n    pub player_id: Field,\n    pub has_moved: Field,\n}\nimpl std::default::Default for Piece {\n    fn default() -> Self {\n        Piece { id: Pieces::EMPTY_SQUARE, player_id: 0, has_moved: 0 }\n    }\n}\nimpl Piece {\n    pub(crate) fn encode(self) -> Field {\n        (self.id) + (self.player_id * 0x100) + (self.has_moved * 0x10000)\n    }\n\n    pub(crate) fn decode(encoded: Field) -> Self {\n        let bytes: [u8; 3] = encoded.to_le_bytes();\n        Piece { id: bytes[0] as Field, player_id: bytes[1] as Field, has_moved: bytes[2] as Field }\n    }\n}\n\npub(crate) struct PieceData {\n    pub(crate) exists: Field,\n    pub(crate) id: Field,\n    pub(crate) x: Field,\n    pub(crate) y: Field,\n}\nimpl std::default::Default for PieceData {\n    fn default() -> Self {\n        PieceData { exists: 0, id: 0, x: 0, y: 0 }\n    }\n}\nimpl PieceData {\n    pub(crate) fn pack(self) -> Field {\n        self.exists + (self.id * 0x100) + (self.x * 0x10000) + (self.y * 0x1000000)\n    }\n    pub(crate) fn unpack(packed: Field) -> Self {\n        let bytes: [u8; 4] = packed.to_le_bytes();\n        PieceData {\n            exists: bytes[0] as Field,\n            id: bytes[1] as Field,\n            x: bytes[2] as Field,\n            y: bytes[3] as Field,\n        }\n    }\n}\n","path":"/Users/zac/fog_of_war_chess/src/piece.nr"},"66":{"source":"use crate::{BLACK_PLAYER_ID, WHITE_PLAYER_ID};\nuse crate::piece::{Piece, PieceData, Pieces};\nuse crate::vision_table::VISION_TABLE;\n\npub(crate) fn get_piece_data(pieces: [Piece; 64], player_id: Field) -> [PieceData; 16] {\n    let mut r: [PieceData; 16] = [PieceData { exists: 0, id: 0, x: 0, y: 0 }; 16];\n    let mut idx: Field = 0;\n\n    let mut packed_piece_data: [Field; 17] = [0; 17];\n\n    for i in 0..64 {\n        let is_not_empty_square = (pieces[i].id != Pieces::EMPTY_SQUARE) as Field;\n        let mut is_player_piece = (pieces[i].player_id - player_id);\n        std::as_witness(is_player_piece);\n        is_player_piece = 1 - (is_player_piece * is_player_piece);\n        std::as_witness(is_player_piece);\n\n        let piece_x = (i % 8) as Field;\n        let piece_y = (i / 8) as Field;\n        assert_constant(piece_x);\n        assert_constant(piece_y);\n\n        let insert_piece = is_not_empty_square * is_player_piece;\n        std::as_witness(insert_piece);\n\n        let piece_to_insert =\n            PieceData { exists: 1, id: pieces[i].id, x: piece_x, y: piece_y }.pack();\n\n        let input_piece = packed_piece_data[idx];\n        let output = input_piece * (1 - insert_piece) + insert_piece * piece_to_insert;\n        packed_piece_data[idx] = output;\n        idx += insert_piece;\n    }\n\n    for i in 0..16 {\n        r[i] = PieceData::unpack(packed_piece_data[i]);\n    }\n\n    r\n}\n\npub(crate) fn update_vision(pieces: [Piece; 64], player_id: Field) -> [Field; 64] {\n    let piece_data: [PieceData; 16] = get_piece_data(pieces, player_id);\n\n    let mut vision: [Field; 64] = [0; 64];\n\n    for i in 0..16 {\n        update_vision_for_piece(&mut vision, pieces, piece_data[i]);\n    }\n    vision\n}\n\npub(crate) fn update_vision_for_piece(\n    output_vision: &mut [Field; 64],\n    pieces: [Piece; 64],\n    piece_data: PieceData,\n) {\n    let x = piece_data.x;\n    let y = piece_data.y;\n    let piece_id = piece_data.id - 1;\n    let vision_idx = piece_id * 64 + (x as Field) + (y as Field * 8);\n    let vision_idx = vision_idx * piece_data.exists as Field;\n    let vision_vector_f = VISION_TABLE[vision_idx];\n    let vision_vector: [u1; 64] = vision_vector_f.to_le_bits();\n\n    {\n        let input_vision = output_vision[x + (y * 8)];\n        let updated_vision = (1 - piece_data.exists) * input_vision + piece_data.exists;\n        output_vision[x + (y * 8)] = updated_vision;\n    }\n\n    let piece_exists = piece_data.exists as Field;\n    // // north-west\n    let mut vision_blocked: [Field; 8] = [0; 8];\n\n    for i in 0..7 {\n        let locations: [Field; 8] = [\n            (x + i as Field + 1) + ((y + i as Field + 1) * 8), // north west\n            (x + i as Field + 1) + ((y - i as Field - 1) * 8), // south west\n            (x - i as Field - 1) + ((y + i as Field + 1) * 8), // north east\n            (x - i as Field - 1) + ((y - i as Field - 1) * 8), // south east\n            (x as Field) + ((y + i as Field + 1) * 8), // north\n            (x as Field) + (y - i as Field - 1) * 8, // south\n            (x + i as Field + 1) + (y * 8), // east\n            (x - i as Field - 1) + (y * 8), // west\n        ];\n\n        for j in 0..8 {\n            let location = locations[j];\n            std::as_witness(location);\n            let location_valid = vision_vector[i + (7 * j)] as Field;\n            let bounded_location = location * location_valid;\n\n            let square_empty = (pieces[bounded_location].id == Pieces::EMPTY_SQUARE) as Field;\n            let mut blocked: Field = vision_blocked[j];\n            let execute = (piece_exists * location_valid);\n            std::as_witness(execute);\n            let execute = execute - execute * blocked;\n            std::as_witness(execute);\n            let mut visible = output_vision[bounded_location];\n            let updated_visible = (execute + visible - visible * execute);\n            output_vision[bounded_location] = updated_visible;\n            let is_blocked = execute * (1 - square_empty as Field);\n            std::as_witness(is_blocked);\n            let updated_blocked = blocked * (1 - is_blocked) + is_blocked;\n            vision_blocked[j] = updated_blocked;\n        }\n    }\n    let knight_locations_valid: [u1; 8] = [\n        vision_vector[56],\n        vision_vector[57],\n        vision_vector[58],\n        vision_vector[59],\n        vision_vector[60],\n        vision_vector[61],\n        vision_vector[62],\n        vision_vector[63],\n    ];\n\n    let knight_locations: [Field; 8] = [\n        ((x + 2) + (y + 1) * 8) * knight_locations_valid[0] as Field,\n        ((x + 1) + (y + 2) * 8) * knight_locations_valid[1] as Field,\n        ((x - 1) + (y + 2) * 8) * knight_locations_valid[2] as Field,\n        ((x - 2) + (y + 1) * 8) * knight_locations_valid[3] as Field,\n        ((x + 2) + (y - 1) * 8) * knight_locations_valid[4] as Field,\n        ((x + 1) + (y - 2) * 8) * knight_locations_valid[5] as Field,\n        ((x - 1) + (y - 2) * 8) * knight_locations_valid[6] as Field,\n        ((x - 2) + (y - 1) * 8) * knight_locations_valid[7] as Field,\n    ];\n\n    for i in 0..8 {\n        let location_valid = knight_locations_valid[i] as Field;\n        let piece_exists = piece_data.exists as Field;\n        let is_knight = (piece_data.id == Pieces::KNIGHT) as Field;\n        let execute = location_valid * piece_exists * is_knight;\n\n        let vision = output_vision[knight_locations[i]];\n\n        let updated_vision = vision * (1 - execute) + execute;\n        output_vision[knight_locations[i]] = updated_vision;\n    }\n}\n\n#[test]\nfn test_update_vision() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::WHITE_PAWN;\n\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    let expected: [Field; 64] = [\n        1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0,\n    ];\n\n    assert_eq(vision, expected);\n}\n#[test]\nfn test_update_white_vision2() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::KNIGHT;\n    state[2].id = Pieces::BISHOP;\n    state[3].id = Pieces::QUEEN;\n    state[4].id = Pieces::KING;\n    state[5].id = Pieces::BISHOP;\n    state[6].id = Pieces::KNIGHT;\n    state[7].id = Pieces::ROOK;\n    state[8].id = Pieces::WHITE_PAWN;\n    state[9].id = Pieces::WHITE_PAWN;\n    state[10].id = Pieces::WHITE_PAWN;\n    state[11].id = Pieces::WHITE_PAWN;\n    state[12].id = Pieces::WHITE_PAWN;\n    state[13].id = Pieces::WHITE_PAWN;\n    state[14].id = Pieces::WHITE_PAWN;\n    state[15].id = Pieces::WHITE_PAWN;\n\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    let expected: [Field; 64] = [\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0,\n    ];\n\n    assert_eq(vision, expected);\n}\n\n#[test]\nfn test_update_white_vision3() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    // state[0].id = Pieces::ROOK;\n    // state[1].id = Pieces::KNIGHT;\n    // state[2].id = Pieces::BISHOP;\n    // state[3].id = Pieces::QUEEN;\n    // state[4].id = Pieces::KING;\n    // state[5].id = Pieces::BISHOP;\n    // state[6].id = Pieces::KNIGHT;\n    // state[7].id = Pieces::ROOK;\n    // state[8].id = Pieces::WHITE_PAWN;\n    // state[9].id = Pieces::WHITE_PAWN;\n    // state[10].id = Pieces::WHITE_PAWN;\n    // state[11].id = Pieces::WHITE_PAWN;\n    // state[12].id = Pieces::WHITE_PAWN;\n    // state[13].id = Pieces::WHITE_PAWN;\n    // state[14].id = Pieces::WHITE_PAWN;\n    // state[15].id = Pieces::WHITE_PAWN;\n\n    state[27].id = Pieces::QUEEN;\n    state[35].id = Pieces::ROOK;\n    state[35].player_id = BLACK_PLAYER_ID;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        1,0,0,1,0,0,1,0,\n        0,1,0,1,0,1,0,0,\n        0,0,1,1,1,0,0,0,\n        1,1,1,1,1,1,1,1,\n        0,0,1,1,1,0,0,0,\n        0,1,0,0,0,1,0,0,\n        1,0,0,0,0,0,1,0,\n        0,0,0,0,0,0,0,1,\n    ];\n\n    // noir-fmt:ignore\n    /*\n    VISION = [0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,\n              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01]    */\n    assert_eq(vision, expected);\n}\n\n#[test]\nfn test_update_vision4() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[35].id = Pieces::KNIGHT;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,1,0,1,0,0,0,\n        0,1,0,0,0,1,0,0,\n        0,0,0,1,0,0,0,0,\n        0,1,0,0,0,1,0,0,\n        0,0,1,0,1,0,0,0,\n        0,0,0,0,0,0,0,0,\n    ];\n\n    println(f\"vision = {vision}\");\n    println(f\"expected = {expected}\");\n    assert_eq(vision, expected);\n}\n\n#[test]\nfn test_update_vision_king() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[35].id = Pieces::KING;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,1,1,1,0,0,0,\n        0,0,1,1,1,0,0,0,\n        0,0,1,1,1,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n    ];\n\n    println(f\"vision = {vision}\");\n    println(f\"expected = {expected}\");\n    assert_eq(vision, expected);\n\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[4].id = Pieces::KING;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        0,0,0,1,1,1,0,0,\n        0,0,0,1,1,1,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n    ];\n\n    println(f\"vision = {vision}\");\n    println(f\"expected = {expected}\");\n    assert_eq(vision, expected);\n}\n","path":"/Users/zac/fog_of_war_chess/src/update_vision.nr"},"67":{"source":"use crate::{BLACK_PLAYER_ID, WHITE_PLAYER_ID};\nuse crate::piece::{Piece, PieceData, Pieces};\nuse crate::update_vision::update_vision_for_piece;\n\npub(crate) fn validate_move_and_update_board_state(\n    board_state: [Piece; 64],\n    starting_piece: PieceData,\n    ending_piece: PieceData,\n    player_id: Field,\n) -> [Piece; 64] {\n    let mut result: [Piece; 64] = board_state;\n    let mut vision: [Field; 64] = [0; 64];\n    update_vision_for_piece(&mut vision, board_state, starting_piece);\n\n    assert((player_id == BLACK_PLAYER_ID) | (player_id == WHITE_PLAYER_ID));\n    // can the starting piece see the square we want to move to?\n    let end_location = ending_piece.y * 8 + ending_piece.x;\n    let can_see_square = vision[end_location] == 1;\n    let square_can_be_moved_into = (board_state[end_location].id == Pieces::EMPTY_SQUARE)\n        | (board_state[end_location].player_id != player_id);\n\n    let mut is_white_promotion = (ending_piece.y == 7)\n        & (starting_piece.id == Pieces::WHITE_PAWN)\n        & (\n            (ending_piece.id != Pieces::WHITE_PAWN)\n                | (ending_piece.id != Pieces::BLACK_PAWN)\n                | (ending_piece.id != Pieces::EMPTY_SQUARE)\n        );\n    let mut is_black_promotion = (ending_piece.y == 0)\n        & (starting_piece.id == Pieces::BLACK_PAWN)\n        & (\n            (ending_piece.id != Pieces::WHITE_PAWN)\n                | (ending_piece.id != Pieces::BLACK_PAWN)\n                | (ending_piece.id != Pieces::EMPTY_SQUARE)\n        );\n    let mut is_promotion = (is_white_promotion & (player_id == WHITE_PLAYER_ID))\n        | (is_black_promotion & (player_id == BLACK_PLAYER_ID));\n    assert((starting_piece.id == ending_piece.id) | is_promotion);\n    assert(starting_piece.id != Pieces::EMPTY_SQUARE);\n    if (player_id == WHITE_PLAYER_ID) {\n        assert(starting_piece.id != Pieces::BLACK_PAWN);\n    } else {\n        assert(starting_piece.id != Pieces::WHITE_PAWN);\n    }\n    let move_valid_if_not_pawn_or_castle =\n        can_see_square & square_can_be_moved_into & (starting_piece.id != Pieces::WHITE_PAWN);\n\n    let mut pawn_valid = false;\n    // black\n    {\n        let en_passant_y: bool = ending_piece.y == starting_piece.y - 1; // ??\n        let en_passant_x =\n            (ending_piece.x - starting_piece.x) * (ending_piece.x - starting_piece.x) == 1;\n        let en_passant_piece_x1 = starting_piece.y * 8 + starting_piece.x - 1;\n        let en_passant_piece_x1_valid = starting_piece.x != 0;\n        let en_passant_piece_x2_valid = starting_piece.x != 7;\n\n        let en_passant_piece_x2 = starting_piece.y * 8 + starting_piece.x + 1;\n        let en_passant_piece_1 = (\n            board_state[en_passant_piece_x1 * en_passant_piece_x1_valid as Field].id\n                == Pieces::WHITE_PAWN\n        )\n            & (en_passant_piece_x1_valid);\n        let en_passant_piece_2 = (\n            board_state[en_passant_piece_x2 * en_passant_piece_x2_valid as Field].id\n                == Pieces::WHITE_PAWN\n        )\n            & (en_passant_piece_x2_valid);\n        let en_passant_correct_row = starting_piece.y == 5;\n        let en_passant_piece = en_passant_piece_1 | en_passant_piece_2;\n        let is_pawn = starting_piece.id == Pieces::BLACK_PAWN;\n        let en_passant_valid =\n            en_passant_x & en_passant_y & en_passant_piece & en_passant_correct_row & is_pawn;\n\n        let pawn_capture_y = en_passant_y;\n        let pawn_capture_x = en_passant_x;\n        let pawn_capture_piece = (board_state[end_location].player_id == WHITE_PLAYER_ID)\n            & (board_state[end_location].id != Pieces::EMPTY_SQUARE);\n        let pawn_capture_valid = pawn_capture_y & pawn_capture_x & pawn_capture_piece & is_pawn;\n\n        let pawn_move_y =\n            en_passant_y | ((ending_piece.y - starting_piece.y) == 2) & (starting_piece.y == 6);\n        let pawn_move_x = starting_piece.x == ending_piece.x;\n        let pawn_move_piece = (board_state[end_location].id == Pieces::EMPTY_SQUARE);\n        let pawn_move_valid = pawn_move_y & pawn_move_x & pawn_move_piece & is_pawn;\n\n        let black_pawn_valid = en_passant_valid | pawn_capture_valid | pawn_move_valid;\n\n        if (player_id == BLACK_PLAYER_ID) {\n            pawn_valid = black_pawn_valid;\n        }\n\n        if (en_passant_valid & (player_id == BLACK_PLAYER_ID)) {\n            if (en_passant_piece_1) {\n                result[starting_piece.y * 8 + starting_piece.x - 1] = Piece::default();\n            }\n            if (en_passant_piece_2) {\n                result[starting_piece.y * 8 + starting_piece.x + 1] = Piece::default();\n            }\n        }\n    }\n\n    // white\n    {\n        let en_passant_y: bool = ending_piece.y == starting_piece.y + 1; // ??\n        let en_passant_x =\n            (ending_piece.x - starting_piece.x) * (ending_piece.x - starting_piece.x) == 1;\n        let en_passant_piece_x1 = starting_piece.y * 8 + starting_piece.x - 1;\n        let en_passant_piece_x1_valid = starting_piece.x != 0;\n        let en_passant_piece_x2_valid = starting_piece.x != 7;\n\n        let en_passant_piece_x2 = starting_piece.y * 8 + starting_piece.x + 1;\n        let en_passant_piece_1 = (\n            board_state[en_passant_piece_x1 * en_passant_piece_x1_valid as Field].id\n                == Pieces::BLACK_PAWN\n        )\n            & (en_passant_piece_x1_valid);\n        let en_passant_piece_2 = (\n            board_state[en_passant_piece_x2 * en_passant_piece_x2_valid as Field].id\n                == Pieces::BLACK_PAWN\n        )\n            & (en_passant_piece_x2_valid);\n        let en_passant_correct_row = starting_piece.y == 4;\n        let en_passant_piece = en_passant_piece_1 | en_passant_piece_2;\n        let is_pawn = starting_piece.id == Pieces::WHITE_PAWN;\n        let en_passant_valid =\n            en_passant_x & en_passant_y & en_passant_piece & en_passant_correct_row & is_pawn;\n\n        let pawn_capture_y = en_passant_y;\n        let pawn_capture_x = en_passant_x;\n        let pawn_capture_piece = (board_state[end_location].player_id == BLACK_PLAYER_ID)\n            & (board_state[end_location].id != Pieces::EMPTY_SQUARE);\n        let pawn_capture_valid = pawn_capture_y & pawn_capture_x & pawn_capture_piece & is_pawn;\n\n        let pawn_move_y =\n            en_passant_y | ((ending_piece.y - starting_piece.y) == 2) & (starting_piece.y == 1);\n        let pawn_move_x = starting_piece.x == ending_piece.x;\n        let pawn_move_piece = (board_state[end_location].id == Pieces::EMPTY_SQUARE);\n        let pawn_move_valid = pawn_move_y & pawn_move_x & pawn_move_piece & is_pawn;\n\n        let white_pawn_valid = en_passant_valid | pawn_capture_valid | pawn_move_valid;\n        if (player_id == WHITE_PLAYER_ID) {\n            pawn_valid = white_pawn_valid;\n        }\n\n        if (en_passant_valid & (player_id == WHITE_PLAYER_ID)) {\n            if (en_passant_piece_1) {\n                result[starting_piece.y * 8 + starting_piece.x - 1] = Piece::default();\n            }\n            if (en_passant_piece_2) {\n                result[starting_piece.y * 8 + starting_piece.x + 1] = Piece::default();\n            }\n        }\n    }\n    let castle_is_king = starting_piece.id == Pieces::KING;\n    let castle_king_not_moved = board_state[starting_piece.y * 8 + starting_piece.x].has_moved == 0;\n\n    let castle_left = ending_piece.x == starting_piece.x - 2;\n    let castle_right = ending_piece.y == starting_piece.x + 2;\n    let castle_y = ending_piece.y == starting_piece.y;\n\n    let white_rook_present_left =\n        (board_state[0].id == Pieces::ROOK) & (board_state[0].has_moved == 0);\n    let white_rook_present_right =\n        (board_state[7].id == Pieces::ROOK) & (board_state[7].has_moved == 0);\n\n    let white_rook_condition_met =\n        (castle_left & white_rook_present_left) | (castle_right & white_rook_present_right);\n\n    let black_rook_present_left =\n        (board_state[56].id == Pieces::ROOK) & (board_state[56].has_moved == 0);\n    let black_rook_present_right =\n        (board_state[63].id == Pieces::ROOK) & (board_state[63].has_moved == 0);\n\n    let black_rook_condition_met =\n        (castle_left & black_rook_present_left) | (castle_right & black_rook_present_right);\n\n    let rook_condition_met = (white_rook_condition_met & (player_id == WHITE_PLAYER_ID))\n        | (black_rook_condition_met & (player_id == BLACK_PLAYER_ID));\n    let first_empty_square_x = starting_piece.x + castle_right as Field - castle_left as Field;\n    let second_empty_square_x =\n        starting_piece.x + (2 * castle_right as Field) - (2 * castle_left as Field);\n\n    let mut y_offset = 0;\n    if (player_id == BLACK_PLAYER_ID) {\n        y_offset = 56;\n    }\n    let first_empty_square_met: bool =\n        board_state[first_empty_square_x + y_offset].id == Pieces::EMPTY_SQUARE;\n    let second_empty_square_met: bool =\n        board_state[second_empty_square_x + y_offset].id == Pieces::EMPTY_SQUARE;\n    let rook_empty_square_met =\n        ((board_state[1 + y_offset].id == Pieces::EMPTY_SQUARE) & castle_left) | castle_right;\n    let castle_empty_square_check =\n        first_empty_square_met & second_empty_square_met & rook_empty_square_met;\n\n    let castle_valid = castle_is_king\n        & castle_king_not_moved\n        & castle_y\n        & rook_condition_met\n        & castle_empty_square_check;\n    let valid_move = move_valid_if_not_pawn_or_castle | pawn_valid | castle_valid;\n\n    // need to move the rook\n    if (castle_valid) {\n        if (castle_left) {\n            let mut moved_rook = result[y_offset * 8];\n            moved_rook.has_moved = 1;\n            result[y_offset * 8] = Piece::default();\n            result[3 + y_offset * 8] = moved_rook;\n        }\n        if (castle_right) {\n            let mut moved_rook = result[y_offset * 8 + 7];\n            moved_rook.has_moved = 1;\n            result[y_offset * 8 + 7] = Piece::default();\n            result[5 + y_offset * 8] = moved_rook;\n        }\n    }\n\n    let mut moved_piece = result[starting_piece.y * 8 + starting_piece.x];\n    moved_piece.has_moved = 1;\n    result[starting_piece.y * 8 + starting_piece.x] = Piece::default();\n    result[ending_piece.y * 8 + ending_piece.x] = moved_piece;\n    assert_eq(valid_move, true);\n\n    result\n}\n\n#[test]\nfn test_validate_white_move() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::KNIGHT;\n    state[2].id = Pieces::BISHOP;\n    state[3].id = Pieces::QUEEN;\n    state[4].id = Pieces::KING;\n    state[5].id = Pieces::BISHOP;\n    state[6].id = Pieces::KNIGHT;\n    state[7].id = Pieces::ROOK;\n    state[8].id = Pieces::WHITE_PAWN;\n    state[9].id = Pieces::WHITE_PAWN;\n    state[10].id = Pieces::WHITE_PAWN;\n    state[11].id = Pieces::WHITE_PAWN;\n    state[12].id = Pieces::WHITE_PAWN;\n    state[13].id = Pieces::WHITE_PAWN;\n    state[14].id = Pieces::WHITE_PAWN;\n    state[15].id = Pieces::WHITE_PAWN;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 1 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 3 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KNIGHT, x: 1, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 2, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 0, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let starting_piece = PieceData { exists: 1, id: Pieces::KNIGHT, x: 6, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 7, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 5, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test]\nfn test_validate_white_pawn_move_and_capture() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[35].id = Pieces::WHITE_PAWN;\n    state[42].id = Pieces::BLACK_PAWN;\n    state[42].player_id = BLACK_PLAYER_ID;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 4 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 2, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    // en passant\n    state[35].id = Pieces::BLACK_PAWN;\n    state[35].player_id = BLACK_PLAYER_ID;\n    state[36].id = Pieces::WHITE_PAWN;\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 4 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_validate_white_pawn_cannot_move_diagonally_if_not_capture() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[35].id = Pieces::WHITE_PAWN;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 4 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 2, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_validate_white_pawn_cannot_en_passant_on_wrong_row() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[27].id = Pieces::BLACK_PAWN;\n    state[27].player_id = BLACK_PLAYER_ID;\n    state[28].id = Pieces::WHITE_PAWN;\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 3 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 4 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_validate_white_move_blocked() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::KNIGHT;\n    state[2].id = Pieces::BISHOP;\n    state[3].id = Pieces::QUEEN;\n    state[4].id = Pieces::KING;\n    state[5].id = Pieces::BISHOP;\n    state[6].id = Pieces::KNIGHT;\n    state[7].id = Pieces::ROOK;\n    state[8].id = Pieces::WHITE_PAWN;\n    state[9].id = Pieces::WHITE_PAWN;\n    state[10].id = Pieces::WHITE_PAWN;\n    state[11].id = Pieces::WHITE_PAWN;\n    state[12].id = Pieces::WHITE_PAWN;\n    state[13].id = Pieces::WHITE_PAWN;\n    state[14].id = Pieces::WHITE_PAWN;\n    state[15].id = Pieces::WHITE_PAWN;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 5, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 5, y: 1 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test]\nfn test_validate_white_castle() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[4].id = Pieces::KING;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_white_castle_fails_if_blocked() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::WHITE_PAWN;\n    state[4].id = Pieces::KING;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_white_castle_fails_if_rook_already_moved() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[0].has_moved = 1;\n    state[4].id = Pieces::KING;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_white_castle_fails_if_king_already_moved() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[4].id = Pieces::KING;\n    state[4].has_moved = 1;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n","path":"/Users/zac/fog_of_war_chess/src/validate_move.nr"},"71":{"source":"/// Given an initial secret Field element, expand it into `N` uniformly randomly distributed field elements\npub(crate) fn expand_secret<let N: u32>(secret: Field) -> [Field; N] {\n    let mut rolling_secret: [Field; 2] = [0, secret];\n    let mut r: [Field; N] = [0; N];\n    for i in 0..N {\n        r[i] = std::hash::poseidon2::Poseidon2::hash(rolling_secret, 2);\n        rolling_secret[1] += 1;\n    }\n    r\n}\n\npub(crate) fn symmetric_encrypt<let N: u32>(plaintext: [Field; N], secret: Field) -> [Field; N] {\n    let mut ciphertext: [Field; N] = [0; N];\n\n    let secrets: [Field; N] = expand_secret(secret);\n    for i in 0..N {\n        ciphertext[i] = secrets[i] + plaintext[i];\n    }\n    ciphertext\n}\n\npub(crate) fn symmetric_decrypt(\n    ciphertext: [Field; 2],\n    secret: Field,\n) -> std::option::Option<Field> {\n    let mut r: std::option::Option<Field> = std::option::Option::default();\n    let mut decrypted_text: [Field; 2] = [0; 2];\n\n    let secrets: [Field; 2] = expand_secret(secret);\n    for i in 0..2 {\n        decrypted_text[i] = ciphertext[i] - secrets[i];\n    }\n\n    let is_real = decrypted_text[0] == 0;\n\n    if is_real {\n        r = std::option::Option::some(decrypted_text[1]);\n    } else {\n        r = std::option::Option::none();\n    }\n    r\n}\n\nuse std::embedded_curve_ops::EmbeddedCurvePoint as Point;\n\npub struct Ciphertext<let N: u32> {\n    data: [Field; N * 2],\n}\n\nimpl<let N: u32> std::default::Default for Ciphertext<N> {\n    fn default() -> Self {\n        Ciphertext { data: [0; 2 * N] }\n    }\n}\n\npub(crate) fn trial_decrypt<let N: u32>(\n    possible_encryption_keys: [Point; N],\n    ciphertext: Ciphertext<N>,\n) -> [Option<Field>; N] {\n    let mut possible_plaintext: [Option<Field>; N] = [Option::default(); N];\n    for i in 0..N {\n        possible_plaintext[i] = symmetric_decrypt(\n            [ciphertext.data[2 * i], ciphertext.data[2 * i + 1]],\n            possible_encryption_keys[i].x,\n        );\n    }\n    possible_plaintext\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/mpclib/main/src/common/crypto.nr"},"76":{"source":"use std::embedded_curve_ops::{\n    embedded_curve_add_unsafe, EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul,\n};\nuse std::hash::poseidon2::Poseidon2::hash as poseidon2;\n\nuse crate::common::crypto::{Ciphertext, expand_secret, symmetric_encrypt, trial_decrypt};\n\nuse bignum::{BigNumTrait, BN254_Fq};\n\ntype Point = EmbeddedCurvePoint;\n\npub global G: Point = Point {\n    x: 0x083e7911d835097629f0067531fc15cafd79a89beecb39903f69572c636f4a5a,\n    y: 0x1a7f5efaad7f315c25a918f30cc8d7333fccab7ad7c90f14de81bcc528f9935d,\n    is_infinite: false,\n};\n\nglobal H: Point = Point {\n    x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n    y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n    is_infinite: false,\n};\n\npub struct RoundState<let NumEntries: u32, let NumParticipants: u32> {\n    pub round_number: u32,\n    pub user_encrypt_secret_hashes: [Field; NumParticipants],\n    pub user_mask_secret_hashes: [Field; NumParticipants],\n    pub previous_output_states: [UserOutputState<NumEntries, NumParticipants>; NumParticipants],\n}\n\npub struct UserOutputState<let NumEntries: u32, let NumParticipants: u32> {\n    ciphertext: Ciphertext<NumEntries>,\n    mask_commitments: [Point; NumEntries],\n    user_updated_mask_commitments: [[Point; NumEntries]; NumParticipants],\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> std::default::Default for UserOutputState<NumEntries, NumParticipants> {\n    fn default() -> Self {\n        UserOutputState {\n            ciphertext: Ciphertext::default(),\n            mask_commitments: [Point::point_at_infinity(); NumEntries],\n            user_updated_mask_commitments: [\n                [Point::point_at_infinity(); NumEntries]; NumParticipants\n            ],\n        }\n    }\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> UserOutputState<NumEntries, NumParticipants> {\n\n    pub fn flatten(self: Self) -> [Field; NumEntries * (NumParticipants + 2) * 2] {\n        let mut flattened_data: [Field; NumEntries * (NumParticipants + 2) * 2] =\n            [0; NumEntries * (NumParticipants + 2) * 2];\n\n        for i in 0..NumEntries {\n            flattened_data[i * 2] = self.ciphertext.data[2 * i];\n            flattened_data[i * 2 + 1] = self.ciphertext.data[2 * i + 1];\n\n            flattened_data[NumEntries * 2 + i * 2] = self.mask_commitments[i].x;\n            flattened_data[NumEntries * 2 + i * 2 + 1] = self.mask_commitments[i].y;\n        }\n\n        let offset: u32 = NumEntries * 4;\n        for i in 0..NumParticipants {\n            for j in 0..NumEntries {\n                flattened_data[offset + (i * NumEntries * 2) + j * 2] =\n                    self.user_updated_mask_commitments[i][j].x;\n                flattened_data[offset + (i * NumEntries * 2) + j * 2 + 1] =\n                    self.user_updated_mask_commitments[i][j].y;\n                // TODO I think its ok to not include point at infinity here in the hash?\n            }\n        }\n        flattened_data\n    }\n    pub fn hash(self: Self) -> Field {\n        std::hash::poseidon2::Poseidon2::hash(\n            self.flatten(),\n            NumEntries * (NumParticipants + 2) * 2,\n        )\n    }\n}\n\npub fn commit<let N: u32>(plaintext: [Field; N], secret: Field) -> Ciphertext<N> {\n    let secrets: [Field; N] = expand_secret(secret);\n\n    let mut encryption_keys: [Point; N] = [Point::point_at_infinity(); N];\n    let mut ciphertext: Ciphertext<N> = Ciphertext::default();\n    for i in 0..N {\n        encryption_keys[i] = multi_scalar_mul([G], [EmbeddedCurveScalar::from_field(secrets[i])]);\n        let encrypted = symmetric_encrypt([0, plaintext[i]], encryption_keys[i].x);\n        ciphertext.data[2 * i] = encrypted[0];\n        ciphertext.data[2 * i + 1] = encrypted[1];\n    }\n    ciphertext\n}\n\npub fn commit_mask<let N: u32>(reveal_vector: [Field; N], masking_secret: Field) -> [Point; N] {\n    // if reveal_vector[i] = true, use G1, else use G2\n    let secrets: [Field; N] = expand_secret(masking_secret);\n    // let mut base_points: [Point; N] = [Point::point_at_infinity(); N];\n    // for i in 0..N {\n    //     base_points[i] = G.conditional_assign(H, reveal_vector[i]);\n    // }\n    let mut masking_keys: [Point; N] = [Point::point_at_infinity(); N];\n\n    // embedded_curve_add_unsafe\n    for i in 0..N {\n        masking_keys[i] = multi_scalar_mul([G], [EmbeddedCurveScalar::from_field(secrets[i])]);\n\n        // we can use an unsafe add op here because masking_keys[i] is a function of [G], and colliding with [H] would require solving the dlog problem\n        let alternative_masking_key = embedded_curve_add_unsafe(masking_keys[i], H);\n\n        masking_keys[i].x = (masking_keys[i].x - alternative_masking_key.x) * reveal_vector[i]\n            + alternative_masking_key.x;\n        masking_keys[i].y = (masking_keys[i].y - alternative_masking_key.y) * reveal_vector[i]\n            + alternative_masking_key.y;\n    }\n\n    masking_keys\n}\n\npub fn update_mask<let N: u32>(masking_keys: [Point; N], encrypt_secret: Field) -> [Point; N] {\n    let secrets: [Field; N] = expand_secret(encrypt_secret);\n    let mut updated_masking_keys: [Point; N] = [Point::point_at_infinity(); N];\n    for i in 0..N {\n        updated_masking_keys[i] = multi_scalar_mul(\n            [masking_keys[i]],\n            [EmbeddedCurveScalar::from_field(secrets[i])],\n        );\n    }\n    updated_masking_keys\n}\n\npub fn reveal_mask<let N: u32>(\n    updated_masking_keys: [Point; N],\n    masking_secret: Field,\n) -> [Point; N] {\n    let mut masking_secrets: [Field; N] = expand_secret(masking_secret);\n    //   println(f\"final masking secrets {inverse_masking_secrets}\");\n    let mut inverse_masking_secrets: [BN254_Fq; N] = [BN254_Fq::new(); N];\n\n    // oh arse we need to invert in the bn254 field\n    for i in 0..N {\n        let secret_bn = BN254_Fq::from(masking_secrets[i]);\n        let inverse = BN254_Fq::one() / secret_bn;\n        inverse_masking_secrets[i] = inverse;\n    }\n\n    let mut possible_encryption_keys: [Point; N] = [Point::point_at_infinity(); N];\n    for i in 0..N {\n        let bit_limbs = inverse_masking_secrets[i].limbs;\n        // 120, 120, 120\n        let low_120 = bit_limbs[0] as Field;\n        let mid_120 = bit_limbs[1] as Field;\n        let mid_bytes = (mid_120 as Field).to_le_bytes::<15>();\n        let low_128 = low_120 + (mid_bytes[0] as Field) * 0x1000000000000000000000000000000;\n\n        let remainder_mid_112 = (mid_120 - (mid_bytes[0] as Field)) / 0x100;\n\n        let high_16 = bit_limbs[2] as Field;\n\n        let high_128 = remainder_mid_112 + high_16 * 0x10000000000000000000000000000;\n        possible_encryption_keys[i] = multi_scalar_mul(\n            [updated_masking_keys[i]],\n            [EmbeddedCurveScalar::new(low_128, high_128)],\n        );\n    }\n    possible_encryption_keys\n}\n\npub fn create_round_commitments<let NumEntries: u32, let NumParticipants: u32>(\n    user_plaintext: [Field; NumEntries],\n    reveal_vector: [Field; NumEntries],\n    encrypt_secret: Field,\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    user_index: u32,\n) -> UserOutputState<NumEntries, NumParticipants> {\n    let mut r: UserOutputState<NumEntries, NumParticipants> = UserOutputState::default();\n    for i in 0..NumParticipants {\n        if (i != user_index) {\n            r.user_updated_mask_commitments[i] = update_mask(\n                round_state.previous_output_states[i].mask_commitments,\n                encrypt_secret,\n            );\n        }\n    }\n    r.ciphertext = commit(user_plaintext, encrypt_secret);\n    r.mask_commitments = commit_mask(reveal_vector, masking_secret);\n    r\n}\n\npub fn consume_round_commitments<let NumEntries: u32, let NumParticipants: u32>(\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    user_index: u32,\n) -> [[Option<Field>; NumEntries]; NumParticipants - 1] {\n    let mut count: Field = 0;\n\n    let mut target_plaintexts: [[Option<Field>; NumEntries]; NumParticipants - 1] =\n        [[Option::default(); NumEntries]; NumParticipants - 1];\n    for i in 0..NumParticipants {\n        if (i != user_index) {\n            let decryption_keys = reveal_mask(\n                round_state.previous_output_states[i].user_updated_mask_commitments[user_index],\n                masking_secret,\n            );\n            let plaintexts = trial_decrypt(\n                decryption_keys,\n                round_state.previous_output_states[i].ciphertext,\n            );\n            target_plaintexts[count] = plaintexts;\n            count += 1;\n        }\n    }\n    target_plaintexts\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> std::default::Default for RoundState<NumEntries, NumParticipants> {\n    fn default() -> Self {\n        RoundState {\n            round_number: 0,\n            user_encrypt_secret_hashes: [0; NumParticipants],\n            user_mask_secret_hashes: [0; NumParticipants],\n            previous_output_states: [UserOutputState::default(); NumParticipants],\n        }\n    }\n}\nimpl<let NumEntries: u32, let NumParticipants: u32> RoundState<NumEntries, NumParticipants> {\n\n    pub fn hash(self) -> Field {\n        let mut flattened_data: [Field; NumParticipants * 3 + 1] = [0; NumParticipants * 3 + 1];\n\n        for i in 0..NumParticipants {\n            flattened_data[3 * i] = self.user_encrypt_secret_hashes[i];\n            flattened_data[3 * i + 1] = self.user_mask_secret_hashes[i];\n            flattened_data[3 * i + 2] = self.previous_output_states[i].hash();\n        }\n        flattened_data[NumParticipants * 3] = self.round_number as Field - 1;\n\n        std::hash::poseidon2::Poseidon2::hash(flattened_data, NumParticipants * 3 + 1)\n    }\n\n    pub fn update2(\n        self,\n        new_output_state: UserOutputState<NumEntries, NumParticipants>,\n        user_index: u32,\n    ) -> Self {\n        let mut updated = self;\n\n        updated.round_number += 1;\n        updated.previous_output_states[user_index] = new_output_state;\n        updated\n    }\n    pub fn update(\n        self,\n        new_output_states: [UserOutputState<NumEntries, NumParticipants>; NumParticipants],\n    ) -> Self {\n        let mut updated = self;\n\n        updated.round_number += 1;\n        updated.previous_output_states = new_output_states;\n        updated\n    }\n}\n\npub fn execute_round<let NumEntries: u32, let NumParticipants: u32>(\n    user_plaintext: [Field; NumEntries],\n    reveal_vector: [Field; NumEntries],\n    encrypt_secret: Field,\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    previous_round_hash: Field,\n    user_index: u32,\n    ) -> (UserOutputState<NumEntries, NumParticipants>, [[Option<Field>; NumEntries]; NumParticipants - 1]) {\n    std::assert_constant(user_index);\n\n    // when used inside a Noir program, previous_round_hash should be sourced from a pub variable\n    assert_eq(previous_round_hash, round_state.hash());\n\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([encrypt_secret, -1], 2),\n        round_state.user_encrypt_secret_hashes[user_index],\n    );\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([masking_secret, -1], 2),\n        round_state.user_mask_secret_hashes[user_index],\n    );\n    let state = create_round_commitments(\n        user_plaintext,\n        reveal_vector,\n        encrypt_secret,\n        masking_secret,\n        round_state,\n        user_index,\n    );\n\n    let plaintexts = consume_round_commitments(masking_secret, round_state, user_index);\n\n    (state, plaintexts)\n}\n\n#[test]\nfn test_execute_round() {\n    let alice_secret = std::hash::poseidon2::Poseidon2::hash([0], 1);\n    let alice_mask = std::hash::poseidon2::Poseidon2::hash([1], 1);\n    let bob_secret = std::hash::poseidon2::Poseidon2::hash([2], 1);\n    let bob_mask = std::hash::poseidon2::Poseidon2::hash([3], 1);\n\n    let round_state: RoundState<4, 2> = RoundState {\n        round_number: 1,\n        user_encrypt_secret_hashes: [\n            poseidon2([alice_secret, -1], 2),\n            poseidon2([bob_secret, -1], 2),\n        ],\n        user_mask_secret_hashes: [poseidon2([alice_mask, -1], 2), poseidon2([bob_mask, -1], 2)],\n        previous_output_states: [UserOutputState::default(); 2],\n    };\n\n    let previous_round_hash = round_state.hash();\n    let alice_state = [0, 1, 2, 3];\n    let alice_reveal = [0, 1, 0, 1];\n    let bob_state = [-1, -2, -3, -4];\n    let bob_reveal = [1, 0, 1, 0];\n\n    // after executing. we have ciphertexts and mask commitments, but no mask reveal commitments\n    let alice_output = execute_round(\n        alice_state,\n        alice_reveal,\n        alice_secret,\n        alice_mask,\n        round_state,\n        previous_round_hash,\n        0,\n    );\n\n    let round_state = round_state.update([alice_output.0, round_state.previous_output_states[1]]);\n    let previous_round_hash = round_state.hash();\n\n    let bob_output = execute_round(\n        bob_state,\n        bob_reveal,\n        bob_secret,\n        bob_mask,\n        round_state,\n        previous_round_hash,\n        1,\n    );\n\n    let round_state = round_state.update([round_state.previous_output_states[0], bob_output.0]);\n    let previous_round_hash = round_state.hash();\n\n    let alice_output = execute_round(\n        alice_state,\n        alice_reveal,\n        alice_secret,\n        alice_mask,\n        round_state,\n        previous_round_hash,\n        0,\n    );\n\n    let round_state = round_state.update([alice_output.0, round_state.previous_output_states[1]]);\n    let previous_round_hash = round_state.hash();\n\n    let bob_output = execute_round(\n        bob_state,\n        bob_reveal,\n        bob_secret,\n        bob_mask,\n        round_state,\n        previous_round_hash,\n        1,\n    );\n\n    let alice_decrypted = alice_output.1[0];\n    let bob_decrypted = bob_output.1[0];\n\n    assert_eq(alice_decrypted[0].is_some(), false);\n    assert_eq(alice_decrypted[1].is_some(), true);\n    assert_eq(alice_decrypted[2].is_some(), false);\n    assert_eq(alice_decrypted[3].is_some(), true);\n\n    assert_eq(alice_decrypted[1].unwrap_unchecked(), -2);\n    assert_eq(alice_decrypted[3].unwrap_unchecked(), -4);\n\n    assert_eq(bob_decrypted[0].is_some(), true);\n    assert_eq(bob_decrypted[1].is_some(), false);\n    assert_eq(bob_decrypted[2].is_some(), true);\n    assert_eq(bob_decrypted[3].is_some(), false);\n\n    assert_eq(bob_decrypted[0].unwrap_unchecked(), 0);\n    assert_eq(bob_decrypted[2].unwrap_unchecked(), 2);\n}\n\n/// This doesn't really do anything by ensures that there is a test for CI to run.\n#[test]\nfn smoke_test() {\n    let plaintext: [Field; 3] = [0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, 123, -1];\n    let bob_reveal_vector: [Field; 3] = [0, 1, 1];\n\n    let alice_encrypt_secret: Field = std::hash::poseidon2::Poseidon2::hash([0], 1);\n\n    let bob_masking_secret: Field = std::hash::poseidon2::Poseidon2::hash([2], 1);\n\n    // Round 1a: Alice generates the ciphertext that describes her hidden state, sends to Bob\n    let ciphertext = commit(plaintext, alice_encrypt_secret);\n\n    // Round 1b: Bob generates commitment mask that describes which parts of the state he is entitled to see, sends to Alice\n    let bob_masking_keys = commit_mask(bob_reveal_vector, bob_masking_secret);\n\n    // Round 2: Alice uses Bob's commitment mask to create a hidden version of her encryption keys, sends to Bob\n    let alice_masking_update = update_mask(bob_masking_keys, alice_encrypt_secret);\n\n    // Round 3: Bob removes his masking component from Alice's updated mask to produce partial decryption keys\n    let partial_decrypt_keys = reveal_mask(alice_masking_update, bob_masking_secret);\n\n    // (still round 3): Bob uses the partial decryption keys to decrypt the part of Alice's state he is entitled to see\n    let partial_plaintext = trial_decrypt(partial_decrypt_keys, ciphertext);\n\n    assert_eq(partial_plaintext[0].is_some(), false);\n    assert_eq(partial_plaintext[1].is_some(), true);\n    assert_eq(partial_plaintext[2].is_some(), true);\n\n    assert_eq(partial_plaintext[1].unwrap_unchecked(), 123);\n    assert_eq(partial_plaintext[2].unwrap_unchecked(), -1);\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/mpclib/main/src/selective_disclosure/selective_disclosure.nr"},"83":{"source":"use crate::utils::map::map;\nuse std::cmp::Ordering;\n\nuse crate::params::BigNumParamsGetter;\n\nuse crate::fns::{\n    constrained_ops::{\n        add, assert_is_not_equal, cmp, conditional_select, derive_from_seed, div, eq, from_field,\n        is_zero, limbs_to_field, mul, neg, sub, udiv, udiv_mod, umod, validate_in_field,\n        validate_in_range,\n    },\n    expressions::{__compute_quadratic_expression, evaluate_quadratic_expression},\n    serialization::{from_be_bytes, to_le_bytes},\n    unconstrained_ops::{\n        __add, __batch_invert, __batch_invert_slice, __derive_from_seed, __div, __eq, __invmod,\n        __is_zero, __mul, __neg, __pow, __sub, __tonelli_shanks_sqrt, __udiv_mod,\n    },\n};\nuse std::ops::{Add, Div, Mul, Neg, Sub};\n\npub struct BigNum<let N: u32, let MOD_BITS: u32, Params> {\n    pub limbs: [u128; N],\n}\n// We aim to avoid needing to add a generic parameter to this trait, for this reason we do not allow\n// accessing the limbs of the bignum except through slices.\npub trait BigNumTrait: Neg + Add + Sub + Mul + Div + Eq {\n    // TODO: this crashes the compiler? v0.32\n    // fn default() -> Self { std::default::Default::default  () }\n    fn new() -> Self;\n    fn zero() -> Self;\n    fn one() -> Self;\n    fn derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self;\n    unconstrained fn __derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self;\n    fn from_slice(limbs: [u128]) -> Self;\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self;\n    fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes];\n\n    fn modulus() -> Self;\n    fn modulus_bits(self) -> u32;\n    fn num_limbs(self) -> u32;\n    fn get_limbs_slice(self) -> [u128];\n    fn get_limb(self, idx: u32) -> u128;\n    fn set_limb(&mut self, idx: u32, value: u128);\n\n    unconstrained fn __eq(self, other: Self) -> bool;\n    unconstrained fn __is_zero(self) -> bool;\n\n    unconstrained fn __neg(self) -> Self;\n    unconstrained fn __add(self, other: Self) -> Self;\n    unconstrained fn __sub(self, other: Self) -> Self;\n    unconstrained fn __mul(self, other: Self) -> Self;\n    unconstrained fn __div(self, other: Self) -> Self;\n    unconstrained fn __udiv_mod(self, divisor: Self) -> (Self, Self);\n    unconstrained fn __invmod(self) -> Self;\n    unconstrained fn __pow(self, exponent: Self) -> Self;\n\n    unconstrained fn __batch_invert<let M: u32>(to_invert: [Self; M]) -> [Self; M];\n    unconstrained fn __batch_invert_slice<let M: u32>(to_invert: [Self]) -> [Self];\n\n    unconstrained fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self>;\n\n    unconstrained fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        add: [Self; ADD_N],\n        add_flags: [bool; ADD_N],\n    ) -> (Self, Self);\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        add: [Self; ADD_N],\n        add_flags: [bool; ADD_N],\n    );\n\n    fn assert_is_not_equal(self, other: Self);\n    fn validate_in_range(self);\n    fn validate_in_field(self);\n\n    fn udiv_mod(self, divisor: Self) -> (Self, Self);\n    fn udiv(self, divisor: Self) -> Self;\n    fn umod(self, divisor: Self) -> Self;\n\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n    fn is_zero(self) -> bool;\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::convert::From<Field> for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn from(input: Field) -> Self {\n        Self { limbs: from_field::<N, MOD_BITS>(input) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> Neg for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn neg(self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: neg::<_, MOD_BITS>(params, self.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> BigNumTrait for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n\n    #[deprecated(\"`BigNum::zero()` is preferred\")]\n    fn new() -> Self {\n        Self::zero()\n    }\n\n    fn zero() -> Self {\n        Self { limbs: [0; N] }\n    }\n\n    fn one() -> Self {\n        let mut result = BigNum::zero();\n        result.limbs[0] = 1;\n        result\n    }\n\n    fn derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self {\n        let params = Params::get_params();\n        Self { limbs: derive_from_seed::<_, MOD_BITS, _>(params, seed) }\n    }\n\n    unconstrained fn __derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __derive_from_seed::<_, MOD_BITS, _>(params, seed) }\n    }\n\n    fn from_slice(limbs: [u128]) -> Self {\n        Self { limbs: limbs.as_array() }\n    }\n\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self {\n        Self { limbs: from_be_bytes::<_, MOD_BITS, _>(x) }\n    }\n\n    fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes] {\n        to_le_bytes::<_, MOD_BITS, _>(self.limbs)\n    }\n\n    fn modulus() -> Self {\n        Self { limbs: Params::get_params().modulus }\n    }\n\n    fn modulus_bits(_: Self) -> u32 {\n        MOD_BITS\n    }\n\n    fn num_limbs(_: Self) -> u32 {\n        N\n    }\n\n    fn get_limbs_slice(self) -> [u128] {\n        self.limbs\n    }\n\n    fn get_limb(self, idx: u32) -> u128 {\n        self.limbs[idx]\n    }\n\n    fn set_limb(&mut self, idx: u32, value: u128) {\n        self.limbs[idx] = value;\n    }\n\n    unconstrained fn __eq(self, other: Self) -> bool {\n        __eq(self.limbs, other.limbs)\n    }\n\n    unconstrained fn __is_zero(self) -> bool {\n        __is_zero(self.limbs)\n    }\n\n    unconstrained fn __neg(self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __neg(params, self.limbs) }\n    }\n\n    unconstrained fn __add(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __add(params, self.limbs, other.limbs) }\n    }\n\n    unconstrained fn __sub(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __sub(params, self.limbs, other.limbs) }\n    }\n\n    unconstrained fn __mul(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __mul::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n\n    unconstrained fn __div(self, divisor: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __div::<_, MOD_BITS>(params, self.limbs, divisor.limbs) }\n    }\n\n    unconstrained fn __udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let (q, r) = __udiv_mod(self.limbs, divisor.limbs);\n        (Self { limbs: q }, Self { limbs: r })\n    }\n\n    unconstrained fn __invmod(self) -> Self {\n        let params = Params::get_params();\n        assert(params.has_multiplicative_inverse);\n        Self { limbs: __invmod::<_, MOD_BITS>(params, self.limbs) }\n    }\n\n    unconstrained fn __pow(self, exponent: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __pow::<_, MOD_BITS>(params, self.limbs, exponent.limbs) }\n    }\n\n    unconstrained fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M] {\n        let params = Params::get_params();\n        assert(params.has_multiplicative_inverse);\n        __batch_invert::<_, MOD_BITS, _>(params, x.map(|bn: Self| bn.limbs)).map(|limbs| {\n            Self { limbs }\n        })\n    }\n\n    unconstrained fn __batch_invert_slice<let M: u32>(x: [Self]) -> [Self] {\n        let params = Params::get_params();\n        assert(params.has_multiplicative_inverse);\n        __batch_invert_slice::<_, MOD_BITS>(params, x.map(|bn: Self| bn.limbs)).map(|limbs| {\n            Self { limbs }\n        })\n    }\n\n    unconstrained fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self> {\n        let params = Params::get_params();\n        let maybe_limbs = __tonelli_shanks_sqrt(params, self.limbs);\n        maybe_limbs.map(|limbs| Self { limbs })\n    }\n\n    unconstrained fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self) {\n        let params = Params::get_params();\n        let (q_limbs, r_limbs) = __compute_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            rhs_flags,\n            map(linear_terms, |bn: Self| bn.limbs),\n            linear_flags,\n        );\n        (Self { limbs: q_limbs }, Self { limbs: r_limbs })\n    }\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) {\n        let params = Params::get_params();\n        evaluate_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            rhs_flags,\n            map(linear_terms, |bn: Self| bn.limbs),\n            linear_flags,\n        )\n    }\n\n    fn validate_in_field(self: Self) {\n        let params = Params::get_params();\n        validate_in_field::<_, MOD_BITS>(params, self.limbs);\n    }\n\n    fn validate_in_range(self) {\n        validate_in_range::<_, _, MOD_BITS>(self.limbs);\n    }\n\n    fn assert_is_not_equal(self, other: Self) {\n        let params = Params::get_params();\n        assert_is_not_equal(params, self.limbs, other.limbs);\n    }\n\n    fn udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = Params::get_params();\n        let (q, r) = udiv_mod::<_, MOD_BITS>(params, self.limbs, divisor.limbs);\n        (Self { limbs: q }, Self { limbs: r })\n    }\n\n    fn udiv(self, divisor: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: udiv::<_, MOD_BITS>(params, self.limbs, divisor.limbs) }\n    }\n\n    fn umod(self, divisor: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: umod::<_, MOD_BITS>(params, self.limbs, divisor.limbs) }\n    }\n\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        Self { limbs: conditional_select(lhs.limbs, rhs.limbs, predicate) }\n    }\n\n    fn is_zero(self) -> bool {\n        is_zero::<N, MOD_BITS>(self.limbs)\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> Default for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn default() -> Self {\n        Self::zero()\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Add for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn add(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: add::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Sub for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn sub(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: sub::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Mul for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: mul::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Div for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: div::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::cmp::Eq for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn eq(self, other: Self) -> bool {\n        let params = Params::get_params();\n        eq::<_, MOD_BITS>(params, self.limbs, other.limbs)\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::cmp::Ord for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn cmp(self, other: Self) -> Ordering {\n        cmp::<_, MOD_BITS>(self.limbs, other.limbs)\n    }\n}\n\n/// `to_field` converts a BigNum to a Field, conditioned on the bignum fitting in a field element\n///\n/// we have opted to not add this to the BigNumTrait as it might lead to bad usage of it\n/// i.e. using this function with modulus larger than the Grumpkin modulus would lead to runtime errors, if the bignum is not deliberately picked to be in range, e.g. the bignum is the output of a hash function.\n/// for such use cases we advise developers to use comptime assertions to ensure the modulus is not larger than the Grumpkin modulus\npub fn to_field<let N: u32, let MOD_BITS: u32, Params>(input: BigNum<N, MOD_BITS, Params>) -> Field\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    limbs_to_field(Params::get_params(), input.limbs)\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/bignum.nr"},"115":{"source":"use crate::constants::TWO_POW_120;\nuse crate::fns::{\n    expressions::evaluate_quadratic_expression,\n    unconstrained_helpers::{\n        __add_with_flags, __from_field, __neg_with_flags, __sub_with_flags, __validate_gt_remainder,\n        __validate_in_field_compute_borrow_flags,\n    },\n    unconstrained_ops::{__add, __div, __mul, __neg, __sub, __udiv_mod},\n};\nuse crate::params::BigNumParams as P;\nuse std::cmp::Ordering;\n\n/**\n * In this file:\n *\n * conditional_select\n * assert_is_not_equal\n * eq\n * validate_in_field\n * validate_in_range\n * validate_quotient_in_range\n * validate_gt\n * neg\n * add\n * sub\n * mul\n * div\n * udiv_mod\n * udiv\n * umod\n * gt \n * check_gt_with_flags\n */\n\npub(crate) fn limbs_to_field<let N: u32, let MOD_BITS: u32>(\n    _params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> Field {\n    if N > 2 {\n        // validate that the limbs is less than the modulus the grumpkin modulus\n        let mut grumpkin_modulus = [0; N];\n        grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n        grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n        grumpkin_modulus[2] = 0x3064;\n        validate_gt::<N, MOD_BITS>(grumpkin_modulus, limbs);\n        // validate that the limbs are in range\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n    }\n    // validate the limbs sum up to the field value\n    if N < 2 {\n        limbs[0] as Field\n    } else if N == 2 {\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n        (limbs[0] + limbs[1] * TWO_POW_120) as Field\n    } else {\n        // validate_in_range::<N, 254>(limbs);\n        (\n            limbs[0] as Field\n                + limbs[1] as Field * TWO_POW_120 as Field\n                + limbs[2] as Field * TWO_POW_120 as Field * TWO_POW_120 as Field\n        )\n    }\n}\n\npub(crate) fn from_field<let N: u32, let MOD_BITS: u32>(field: Field) -> [u128; N] {\n    // Safety: we check that the resulting limbs represent the intended field element\n    // we check the bit length, the limbs being max 120 bits, and the value in total is less than the field modulus\n    let result: [u128; N] = unsafe { __from_field::<N>(field) };\n    if !std::runtime::is_unconstrained() {\n        // validate the limbs are in range and the value in total is less than 2^254\n\n        // validate that the last limb is less than the modulus\n        if N > 2 {\n            // validate that the result is less than the modulus\n            let mut grumpkin_modulus = [0; N];\n            grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n            grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n            grumpkin_modulus[2] = 0x3064;\n            validate_gt::<N, MOD_BITS>(grumpkin_modulus, result);\n            // validate that the limbs are in range\n            validate_in_range::<_, N, MOD_BITS>(result);\n        }\n        // validate the limbs sum up to the field value\n        let TWO_POW_120_FIELD = TWO_POW_120 as Field;\n        let field_val = if N < 2 {\n            result[0] as Field\n        } else if N == 2 {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field + result[1] as Field * TWO_POW_120_FIELD\n        } else {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field\n                + result[1] as Field * TWO_POW_120_FIELD\n                + result[2] as Field * TWO_POW_120_FIELD * TWO_POW_120_FIELD\n        };\n        assert_eq(field_val, field);\n    }\n\n    result\n}\n\n/**\n* @brief given an input seed, generate a pseudorandom BigNum value\n* @details we hash the input seed into `modulus_bits * 2` bits of entropy,\n* which is then reduced into a BigNum value\n* We use a hash function that can be modelled as a random oracle\n* This function *should* produce an output that is a uniformly randomly distributed value modulo BigNum::modulus()\n**/\n\npub(crate) fn derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let mut rolling_seed: [u8; SeedBytes + 1] = [0; SeedBytes + 1];\n    for i in 0..SeedBytes {\n        rolling_seed[i] = seed[i];\n        assert_eq(rolling_seed[i], seed[i]);\n    }\n\n    let mut hash_buffer: [u8; N * 2 * 15] = [0; N * 2 * 15];\n\n    let mut rolling_hash_fields: [Field; (SeedBytes / 31) + 1] = [0; (SeedBytes / 31) + 1];\n    let mut seed_ptr = 0;\n    for i in 0..(SeedBytes / 31) + 1 {\n        let mut packed: Field = 0;\n        for _ in 0..31 {\n            if (seed_ptr < SeedBytes) {\n                packed *= 256;\n                packed += seed[seed_ptr] as Field;\n                seed_ptr += 1;\n            }\n        }\n        rolling_hash_fields[i] = packed;\n    }\n\n    let compressed =\n        std::hash::poseidon2::Poseidon2::hash(rolling_hash_fields, (SeedBytes / 31) + 1);\n    let mut rolling_hash: [Field; 2] = [compressed, 0];\n\n    let num_hashes = (240 * N) / 254 + (((30 * N) % 32) != 0) as u32;\n    for i in 0..num_hashes - 1 {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        for j in 0..30 {\n            hash_buffer[i * 30 + j] = hash[j];\n        }\n        rolling_hash[1] += 1;\n    }\n\n    {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        let remaining_bytes = 30 * N - (num_hashes - 1) * 30;\n        for j in 0..remaining_bytes {\n            hash_buffer[(num_hashes - 1) * 30 + j] = hash[j];\n        }\n    }\n\n    let num_bits = MOD_BITS * 2;\n    let num_bytes = num_bits / 8 + ((num_bits % 8) != 0) as u32;\n\n    let bits_in_last_byte = num_bits as u8 % 8;\n    let last_byte_mask = (1 as u8 << bits_in_last_byte) - 1;\n    hash_buffer[num_bytes - 1] = hash_buffer[num_bytes - 1] & last_byte_mask;\n\n    let num_bigfield_chunks = (2 * N) / (N - 1) + (((2 * N) % (N - 1)) != 0) as u32;\n    let mut byte_ptr = 0;\n\n    // we want to convert our byte array into bigfield chunks\n    // each chunk has at most N-1 limbs\n    // to determine the exact number of chunks, we need the `!=` or `>` operator which is not avaiable when defining array sizes\n    // so we overestimate at 4\n    // e.g. if N = 20, then we have 40 limbs we want to reduce, but each bigfield chunk is 19 limbs, so we need 3\n    // if N = 2, we have 4 limbs we want to reduce but each bigfield chunk is only 1 limb, so we need 4\n    // max possible number of chunks is therefore 4\n    let mut bigfield_chunks: [[u128; N]; 4] = [[0; N]; 4];\n    for k in 0..num_bigfield_chunks {\n        let mut bigfield_limbs: [u128; N] = [0; N];\n        let mut num_filled_bytes = (k * 30);\n        let mut num_remaining_bytes = num_bytes - num_filled_bytes;\n        let mut num_remaining_limbs =\n            (num_remaining_bytes / 15) + (num_remaining_bytes % 15 > 0) as u32;\n        let mut more_than_N_minus_one_limbs = (num_remaining_limbs > (N - 1)) as u32;\n        let mut num_limbs_in_bigfield = more_than_N_minus_one_limbs * (N - 1)\n            + num_remaining_limbs * (1 - more_than_N_minus_one_limbs);\n\n        for j in 0..num_limbs_in_bigfield {\n            let mut limb: u128 = 0;\n            for _ in 0..15 {\n                let need_more_bytes = (byte_ptr < num_bytes);\n                let mut byte = hash_buffer[byte_ptr];\n                limb *= (256 * need_more_bytes as u128 + (1 - need_more_bytes as u128));\n                limb += byte as u128 * need_more_bytes as u128;\n                byte_ptr += need_more_bytes as u32;\n            }\n            bigfield_limbs[num_limbs_in_bigfield - 1 - j] = limb;\n        }\n        bigfield_chunks[num_bigfield_chunks - 1 - k] = bigfield_limbs;\n    }\n\n    let mut bigfield_rhs_limbs: [u128; N] = [0; N];\n    bigfield_rhs_limbs[N - 1] = 1;\n    validate_in_range::<_, _, MOD_BITS>(bigfield_rhs_limbs);\n\n    let mut result: [u128; N] = [0; N];\n\n    for i in 0..num_bigfield_chunks {\n        let bigfield_lhs_limbs = bigfield_chunks[i];\n\n        // result = mul(params, result, bigfield_rhs_limbs);\n        result = add(params, result, bigfield_lhs_limbs);\n    }\n\n    result\n}\n\n/**\n* @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n* @description should be cheaper than using an IF statement (TODO: check!)\n**/\npub(crate) fn conditional_select<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n    predicate: bool,\n) -> [u128; N] {\n    let mut result: [u128; N] = lhs;\n    for i in 0..N {\n        // (lhs[i] - rhs[i]) * predicate + rhs[i]\n        // in case lhs < rhs, this will underflow so we have to do one extra multiplication to prevent it\n        result[i] = lhs[i] * predicate as u128 + rhs[i] * (1 - predicate as u128);\n    }\n    result\n}\n\n/**\n    * @brief Validate self != other\n    * @details If A == B, then A == B mod N.\n    *          We can efficiently evaluate A == B mod N where N = circuit modulus\n    *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n    *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n    *          (todo: compute how tiny)\n    **/\npub(crate) fn assert_is_not_equal<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) {\n    let mut l: Field = 0;\n    let mut r: Field = 0;\n    let mut modulus_mod_n: Field = 0;\n    for i in 0..N {\n        l *= TWO_POW_120 as Field;\n        r *= TWO_POW_120 as Field;\n        modulus_mod_n *= TWO_POW_120 as Field;\n        l += lhs[N - i - 1] as Field;\n        r += rhs[N - i - 1] as Field;\n        modulus_mod_n += params.modulus[N - i - 1] as Field;\n    }\n\n    // lhs can be either X mod N or P + X mod N\n    // rhs can be either Y mod N or P + Y mod N\n    // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n    let diff = l - r;\n    let target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n    assert(target != 0, \"asssert_is_not_equal fail\");\n}\n\npub(crate) fn eq<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let diff = sub::<_, MOD_BITS>(params, lhs, rhs);\n    // if self == other, possible values of `diff` will be `p` or `0`\n    // (the subtract operator constrains diff to be < ceil(log(p)))\n    // TODO: can do this more efficiently via witngen in unconstrained functions?\n    let is_equal_modulus: bool = diff == params.modulus;\n    let is_equal_zero: bool = diff.all(|elem| elem == 0);\n    is_equal_modulus | is_equal_zero\n}\n\npub(crate) fn is_zero<let N: u32, let MOD_BITS: u32>(val: [u128; N]) -> bool {\n    val.all(|limb| limb == 0)\n}\n\npub(crate) fn validate_in_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) {\n    // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n    let mut p_minus_self: [Field; N] = [0; N];\n    let modulus: [u128; N] = params.modulus;\n    for i in 0..N {\n        p_minus_self[i] = (modulus[i] as Field - val[i] as Field);\n    }\n    let borrow_flags = unsafe { __validate_in_field_compute_borrow_flags(params, val) };\n    p_minus_self[0] += (borrow_flags[0] as Field * TWO_POW_120 as Field);\n    for i in 1..N - 1 {\n        p_minus_self[i] +=\n            (borrow_flags[i] as Field * TWO_POW_120 as Field - borrow_flags[i - 1] as Field);\n    }\n    p_minus_self[N - 1] -= (borrow_flags[N - 2] as Field);\n    validate_in_range::<_, _, MOD_BITS>(p_minus_self);\n}\n\n/**\n* @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n**/\npub(crate) fn validate_in_range<T, let N: u32, let MOD_BITS: u32>(limbs: [T; N])\nwhere\n    T: Into<Field>,\n{\n    for i in 0..(N - 1) {\n        limbs[i].into().assert_max_bit_size::<120>();\n    }\n\n    limbs[N - 1].into().assert_max_bit_size::<MOD_BITS - ((N - 1) * 120)>();\n}\n\n/**\n* @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n* @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n*              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n*              Why is this?\n*              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n*                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n*                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n*              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n*\n*              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n*              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n**/\npub(crate) fn validate_quotient_in_range<let N: u32, let MOD_BITS: u32>(limbs: [u128; N]) {\n    for i in 0..(N) {\n        (limbs[i] as Field).assert_max_bit_size::<120>();\n    }\n    // Note: replace magic number 6 with definition\n    (limbs[N - 1] as Field).assert_max_bit_size::<MOD_BITS - ((N - 1) * 120) + 6>();\n}\n\n// validate that lhs - rhs does not underflow i.e. lhs > rhs\npub(crate) fn validate_gt<let N: u32, let MOD_BITS: u32>(lhs: [u128; N], rhs: [u128; N]) {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    // a - b = r\n    // p + a - b - r = 0\n    let (underflow, result, carry_flags, borrow_flags) =\n        unsafe { __validate_gt_remainder(lhs, rhs) };\n    validate_in_range::<_, _, MOD_BITS>(result);\n    assert(!underflow, \"BigNum::validate_gt check fails\");\n    check_gt_with_flags::<N, MOD_BITS>(lhs, rhs, result, borrow_flags, carry_flags);\n}\n\npub(crate) fn neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __neg(params, val)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe { __neg_with_flags(params, val) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n        let result_limb = modulus[0] + (borrow_flags[0] as u128 * TWO_POW_120) - val[0] - result[0];\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] + (borrow_flags[i] as u128 * TWO_POW_120)\n                - val[i]\n                - result[i]\n                - borrow_flags[i - 1] as u128;\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val[N - 1] - result[N - 1] - borrow_flags[N - 2] as u128;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            // __add_u128(params, lhs, rhs)\n            __add(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) =\n            unsafe { __add_with_flags(params, lhs, rhs) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut subtrahend: [u128; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = lhs[0] as Field + rhs[0] as Field\n            - subtrahend[0] as Field\n            - result[0] as Field\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = lhs[i] as Field + rhs[i] as Field\n                - subtrahend[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry\n                + borrow_sub_carry * TWO_POW_120 as Field;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = lhs[N - 1] as Field + rhs[N - 1] as Field\n            - subtrahend[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __sub(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) =\n            unsafe { __sub_with_flags(params, lhs, rhs) };\n\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut addend: [u128; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n            + addend[0] as Field\n            + lhs[0] as Field\n            - rhs[0] as Field\n            - result[0] as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n                + addend[i] as Field\n                + lhs[i] as Field\n                - rhs[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = addend[N - 1] as Field + lhs[N - 1] as Field\n            - rhs[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\n// Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n//       via evaluate_quadratic_expression\n// e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n//      will create much fewer constraints than calling `mul` and `add` directly\npub(crate) fn mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let result = unsafe { __mul::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[lhs]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [result],\n            [true],\n        );\n    }\n    result\n}\n\n// Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\npub(crate) fn div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    assert(\n        params.has_multiplicative_inverse,\n        \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\",\n    );\n    let result = unsafe { __div::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[result]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [lhs],\n            [true],\n        );\n    }\n    result\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) fn udiv_mod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let (quotient, remainder) = unsafe { __udiv_mod(numerator, divisor) };\n    if !std::runtime::is_unconstrained() {\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        evaluate_quadratic_expression(\n            params,\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false],\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        validate_gt::<_, MOD_BITS>(divisor, remainder);\n    }\n    (quotient, remainder)\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. return param is floor(numerator / divisor)\n**/\npub(crate) fn udiv<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).0\n}\n\n/**\n* @brief udiv_mod performs integer modular reduction\n*\n* i.e. 1. numerator % divisor = return value\n**/\npub(crate) fn umod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).1\n}\n\n// a comparison function. returns true if lhs > rhs and false otherwise\npub(crate) fn cmp<let N: u32, let MOD_BITS: u32>(lhs: [u128; N], rhs: [u128; N]) -> Ordering {\n    let (underflow, result, carry_flags, borrow_flags) =\n        unsafe { __validate_gt_remainder(lhs, rhs) };\n    // if underflow is true, swap lhs and rhs\n    let (lhs, rhs) = if underflow { (rhs, lhs) } else { (lhs, rhs) };\n    check_gt_with_flags::<N, MOD_BITS>(lhs, rhs, result, borrow_flags, carry_flags);\n    if lhs == rhs {\n        Ordering::equal()\n    } else if underflow {\n        Ordering::less()\n    } else {\n        Ordering::greater()\n    }\n}\n\n// the constraining function for the results returned by __validate_gt_remainder. this is used in both comparisons and validate gt\npub(crate) fn check_gt_with_flags<let N: u32, let MOD_BITS: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n    result: [u128; N],\n    borrow_flags: [bool; N],\n    carry_flags: [bool; N],\n) {\n    let mut addend: [Field; N] = [0; N];\n    let result_limb = lhs[0] as Field - rhs[0] as Field + addend[0] - result[0] as Field - 1\n        + (borrow_flags[0] as Field - carry_flags[0] as Field) * TWO_POW_120 as Field;\n    assert(result_limb == 0);\n\n    for i in 1..N - 1 {\n        let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n        let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n        let result_limb = lhs[i] as Field - rhs[i] as Field + addend[i] as Field\n            - result[i] as Field\n            - prev_borrow_sub_carry\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n    }\n\n    let result_limb = lhs[N - 1] as Field - rhs[N - 1] as Field + addend[N - 1] as Field\n        - result[N - 1] as Field\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/constrained_ops.nr"},"116":{"source":"use crate::utils::split_bits;\n\nuse crate::constants::{TWO_POW_120, TWO_POW_126, TWO_POW_246};\nuse crate::fns::{\n    constrained_ops::validate_quotient_in_range, unconstrained_helpers::__barrett_reduction,\n};\nuse crate::params::BigNumParams as P;\n\n/**\n* @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n* @description The expression is of the form:\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n* For example, when computing the product a * b - q * p = 0, it is possible that:\n*      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n*      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n* In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n* In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n*\n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\n\nunconstrained fn __compute_quadratic_expression_with_borrow_flags<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N], [Field; 2 * N - 2]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut mulout_p = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n\n    let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, MOD_BITS, params.modulus);\n    assert(remainder == [0; N]);\n    for i in 0..N {\n        for j in 0..N {\n            mulout_n[i + j] += quotient[i] as Field * params.modulus[j] as Field;\n        }\n    }\n\n    // compute borrow flags from mulout_p and mulout_n\n    let mut borrow_flags: [Field; 2 * N - 2] = [0; 2 * N - 2];\n    let borrow_shift: Field = TWO_POW_246; // 2^{246}\n    let borrow_carry: Field = TWO_POW_126; // 2^{246 - 120} = 2^{126}\n    let downshift: Field = 1 / (TWO_POW_120 as Field);\n\n    // determine whether we need to borrow from more significant limbs.\n    // initial limb is \"simple\" comparison operation\n    // TODO: check how expensive `lt` operator is w.r.t. witness generation\n    borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n    // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n    // and there is nothing to borrow against for the final limb.\n    let mut hi_bits =\n        (mulout_p[0] - mulout_n[0] + (borrow_flags[0] as Field * borrow_shift)) * downshift;\n    for i in 1..(N + N - 2) {\n        // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n        // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n        //     * downshift;\n        mulout_p[i] += hi_bits;\n\n        // determine whether negative limb values are greater than positive limb values\n        let underflow: Field =\n            mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n        borrow_flags[i] = underflow;\n\n        hi_bits = (\n            mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)\n        )\n            * downshift;\n    }\n\n    (quotient, remainder, borrow_flags)\n}\n\n/**\n* @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n**/\n// NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n// To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n// We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n// Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n// Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\nunconstrained fn __add_linear_expression<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n    flags: [bool; M],\n) -> ([u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut sum: [u128; N] = [0; N];\n    // TODO: ugly! Will fail if input array is empty\n    let modulus2: [u128; N] = params.double_modulus;\n    for i in 0..M {\n        if (flags[i]) {\n            for j in 0..N {\n                sum[j] = sum[j] + (modulus2[j] as Field - x[i][j] as Field) as u128;\n                // assert(x[i][j].lt(modulus2[j]));\n            }\n        } else {\n            for j in 0..N {\n                sum[j] = sum[j] + x[i][j];\n            }\n        }\n    }\n    // problem if we normalize when used in computing quotient\n    sum\n}\n\n/**\n* @brief computes the limb products of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\nunconstrained fn __compute_quadratic_expression_product<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> [Field; 2 * N] {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut lhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut rhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n\n    for i in 0..NUM_PRODUCTS {\n        lhs[i] = __add_linear_expression(params, lhs_terms[i], lhs_flags[i]);\n        rhs[i] = __add_linear_expression(params, rhs_terms[i], rhs_flags[i]);\n    }\n\n    let add: [u128; N] = __add_linear_expression(params, linear_terms, linear_flags);\n\n    let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                mulout[i + j] += (lhs[k][i] as Field * rhs[k][j] as Field);\n            }\n        }\n        mulout[i] += add[i] as Field;\n    }\n    mulout\n}\n\n/**\n* @brief computes the quotient/remainder of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\npub(crate) unconstrained fn __compute_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mulout: [Field; (N * 2)] = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n    // size 4\n    // a[3] * b[3] = a[6] = 7\n    // TODO: ugly! Will fail if input slice is empty\n    let k = MOD_BITS;\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, k, params.modulus);\n\n    let mut q = quotient;\n    let mut r = remainder;\n    (q, r)\n}\n\n/**\n* @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n* @description The expression is of the form (when evaluated as an integer relation):\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* Note: this method requires the remainder term of the expression to be ZERO\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The expensive parts of this algorithm are the following:\n*      1. evaluating the limb products required to compute `lhs * rhs`\n*      2. applying range constraints to validate the result is 0\n*\n* Range constraints are needed for the following reason:\n* When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n* Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n* Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n* To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n* (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n* To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n* We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n* TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n* I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n* TODO: explain why we apply a 126-bit range check, this feels like a magic number\n* (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n* TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n* \n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\npub(crate) fn evaluate_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) {\n    // use an unconstrained function to compute the value of the quotient\n    let (quotient, _, borrow_flags): ([u128; N], [u128; N], [Field; 2 * N - 2]) = unsafe {\n        __compute_quadratic_expression_with_borrow_flags::<_, MOD_BITS, _, _, _, _>(\n            params,\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags,\n        )\n    };\n\n    // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n    // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n    validate_quotient_in_range::<_, MOD_BITS>(quotient);\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    // (should be a compile-time check...unconstrained function?)\n    // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n    let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t4: [Field; N] = [0; N];\n\n    // TODO: this is super nasty as it requires a multiplication\n    let double_modulus: [u128; N] = params.double_modulus;\n\n    for k in 0..NUM_PRODUCTS {\n        for i in 0..N {\n            for j in 0..LHS_N {\n                // note: if is_negative is not known at comptime this is very expensive\n                if (lhs_flags[k][j]) {\n                    t0[k][i] -= lhs_terms[k][j][i] as Field;\n                    t0[k][i] += double_modulus[i] as Field;\n                } else {\n                    t0[k][i] += lhs_terms[k][j][i] as Field;\n                }\n            }\n            for j in 0..RHS_N {\n                if (rhs_flags[k][j]) {\n                    t1[k][i] -= rhs_terms[k][j][i] as Field;\n                    t1[k][i] += double_modulus[i] as Field;\n                } else {\n                    t1[k][i] += rhs_terms[k][j][i] as Field;\n                }\n            }\n        }\n    }\n    for i in 0..N {\n        for j in 0..ADD_N {\n            if (linear_flags[j]) {\n                t4[i] -= linear_terms[j][i] as Field;\n                t4[i] += double_modulus[i] as Field;\n            } else {\n                t4[i] += linear_terms[j][i] as Field;\n            }\n        }\n    }\n\n    // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n    // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n    // so that we can ensure that no limbs will underflow for an honest Prover\n    let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n    // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n    // TODO: this is super nasty as it requires a multiplication\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                if k == 0 {\n                    let new_term =\n                        t0[k][i] * t1[k][j] - quotient[i] as Field * params.modulus[j] as Field;\n                    std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                    product_limbs[i + j] += new_term;\n                } else {\n                    product_limbs[i + j] += t0[k][i] * t1[k][j] as Field;\n                }\n            }\n            if (NUM_PRODUCTS == 0) {\n                product_limbs[i + j] -= quotient[i] as Field * params.modulus[j] as Field;\n            }\n        }\n        product_limbs[i] += t4[i];\n    }\n\n    // each limb product represents the sum of 120-bit products.\n    // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n    // where no more than 64 limb products are summed together.\n    // TODO: check in unconstrained function that this condition is satisfied\n    // TODO: define trade-offs regarding the value of borrow_shift\n    // (the larger the value, the greater the range check that is required on product_limbs)\n    // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n    // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n    //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n    // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n    borrow_flags[0].assert_max_bit_size::<1>();\n    product_limbs[0] += borrow_flags[0] * borrow_shift;\n    for i in 1..(N + N - 2) {\n        borrow_flags[i].assert_max_bit_size::<1>();\n        product_limbs[i] += (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n    }\n    product_limbs[N + N - 2] -= borrow_flags[N + N - 3] as Field * borrow_carry;\n\n    // Final step: Validate `product_limbs` represents the integer value `0`\n    // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n    // i.e. we need to do the following for each limb `i`:\n    //      1. validate the limb's low-120 bits equals zero\n    //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n    //      3. add the carry into limb `i+1`\n    // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n    // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n    // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n    //  where k is the number of bits in the prime field)\n    // We then add the result into the next limb and repeat.\n    let hi_shift: Field = 0x1000000000000000000000000000000;\n    let hi_downshift: Field = 1 / hi_shift;\n    for i in 0..N + N - 2 {\n        product_limbs[i] *= hi_downshift;\n        std::as_witness(product_limbs[i]);\n        product_limbs[i].assert_max_bit_size::<126>(); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n        product_limbs[i + 1] += product_limbs[i];\n    }\n    // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n    assert(product_limbs[N + N - 2] == 0);\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/expressions.nr"},"119":{"source":"use crate::constants::{TWO_POW_119, TWO_POW_120, TWO_POW_60};\nuse crate::fns::unconstrained_ops::{__add, __gte, __mul, __neg, __one, __pow};\nuse crate::params::BigNumParams as P;\nuse crate::utils::msb::get_msb64;\nuse crate::utils::split_bits::__normalize_limbs;\n\npub(crate) unconstrained fn __from_field<let N: u32>(field: Field) -> [u128; N] {\n    let mut x = field;\n    let x_first_u128 = (x as u128);\n    let first: u128 = x_first_u128 % TWO_POW_120;\n    // this becomes the same as a integer division because we're removing the remainder\n    x = (x - (first as Field)) / (TWO_POW_120 as Field);\n    let x_second_u128 = (x as u128);\n    let second = x_second_u128 % TWO_POW_120;\n    x = (x - (second as Field)) / (TWO_POW_120 as Field);\n    let x_third_u128 = (x as u128);\n    let third = x_third_u128 % TWO_POW_120;\n    let mut result: [u128; N] = [0; N];\n    if N > 2 {\n        result[0] = first;\n        result[1] = second;\n        result[2] = third;\n    }\n    if N == 2 {\n        result[0] = first;\n        result[1] = second;\n    }\n    if N == 1 {\n        result[0] = first;\n    }\n    result\n}\n\npub(crate) unconstrained fn __validate_in_field_compute_borrow_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [bool; N] {\n    let mut flags: [bool; N] = [false; N];\n    let modulus: [u128; N] = params.modulus;\n    flags[0] = modulus[0] < val[0];\n    for i in 1..N - 1 {\n        flags[i] = modulus[i] < val[i] + flags[i - 1] as u128;\n    }\n    flags\n}\n\npub(crate) unconstrained fn __validate_gt_remainder<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> (bool, [u128; N], [bool; N], [bool; N]) {\n    let mut a = lhs;\n    let mut b = rhs;\n    let underflow = !__gte(lhs, rhs);\n\n    let mut result: [u128; N] = [0; N];\n    // swap a and b if there's an underflow\n    let (a, b) = if underflow { (b, a) } else { (a, b) };\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 1;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = a[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = b[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = (borrow * TWO_POW_120 + add_term - sub_term);\n\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (underflow, result, carry_flags, borrow_flags)\n}\n\npub(crate) unconstrained fn __neg_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> ([u128; N], [bool; N - 1]) {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow_in: u128 = 0;\n\n    let mut borrow_flags: [bool; N - 1] = [false; N - 1];\n    for i in 0..N {\n        let sub_term = val[i] + borrow_in;\n        let borrow = (sub_term > params.modulus[i]) as u128;\n        result[i] = borrow * TWO_POW_120 + params.modulus[i] - sub_term;\n\n        borrow_in = borrow;\n        if (i < N - 1) {\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (result, borrow_flags)\n}\n\npub(crate) unconstrained fn __add_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N - 1], bool) {\n    let add_res = __helper_add(lhs, rhs);\n    let overflow = __gte(add_res, params.modulus);\n\n    let mut subtrahend: [u128; N] = [0; N];\n    let mut result: [u128; N] = [0; N];\n\n    if overflow {\n        subtrahend = params.modulus;\n    }\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N - 1] = [false; N - 1];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term = lhs[i] + rhs[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry as u128;\n\n        let sub_term = subtrahend[i] + borrow_in;\n\n        let mut borrow: u128 = (sub_term > add_term) as u128;\n        result[i] = borrow * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow as u128;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            if (i < N - 1) {\n                borrow_flags[i] = borrow as bool;\n            }\n        }\n    }\n    (result, carry_flags, borrow_flags, overflow)\n}\n\npub(crate) unconstrained fn __sub_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N - 1], bool) {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let underflow = !__gte(lhs, rhs);\n    let addend: [u128; N] = if underflow { params.modulus } else { [0; N] };\n    let mut result: [u128; N] = [0; N];\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N - 1] = [false; N - 1];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = lhs[i] + addend[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = rhs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = borrow as u128 * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            if (i < N - 1) {\n                borrow_flags[i] = borrow as bool;\n            }\n        }\n    }\n    (result, carry_flags, borrow_flags, underflow)\n}\n\n/**\n * @brief BARRETT_REDUCTION_OVERFLOW_BITS defines how large an input to barrett reduction can be\n * @details maximum value = modulus^2 <<BARRETT_REDUCTION_OVERFLOW_BITS\n *          see __barrett_reduction for more details\n **/\ncomptime global BARRETT_REDUCTION_OVERFLOW_BITS: u32 = 4;\n\npub(crate) unconstrained fn __barrett_reduction<let N: u32>(\n    x: [u128; 2 * N],\n    redc_param: [u128; N],\n    k: u32,\n    modulus: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mulout_field: [Field; 3 * N] = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout_field[i + j] += x[i] as Field * redc_param[j] as Field;\n        }\n    }\n\n    let mulout: [u128; 3 * N] = __normalize_limbs(mulout_field, 3 * N - 1);\n\n    // When we apply the barrett reduction, the maximum value of the output will be\n    // <= p * (1 + x/2^{2k})\n    // where p = modulus,\n    //       x = reduction input\n    // if x > p * p, we need k to be larger than modulus_bits()\n    // we hardcode k = 4, which means that the maximum value of x is approx. 16 * p * p\n    // this should be larger than most values put into `evaluate_quadratic_expression`\n    // TODO: try and detect cases where x might be too large at comptime\n    // N.B. BARRETT_REDUCTION_OVERFLOW_BITS affects how `redc_param` is generated.\n    // `redc_param` = 2^{modulus_bits() * 2 + BARRETT_REDUCTION_OVERFLOW_BITS} / modulus\n    // NOTE: very niche edge case error that we need to be aware of:\n    //       N must be large enough to cover the modulus *plus* BARRETT_REDUCTION_OVERFLOW_BITS\n    //       i.e. a 359-bit prime needs (I think) 4 limbs to represent or we may overflow when calling __barrett_reduction\n    let mut quotient = __shr(mulout, (k + k + BARRETT_REDUCTION_OVERFLOW_BITS));\n    // the quotient has bunch of zero limbs now, so we can just take the first N limbs as a result\n    let mut smaller_quotient = [0; N];\n    for i in 0..N {\n        smaller_quotient[i] = quotient[i] as u128;\n    }\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient_full should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = __into_field_array(quotient);\n\n    // quotient_mul_modulus_normalized can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N] = [0; 2 * N];\n\n    // First, accumulate the products into quotient_mul_modulus_normalized\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus_normalized[i + j] +=\n                partial_quotient_full[i] * modulus[j] as Field;\n        }\n    }\n\n    // Then, split the accumulated values and propagate higher bits\n    let long_quotient_mul_modulus_normalized: [u128; 2 * N] =\n        __normalize_limbs(quotient_mul_modulus_normalized, 2 * N);\n    let mut quotient_mul_modulus_normalized: [u128; N] = [0; N];\n    for i in 0..N {\n        quotient_mul_modulus_normalized[i] = long_quotient_mul_modulus_normalized[i];\n    }\n\n    let mut long_remainder = __helper_sub(x, long_quotient_mul_modulus_normalized);\n    // ugly but have to remove a bunch of zeros from this\n    let mut remainder = [0; N];\n    for i in 0..N {\n        remainder[i] = long_remainder[i];\n    }\n    // barrett reduction is quirky so might need to remove a few modulus from the remainder\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n\n    (smaller_quotient, remainder)\n}\n\n/**\n* @brief compute the log of the size of the primitive root\n* @details find the maximum value k where x^k = 1, where x = primitive root\n*          This is needed for our Tonelli-Shanks sqrt algorithm\n**/\npub(crate) unconstrained fn __primitive_root_log_size<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> u32 {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let mut target = __helper_sub(params.modulus, one);\n    let mut result: u32 = 0;\n    for _ in 0..MOD_BITS {\n        let lsb_is_one = (target[0] & 1) == 1;\n        if (lsb_is_one) {\n            break;\n        }\n        result += 1;\n        target = __shr1(target);\n    }\n    result\n}\n\n/**\n* @brief inner loop fn for `find_multiplive_generator`\n* @details recursive function to get around the lack of a `while` keyword\n**/\nunconstrained fn __recursively_find_multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    target: [u128; N],\n    p_minus_one_over_two: [u128; N],\n) -> (bool, [u128; N]) {\n    let exped = __pow(params, target, p_minus_one_over_two);\n    let one: [u128; N] = __one();\n    let neg_one = __neg(params, one);\n    let found = exped == neg_one;\n    let mut result: (bool, [u128; N]) = (found, target);\n    if (!found) {\n        let _target: [u128; N] = __add(params, target, one);\n        result = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n            params,\n            _target,\n            p_minus_one_over_two,\n        );\n    }\n    result\n}\n\n/**\n* @brief find multiplicative generator `g` where `g` is the smallest value that is not a quadratic residue\n*        i.e. smallest g where g^2 = -1\n* @note WARNING if multiplicative generator does not exist, this function will enter an infinite loop!\n**/\npub(crate) unconstrained fn __multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> [u128; N] {\n    let mut target: [u128; N] = __one();\n    let p_minus_one_over_two = __shr1(__helper_sub(params.modulus, __one()));\n    let (_, target) = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n        params,\n        target,\n        p_minus_one_over_two,\n    );\n    target\n}\n\npub(crate) unconstrained fn __tonelli_shanks_sqrt_inner_loop_check<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    t2m: [u128; N],\n    i: u32,\n) -> u32 {\n    let one: [u128; N] = __one();\n    let is_one = t2m == one;\n    let mut result = i;\n    if (!is_one) {\n        let t2m = __mul::<_, MOD_BITS>(params, t2m, t2m);\n        let i = i + 1;\n        result = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, i);\n    }\n    result\n}\n\npub(crate) unconstrained fn __increment<let N: u32>(val: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 1;\n    for i in 0..N {\n        let mut add_term = (val[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift = (120 - limb_shift) as u8;\n    let mask: u128 = (((1 as u128) << limb_shift) - 1) << remainder_shift;\n    result[0] = (input[0 + num_shifted_limbs] >> limb_shift);\n    for i in 1..(N - num_shifted_limbs) {\n        let value = input[i + num_shifted_limbs];\n        result[i] = value >> limb_shift;\n        let remainder: u128 = (value << remainder_shift) & mask;\n        result[i - 1] = result[i - 1] + remainder;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shl<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift: u8 = 120 - limb_shift as u8;\n\n    // 83\n    // limb shift = 1\n    // inside shift = 19 bits to the left\n    // meaning we have 19 carry bits and 41 remainder bits\n    let mask: u128 = (1 as u128 << 120) - 1;\n    //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n    let value = input[0];\n\n    let mut remainder = (value >> remainder_shift);\n    result[num_shifted_limbs] = (value << limb_shift) & mask;\n\n    // shift 84. num shifted = 1\n    for i in 1..((N) - num_shifted_limbs) {\n        let value = input[i];\n        let upshift = ((value << limb_shift) + remainder) & mask;\n        result[i + num_shifted_limbs] = upshift;\n        remainder = (value >> remainder_shift);\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_sub<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    for i in 0..N {\n        borrow = ((rhs[i] + borrow_in) > lhs[i]) as u128;\n        let sub = (borrow << 120) + lhs[i] as u128 - rhs[i] as u128 - borrow_in;\n        result[i] = sub;\n        borrow_in = borrow;\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_add<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr1<let N: u32>(mut input: [u128; N]) -> [u128; N] {\n    let value = input[N - 1];\n    input[N - 1] = value >> 1;\n\n    let mut remainder = (value & 1) << 119;\n\n    for i in 1..N {\n        let value = input[N - 1 - i];\n        input[N - 1 - i] = (value >> 1) + remainder;\n        remainder = (value << 119) & TWO_POW_119;\n    }\n    input\n}\n\npub(crate) unconstrained fn __get_msb<let N: u32>(val: [u128; N]) -> u32 {\n    let mut count = 0;\n    for i in 0..N {\n        let v = val[((N) - 1 - i)];\n        let v_low = v as u64 % TWO_POW_60 as u64;\n        let v_high = ((v - v_low as u128) / TWO_POW_60) as u64;\n        if (v_high > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2)) + get_msb64(v_high);\n            break;\n        }\n        if (v_low > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2 + 1)) + get_msb64(v_low);\n            break;\n        }\n    }\n    count\n}\n\npub(crate) fn __get_bit<let N: u32>(input: [u128; N], bit: u32) -> bool {\n    let segment_index: u32 = bit / 120;\n    let uint_index = bit % 120;\n    let limb: u128 = input[segment_index];\n    let value = (limb >> uint_index as u8) & 1;\n    value == 1\n}\n\npub(crate) fn __into_field_array<let N: u32>(input: [u128; N]) -> [Field; N] {\n    let mut result: [Field; N] = [0; N];\n    for i in 0..N {\n        result[i] = input[i] as Field;\n    }\n    result\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/unconstrained_helpers.nr"},"120":{"source":"use crate::fns::constrained_ops::derive_from_seed;\nuse crate::fns::unconstrained_helpers::{\n    __barrett_reduction, __get_bit, __get_msb, __helper_add, __helper_sub, __increment,\n    __multiplicative_generator, __primitive_root_log_size, __shl, __shr,\n    __tonelli_shanks_sqrt_inner_loop_check,\n};\nuse crate::params::BigNumParams as P;\nuse crate::utils::split_bits;\nuse super::unconstrained_helpers::__shr1;\n\npub(crate) unconstrained fn __one<let N: u32>() -> [u128; N] {\n    let mut limbs: [u128; N] = [0; N];\n    limbs[0] = 1;\n    limbs\n}\n\n/// Deterministically derives a big_num from a seed value.\n///\n/// Takes a seed byte array and generates a big_num in the range [0, modulus-1].\n///\n/// ## Value Parameters\n///\n/// - `params`: The BigNum parameters containing modulus and reduction info\n/// - `seed`:  Input seed bytes to derive from.\n///\n/// ## Returns\n///\n///  An array of field elements derived from the seed (the limbs of the big_num)\npub(crate) unconstrained fn __derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let out = derive_from_seed::<N, MOD_BITS, SeedBytes>(params, seed);\n    out\n}\n\npub(crate) unconstrained fn __eq<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> bool {\n    lhs == rhs\n}\n\npub(crate) unconstrained fn __is_zero<let N: u32>(limbs: [u128; N]) -> bool {\n    let mut result: bool = true;\n    for i in 0..N {\n        result = result & (limbs[i] == 0);\n    }\n\n    result\n}\n\n/**\n* @brief given an input `x`, compute `2p - x` (unconstrained)\n*\n* @description we subtract the input from double the modulus, because all constrained BigNum operations\n*              only guarantee that the output is in the range [0, ceil(log2(p))].\n*              I.E. the input may be larger than the modulus `p`.\n*              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n*              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n*              because such a check is expensive and usually unneccesary.\n*/\npub(crate) unconstrained fn __neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> [u128; N] {\n    let f: [u128; N] = limbs;\n    __helper_sub(params.modulus, f)\n}\n\npub(crate) unconstrained fn __add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    // check if the result is greater than the modulus\n    if __gte(result, params.modulus) {\n        __helper_sub(result, params.modulus)\n    } else {\n        result\n    }\n}\n\n/**\n* @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n* @description see `__neg` for why we use 2p instead of p\n**/\npub(crate) unconstrained fn __sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    __add(params, lhs, __neg(params, rhs))\n}\n\npub(crate) unconstrained fn __mul_with_quotient<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mul: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..N {\n        for j in 0..N {\n            mul[i + j] += (lhs[i] as Field * rhs[j] as Field);\n        }\n    }\n    let to_reduce: [u128; (N * 2)] = split_bits::__normalize_limbs(mul, 2 * N);\n    let (q, r) = __barrett_reduction(to_reduce, params.redc_param, MOD_BITS, params.modulus);\n    // ([0; N], [0; N])\n    (q, r)\n}\n\npub(crate) unconstrained fn __mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let (_, b) = __mul_with_quotient::<_, MOD_BITS>(params, lhs, rhs);\n    b\n}\n\npub(crate) unconstrained fn __div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    let inv_divisor: [u128; N] = __invmod::<_, MOD_BITS>(params, divisor);\n    __mul::<_, MOD_BITS>(params, numerator, inv_divisor)\n}\n\n/**\n* @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) unconstrained fn __udiv_mod<let N: u32>(\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut quotient: [u128; N] = [0; N];\n    let mut remainder: [u128; N] = numerator;\n\n    let b = divisor;\n    let numerator_msb = __get_msb(numerator);\n    let divisor_msb = __get_msb(divisor);\n    if divisor_msb > numerator_msb {\n        ([0; N], numerator)\n    } else {\n        let mut bit_difference = __get_msb(remainder) - __get_msb(divisor);\n        let mut accumulator: [u128; N] = __one();\n        let mut divisor = __shl(divisor, bit_difference);\n        accumulator = __shl(accumulator, bit_difference);\n\n        if (__gte(divisor, __increment(remainder))) {\n            divisor = __shr1(divisor);\n            accumulator = __shr1(accumulator);\n        }\n\n        for _ in 0..(N * 120) {\n            if (__gte(remainder, b) == false) {\n                break;\n            }\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (__gte(remainder, divisor)) {\n                remainder = __helper_sub(remainder, divisor);\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient = __helper_add(quotient, accumulator);\n            }\n            divisor = __shr1(divisor); // >>= 1;\n            accumulator = __shr1(accumulator); //  >>= 1;\n        }\n\n        (quotient, remainder)\n    }\n}\n\npub(crate) unconstrained fn __invmod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    let one = __one();\n    let exp = __helper_sub(params.modulus, __helper_add(one, one));\n    __pow::<_, MOD_BITS>(params, val, exp)\n}\n\npub(crate) unconstrained fn __pow<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n    exponent: [u128; N],\n) -> [u128; N] {\n    let x = exponent;\n    let num_bits = MOD_BITS + 1;\n\n    let mut accumulator: [u128; N] = __one::<N>();\n\n    for i in 0..num_bits {\n        accumulator = __mul::<_, MOD_BITS>(params, accumulator, accumulator);\n        if __get_bit(x, num_bits - i - 1) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, val);\n        }\n    }\n    accumulator\n}\n\npub(crate) unconstrained fn __batch_invert<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n) -> [[u128; N]; M] {\n    // TODO: ugly! Will fail if input slice is empty\n\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]; M] = std::mem::zeroed();\n\n    for i in 0..M {\n        temporaries[i] = accumulator;\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]; M] = [[0; N]; M];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..M {\n        let idx = M - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __batch_invert_slice<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]],\n) -> [[u128; N]] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]] = &[];\n    for i in 0..x.len() {\n        temporaries = temporaries.push_back(accumulator);\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]] = [];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..x.len() {\n        let idx = x.len() - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result = result.push_front(T0);\n        } else {\n            result = result.push_front([0; N]);\n        };\n    }\n\n    result\n}\n\n/**\n* @brief compute a modular square root using the Tonelli-Shanks algorithm\n* @details only use for prime fields! Function may infinite loop if used for non-prime fields\n* @note this is unconstrained fn. To constrain a square root, validate that output^2 = self\n* TODO: create fn that constrains nonexistence of square root (i.e. find x where x^2 = -self)\n**/\npub(crate) unconstrained fn __tonelli_shanks_sqrt<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    input: [u128; N],\n) -> std::option::Option<[u128; N]> {\n    // Tonelli-shanks algorithm begins by finding a field element Q and integer S,\n    // such that (p - 1) = Q.2^{s}\n    // We can compute the square root of a, by considering a^{(Q + 1) / 2} = R\n    // Once we have found such an R, we have\n    // R^{2} = a^{Q + 1} = a^{Q}a\n    // If a^{Q} = 1, we have found our square root.\n    // Otherwise, we have a^{Q} = t, where t is a 2^{s-1}'th root of unity.\n    // This is because t^{2^{s-1}} = a^{Q.2^{s-1}}.\n    // We know that (p - 1) = Q.w^{s}, therefore t^{2^{s-1}} = a^{(p - 1) / 2}\n    // From Euler's criterion, if a is a quadratic residue, a^{(p - 1) / 2} = 1\n    // i.e. t^{2^{s-1}} = 1\n    // To proceed with computing our square root, we want to transform t into a smaller subgroup,\n    // specifically, the (s-2)'th roots of unity.\n    // We do this by finding some value b,such that\n    // (t.b^2)^{2^{s-2}} = 1 and R' = R.b\n    // Finding such a b is trivial, because from Euler's criterion, we know that,\n    // for any quadratic non-residue z, z^{(p - 1) / 2} = -1\n    // i.e. z^{Q.2^{s-1}} = -1\n    // => z^Q is a 2^{s-1}'th root of -1\n    // => z^{Q^2} is a 2^{s-2}'th root of -1\n    // Since t^{2^{s-1}} = 1, we know that t^{2^{s - 2}} = -1\n    // => t.z^{Q^2} is a 2^{s - 2}'th root of unity.\n    // We can iteratively transform t into ever smaller subgroups, until t = 1.\n    // At each iteration, we need to find a new value for b, which we can obtain\n    // by repeatedly squaring z^{Q}\n    let one = __one();\n    let primitive_root_log_size = __primitive_root_log_size::<_, MOD_BITS>(params);\n    let Q = __shr(\n        __helper_sub(params.modulus, one),\n        primitive_root_log_size - 1,\n    );\n    let two = __helper_add(one, one);\n    let Q_minus_one_over_two = __shr(__helper_sub(Q, two), 2);\n    let mut z = __multiplicative_generator::<_, MOD_BITS>(params); // the generator is a non-residue\n    let mut b = __pow::<_, MOD_BITS>(params, input, Q_minus_one_over_two);\n    let mut r = __mul::<_, MOD_BITS>(params, input, b);\n    let mut t = __mul::<_, MOD_BITS>(params, r, b);\n    let mut check: [u128; N] = t;\n    for _ in 0..primitive_root_log_size - 1 {\n        check = __mul::<_, MOD_BITS>(params, check, check);\n    }\n    let mut result = Option::none();\n    if (__eq(check, one)) {\n        let mut t1 = __pow::<_, MOD_BITS>(params, z, Q_minus_one_over_two);\n        let mut t2 = __mul::<_, MOD_BITS>(params, t1, z);\n        let mut c = __mul::<_, MOD_BITS>(params, t2, t1);\n        let mut m: u32 = primitive_root_log_size;\n        // tonelli shanks inner 1\n        // (if t2m == 1) then skip\n        // else increase i and square t2m and go again\n        // algorithm runtime should only be max the number of bits in modulus\n        for _ in 0..MOD_BITS {\n            if (__eq(t, one)) {\n                result = Option::some(r);\n                break;\n            }\n            let mut t2m = t;\n            // while loop time\n            let i = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, 0);\n            let mut j = m - i - 1;\n            b = c;\n            for _ in 0..j {\n                // how big\n                if (j == 0) {\n                    break;\n                }\n                b = __mul(params, b, b);\n                //j -= 1;\n            }\n            c = __mul::<_, MOD_BITS>(params, b, b);\n            t = __mul::<_, MOD_BITS>(params, t, c);\n            r = __mul::<_, MOD_BITS>(params, r, b);\n            m = i;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __gte<let N: u32, let MOD_BITS: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let mut result = false;\n    let mut early_exit = false;\n    for i in 0..(N) {\n        let idx = (N) - 1 - i;\n        if (rhs[idx] == lhs[idx]) {\n            continue;\n        }\n\n        result = rhs[idx] < lhs[idx];\n        early_exit = true;\n        break;\n    }\n    if early_exit {\n        result\n    } else {\n        lhs[0] == rhs[0]\n    }\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/unconstrained_ops.nr"},"130":{"source":"use crate::constants::TWO_POW_120;\n\nunconstrained fn split_120_bits(mut x: Field) -> (u128, u128) {\n    // Here we're taking advantage of truncating 128 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let low = (x as u128) % TWO_POW_120;\n    let high = ((x - low as Field) / TWO_POW_120 as Field) as u128;\n    (low, high)\n}\n\npub(crate) unconstrained fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32,\n) -> [u128; N] {\n    let mut normalized: [u128; N] = [0; N];\n    let mut next: Field = input[0];\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(next);\n        normalized[i] = lo as u128;\n        next = input[i + 1] + hi as Field;\n    }\n    {\n        let (lo, hi) = split_120_bits(next);\n        normalized[range - 1] = lo as u128;\n        assert(hi == 0);\n    }\n    normalized\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/utils/split_bits.nr"}},"names":["main"],"brillig_names":["__div2","__from_field","__validate_gt_remainder","__div","__compute_quadratic_expression_with_borrow_flags","decompose_hint","lte_hint","directive_invert","directive_integer_quotient","directive_to_radix"]}