{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":16661243835663204162,"abi":{"parameters":[{"name":"input_state","type":{"kind":"struct","path":"fog_of_war_chess::GameState","fields":[{"name":"game_ended","type":{"kind":"boolean"}},{"name":"move_count","type":{"kind":"field"}},{"name":"mpc_state","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::RoundState","fields":[{"name":"round_number","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"user_encrypt_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"user_mask_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"previous_output_states","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::UserOutputState","fields":[{"name":"ciphertext","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::common::crypto::Ciphertext","fields":[{"name":"data","type":{"kind":"array","length":128,"type":{"kind":"field"}}}]}},{"name":"mask_commitments","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}},{"name":"user_updated_mask_commitments","type":{"kind":"array","length":2,"type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}}}]}}}]}}]},"visibility":"private"},{"name":"user_state","type":{"kind":"struct","path":"fog_of_war_chess::UserState","fields":[{"name":"encrypt_secret","type":{"kind":"field"}},{"name":"mask_secret","type":{"kind":"field"}},{"name":"visible_squares","type":{"kind":"array","length":64,"type":{"kind":"field"}}},{"name":"game_state","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"fog_of_war_chess::piece::Piece","fields":[{"name":"id","type":{"kind":"field"}},{"name":"player_id","type":{"kind":"field"}},{"name":"has_moved","type":{"kind":"field"}}]}}}]},"visibility":"private"},{"name":"move_data","type":{"kind":"struct","path":"fog_of_war_chess::MoveData","fields":[{"name":"x1","type":{"kind":"field"}},{"name":"y1","type":{"kind":"field"}},{"name":"x2","type":{"kind":"field"}},{"name":"y2","type":{"kind":"field"}}]},"visibility":"private"},{"name":"player_id","type":{"kind":"field"},"visibility":"private"}],"return_type":{"abi_type":{"kind":"tuple","fields":[{"kind":"struct","path":"fog_of_war_chess::GameState","fields":[{"name":"game_ended","type":{"kind":"boolean"}},{"name":"move_count","type":{"kind":"field"}},{"name":"mpc_state","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::RoundState","fields":[{"name":"round_number","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"user_encrypt_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"user_mask_secret_hashes","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"previous_output_states","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"fog_of_war_chess::mpclib::selective_disclosure::selective_disclosure::UserOutputState","fields":[{"name":"ciphertext","type":{"kind":"struct","path":"fog_of_war_chess::mpclib::common::crypto::Ciphertext","fields":[{"name":"data","type":{"kind":"array","length":128,"type":{"kind":"field"}}}]}},{"name":"mask_commitments","type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}},{"name":"user_updated_mask_commitments","type":{"kind":"array","length":2,"type":{"kind":"array","length":64,"type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]}}}}]}}}]}}]},{"kind":"struct","path":"fog_of_war_chess::MoveHashes","fields":[{"name":"input_game_state","type":{"kind":"field"}},{"name":"input_user_state","type":{"kind":"field"}},{"name":"output_game_state","type":{"kind":"field"}},{"name":"output_user_state","type":{"kind":"field"}}]}]},"visibility":"public"},"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"6485997221020871071":{"error_kind":"string","string":"call to assert_max_bit_size"},"13265554733035650515":{"error_kind":"string","string":"BigNum::validate_gt check fails"},"14225679739041873922":{"error_kind":"string","string":"Index out of bounds"},"16761564377371454734":{"error_kind":"string","string":"Array index out of bounds"},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"}}},"bytecode":"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","debug_symbols":"","file_map":{"5":{"source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields_as_written().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u128 {\n    fn eq(self, other: u128) -> bool {\n        self == other\n    }\n}\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u128 {\n    fn cmp(self, other: u128) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use crate::cmp::{max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n","path":"std/cmp.nr"},"16":{"source":"use crate::cmp::Eq;\nuse crate::ops::arith::{Add, Neg, Sub};\n\n/// A point on the embedded elliptic curve\n/// By definition, the base field of the embedded curve is the scalar field of the proof system curve, i.e the Noir Field.\n/// x and y denotes the Weierstrass coordinates of the point, if is_infinite is false.\npub struct EmbeddedCurvePoint {\n    pub x: Field,\n    pub y: Field,\n    pub is_infinite: bool,\n}\n\nimpl EmbeddedCurvePoint {\n    /// Elliptic curve point doubling operation\n    /// returns the doubled point of a point P, i.e P+P\n    pub fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    /// Returns the null element of the curve; 'the point at infinity'\n    pub fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    /// Adds two points P+Q, using the curve addition formula, and also handles point at infinity\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    /// Points subtraction operation, using addition and negation\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    /// Negates a point P, i.e returns -P, by negating the y coordinate.\n    /// If the point is at infinity, then the result is also at infinity.\n    fn neg(self) -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: self.x, y: -self.y, is_infinite: self.is_infinite }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    /// Checks whether two points are equal\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite)\n            | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\n/// Scalar for the embedded curve represented as low and high limbs\n/// By definition, the scalar field of the embedded curve is base field of the proving system curve.\n/// It may not fit into a Field element, so it is represented with two Field elements; its low and high limbs.\npub struct EmbeddedCurveScalar {\n    pub lo: Field,\n    pub hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    #[field(bn254)]\n    pub fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a, b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n\n    //Bytes to scalar: take the first (after the specified offset) 16 bytes of the input as the lo value, and the next 16 bytes as the hi value\n    #[field(bn254)]\n    pub(crate) fn from_bytes(bytes: [u8; 64], offset: u32) -> EmbeddedCurveScalar {\n        let mut v = 1;\n        let mut lo = 0 as Field;\n        let mut hi = 0 as Field;\n        for i in 0..16 {\n            lo = lo + (bytes[offset + 31 - i] as Field) * v;\n            hi = hi + (bytes[offset + 15 - i] as Field) * v;\n            v = v * 256;\n        }\n        let sig_s = crate::embedded_curve_ops::EmbeddedCurveScalar { lo, hi };\n        sig_s\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, other: Self) -> bool {\n        (other.hi == self.hi) & (other.lo == self.lo)\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the\n// underlying proof system.\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> EmbeddedCurvePoint\n// docs:end:multi_scalar_mul\n{\n    let point_array = multi_scalar_mul_array_return(points, scalars);\n    EmbeddedCurvePoint { x: point_array[0], y: point_array[1], is_infinite: point_array[2] as bool }\n}\n\n#[foreign(multi_scalar_mul)]\npub(crate) fn multi_scalar_mul_array_return<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> [Field; 3] {}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(scalar: EmbeddedCurveScalar) -> EmbeddedCurvePoint\n// docs:end:fixed_base_scalar_mul\n{\n    let g1 = EmbeddedCurvePoint {\n        x: 1,\n        y: 17631683881184975370165255887551781615748388533673675138860,\n        is_infinite: false,\n    };\n    multi_scalar_mul([g1], [scalar])\n}\n\n/// This function only assumes that the points are on the curve\n/// It handles corner cases around the infinity point causing some overhead compared to embedded_curve_add_not_nul and embedded_curve_add_unsafe\n// This is a hack because returning an `EmbeddedCurvePoint` from a foreign function in brillig returns a [BrilligVariable::SingleAddr; 2] rather than BrilligVariable::BrilligArray\n// as is defined in the brillig bytecode format. This is a workaround which allows us to fix this without modifying the serialization format.\n// docs:start:embedded_curve_add\npub fn embedded_curve_add(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    // docs:end:embedded_curve_add\n    let x_coordinates_match = point1.x == point2.x;\n    let y_coordinates_match = point1.y == point2.y;\n    let double_predicate = (x_coordinates_match & y_coordinates_match);\n    let infinity_predicate = (x_coordinates_match & !y_coordinates_match);\n    let point1_1 = EmbeddedCurvePoint {\n        x: point1.x + (x_coordinates_match as Field),\n        y: point1.y,\n        is_infinite: x_coordinates_match,\n    };\n    // point1_1 is guaranteed to have a different abscissa than point2\n    let mut result = embedded_curve_add_unsafe(point1_1, point2);\n    result.is_infinite = x_coordinates_match;\n\n    // dbl if x_match, y_match\n    let double = embedded_curve_add_unsafe(point1, point1);\n    result = if double_predicate { double } else { result };\n\n    // infinity if x_match, !y_match\n    if point1.is_infinite {\n        result = point2;\n    }\n    if point2.is_infinite {\n        result = point1;\n    }\n    let mut result_is_infinity = infinity_predicate & (!point1.is_infinite & !point2.is_infinite);\n    result.is_infinite = result_is_infinity | (point1.is_infinite & point2.is_infinite);\n    result\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(\n    _point1: EmbeddedCurvePoint,\n    _point2: EmbeddedCurvePoint,\n) -> [Field; 3] {}\n\n/// This function assumes that:\n/// The points are on the curve, and\n/// The points don't share an x-coordinate, and\n/// Neither point is the infinity point.\n/// If it is used with correct input, the function ensures the correct non-zero result is returned.\n/// Except for points on the curve, the other assumptions are checked by the function. It will cause assertion failure if they are not respected.\npub fn embedded_curve_add_not_nul(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    assert(point1.x != point2.x);\n    assert(!point1.is_infinite);\n    assert(!point2.is_infinite);\n    embedded_curve_add_unsafe(point1, point2)\n}\n\n/// Unsafe ec addition\n/// If the inputs are the same, it will perform a doubling, but only if point1 and point2 are the same variable.\n/// If they have the same value but are different variables, the result will be incorrect because in this case\n/// it assumes (but does not check) that the points' x-coordinates are not equal.\n/// It also assumes neither point is the infinity point.\npub fn embedded_curve_add_unsafe(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    let point_array = embedded_curve_add_array_return(point1, point2);\n    let x = point_array[0];\n    let y = point_array[1];\n\n    EmbeddedCurvePoint { x, y, is_infinite: false }\n}\n","path":"std/embedded_curve_ops.nr"},"17":{"source":"use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(mut x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_64 = (x as u64) as Field;\n\n    let high = (x - low_upper_64) / TWO_POW_64;\n    let low = low_upper_64 * TWO_POW_64 + low_lower_64;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    // Safety: borrow is enforced to be boolean due to its type.\n    // if borrow is 0, it asserts that (alo > blo && ahi >= bhi)\n    // if borrow is 1, it asserts that (alo <= blo && ahi > bhi)\n    unsafe {\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        // Safety: decomposition is properly checked below\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(\n            // Safety: already unconstrained\n            unsafe { field_less_than(b, a) },\n        );\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unsafe in unconstrained\n        unsafe {\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        // Safety: Take a hint of the comparison and verify it\n        unsafe {\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"18":{"source":"pub mod bn254;\nuse crate::{runtime::is_unconstrained, static_assert};\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        static_assert(\n            BIT_SIZE < modulus_num_bits() as u32,\n            \"BIT_SIZE must be less than modulus_num_bits\",\n        );\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    fn _to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    fn _to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_le_bits\n        let bits = self._to_le_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[N - 1 - i] != p[N - 1 - i]) {\n                        assert(p[N - 1 - i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_be_bits\n        let bits = self._to_be_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the decomposition does not overflow the modulus\n            let p = modulus_be_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[i] != p[i]) {\n                        assert(p[i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            static_assert(1 < radix, \"radix must be greater than 1\");\n            static_assert(radix <= 256, \"radix must be less than or equal to 256\");\n            static_assert(radix & (radix - 1) == 0, \"radix must be a power of 2\");\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // `_radix` must be less than 256\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unconstrained context\n        unsafe {\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use crate::{panic::panic, runtime};\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        // 259, in base 256, big endian, is [1, 3].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 1, 3]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        // 259, in base 256, little endian, is [3, 1].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [3, 1, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test(should_fail_with = \"radix must be greater than 1\")]\n    fn test_to_le_radix_1() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(1);\n        } else {\n            panic(f\"radix must be greater than 1\");\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be greater than 2\n    //#[test]\n    //fn test_to_le_radix_brillig_1() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(1);\n    //        crate::println(out);\n    //        let expected = [0; 8];\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test(should_fail_with = \"radix must be a power of 2\")]\n    fn test_to_le_radix_3() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(3);\n        } else {\n            panic(f\"radix must be a power of 2\");\n        }\n    }\n\n    #[test]\n    fn test_to_le_radix_brillig_3() {\n        // this test should only fail in constrained mode\n        if runtime::is_unconstrained() {\n            let field = 1;\n            let out: [u8; 8] = field.to_le_radix(3);\n            let mut expected = [0; 8];\n            expected[0] = 1;\n            assert(out == expected, \"unexpected result\");\n        }\n    }\n\n    #[test(should_fail_with = \"radix must be less than or equal to 256\")]\n    fn test_to_le_radix_512() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(512);\n        } else {\n            panic(f\"radix must be less than or equal to 256\")\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be less than 512\n    //#[test]\n    //fn test_to_le_radix_brillig_512() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(512);\n    //        let mut expected = [0; 8];\n    //        expected[0] = 1;\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"25":{"source":"use crate::default::Default;\nuse crate::hash::Hasher;\n\ncomptime global RATE: u32 = 3;\n\npub struct Poseidon2 {\n    cache: [Field; 3],\n    state: [Field; 4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        Poseidon2::hash_internal(input, message_size, message_size != N)\n    }\n\n    pub fn new(iv: Field) -> Poseidon2 {\n        let mut result =\n            Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) {\n        // add the cache into sponge state\n        for i in 0..RATE {\n            // We effectively zero-pad the cache by only adding to the state\n            // cache that is less than the specified `cache_size`\n            if i < self.cache_size {\n                self.state[i] += self.cache[i];\n            }\n        }\n        self.state = crate::hash::poseidon2_permutation(self.state, 4);\n    }\n\n    fn absorb(&mut self, input: Field) {\n        assert(!self.squeeze_mode);\n        if self.cache_size == RATE {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        assert(!self.squeeze_mode);\n        // If we're in absorb mode, apply sponge permutation to compress the cache.\n        self.perform_duplex();\n        self.squeeze_mode = true;\n\n        // Pop one item off the top of the permutation and return it.\n        self.state[0]\n    }\n\n    fn hash_internal<let N: u32>(\n        input: [Field; N],\n        in_len: u32,\n        is_variable_length: bool,\n    ) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv: Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\npub struct Poseidon2Hasher {\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv: Field = (self._state.len() as Field) * 18446744073709551616; // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher { _state: &[] }\n    }\n}\n","path":"std/hash/poseidon2.nr"},"61":{"source":"use fog_of_war_chess::{empty_game_state, GameState, move, MoveData, MoveHashes, UserState};\n\nfn main(\n    input_state: GameState,\n    user_state: UserState,\n    move_data: MoveData,\n    player_id: Field,\n) -> pub (GameState, MoveHashes) {\n    move(input_state, user_state, move_data, player_id)\n}\nuse std::hash::poseidon2::Poseidon2::hash as poseidon2;\n\n#[test]\nfn test_main() {\n    let mut game_state: GameState = empty_game_state();\n    let mut alice_state: UserState = UserState::default();\n    let mut bob_state: UserState = UserState::default();\n\n    alice_state.encrypt_secret = poseidon2([1], 1);\n    alice_state.mask_secret = poseidon2([2], 1);\n    bob_state.encrypt_secret = poseidon2([3], 1);\n    bob_state.mask_secret = poseidon2([4], 1);\n\n    game_state =\n        game_state.commit_to_user_secrets(alice_state.encrypt_secret, alice_state.mask_secret, 0);\n    game_state =\n        game_state.commit_to_user_secrets(bob_state.encrypt_secret, bob_state.mask_secret, 1);\n\n    // alice moves pawn\n\n    let alice_move: MoveData = MoveData { x1: 4, y1: 1, x2: 4, y2: 3 };\n    let _ = move(game_state, alice_state, alice_move, 0);\n}\n","path":"/Users/zac/chess-app/circuit/src/main.nr"},"64":{"source":"mod benchmarks;\n\nuse mpclib::selective_disclosure::selective_disclosure::{\n    consume_round_commitments, create_round_commitments, RoundState, UserOutputState,\n};\n\nuse crate::validate_move::validate_move_and_update_board_state;\n\nuse crate::piece::{Piece, PieceData, Pieces};\n\nmod update_vision;\nmod vision_table;\nmod piece;\nmod validate_move;\nmod api;\n\nuse update_vision::update_vision;\n\nuse std::hash::poseidon2::Poseidon2::hash as poseidon2;\n\ntype RoundMpcState = RoundState<64, 2>;\npub struct GameState {\n    pub game_ended: bool,\n    pub move_count: Field,\n    pub mpc_state: RoundMpcState,\n}\nimpl std::default::Default for GameState {\n    fn default() -> Self {\n        GameState { game_ended: false, move_count: 0, mpc_state: RoundMpcState::default() }\n    }\n}\n\nimpl GameState {\n    pub fn hash(self) -> Field {\n        let buffer: [Field; 3] = [self.game_ended as Field, self.move_count, self.mpc_state.hash()];\n        poseidon2(buffer, 3)\n    }\n    pub fn commit_to_user_secrets(\n        self,\n        encrypt_secret: Field,\n        mask_secret: Field,\n        player_id: Field,\n    ) -> GameState {\n        let mut updated = self;\n\n        let secret_hashes = [poseidon2([encrypt_secret, -1], 2), poseidon2([mask_secret, -1], 2)];\n        updated.mpc_state.user_encrypt_secret_hashes[player_id] = secret_hashes[0];\n        updated.mpc_state.user_mask_secret_hashes[player_id] = secret_hashes[1];\n        updated\n    }\n}\n\npub struct MoveData {\n    pub x1: Field,\n    pub y1: Field,\n    pub x2: Field,\n    pub y2: Field,\n}\nimpl MoveData {\n    fn new(x1: Field, y1: Field, x2: Field, y2: Field) -> Self {\n        MoveData { x1, y1, x2, y2 }\n    }\n}\n\npub struct UserState {\n    pub encrypt_secret: Field,\n    pub mask_secret: Field,\n    pub visible_squares: [Field; 64],\n    pub game_state: [Piece; 64],\n}\n\nimpl std::default::Default for UserState {\n    fn default() -> Self {\n        UserState {\n            encrypt_secret: 0,\n            mask_secret: 0,\n            visible_squares: [0; 64],\n            game_state: [Piece::default(); 64],\n        }\n    }\n}\n\nimpl UserState {\n\n    pub(crate) fn initialize(self, player_id: Field) -> Self {\n        let first_32_square_visibility = 1 - player_id;\n        let last_32_square_visibility = player_id;\n        assert_eq(WHITE_PLAYER_ID, 0);\n        assert_eq(BLACK_PLAYER_ID, 1);\n        let mut visibility: [Field; 64] = [0; 64];\n        for i in 0..32 {\n            visibility[i] = first_32_square_visibility;\n            visibility[i + 32] = last_32_square_visibility;\n        }\n\n        let white_game_state: [Piece; 16] = [\n            Piece { id: Pieces::ROOK, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::QUEEN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KING, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::ROOK, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::WHITE_PAWN, player_id: WHITE_PLAYER_ID, has_moved: 0 },\n        ];\n\n        let black_game_state: [Piece; 16] = [\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BLACK_PAWN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::ROOK, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::QUEEN, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KING, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::BISHOP, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::KNIGHT, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n            Piece { id: Pieces::ROOK, player_id: BLACK_PLAYER_ID, has_moved: 0 },\n        ];\n\n        let mut game_state: [Piece; 64] = [Piece::default(); 64];\n        for i in 0..16 {\n            if (player_id == WHITE_PLAYER_ID) {\n                game_state[i] = white_game_state[i];\n            } else {\n                game_state[i + 48] = black_game_state[i];\n            }\n        }\n        UserState {\n            encrypt_secret: self.encrypt_secret,\n            mask_secret: self.mask_secret,\n            visible_squares: visibility,\n            game_state,\n        }\n    }\n\n    fn encode_game_state(self) -> [Field; 64] {\n        let mut r: [Field; 64] = [0; 64];\n        for i in 0..64 {\n            r[i] = self.game_state[i].encode();\n        }\n        r\n    }\n\n    fn hash(self) -> Field {\n        let encoded = self.encode_game_state();\n\n        let mut hash_buffer: [Field; 130] = [0; 130];\n        for i in 0..64 {\n            hash_buffer[i] = encoded[i];\n            hash_buffer[i + 64] = self.visible_squares[i];\n        }\n        hash_buffer[128] = self.encrypt_secret;\n        hash_buffer[129] = self.mask_secret;\n        poseidon2(hash_buffer, 130)\n    }\n}\nglobal BLACK_PLAYER_ID: Field = 1;\nglobal WHITE_PLAYER_ID: Field = 0;\n\nstruct AdditionalMoveData {\n    extra_state_update: PieceData,\n    extra_state_update_needed: bool,\n    extra_state_removal: PieceData,\n    extra_state_removal_needed: bool,\n}\nimpl std::default::Default for AdditionalMoveData {\n    fn default() -> Self {\n        AdditionalMoveData {\n            extra_state_update: PieceData::default(),\n            extra_state_update_needed: false,\n            extra_state_removal: PieceData::default(),\n            extra_state_removal_needed: false,\n        }\n    }\n}\n\npub fn consume_opponent_move_and_update_game_state(\n    input_state: GameState,\n    user_state: UserState,\n    player_id: Field,\n) -> UserState {\n    let opponent_output_state = consume_round_commitments(\n        user_state.mask_secret,\n        input_state.mpc_state,\n        player_id as u32,\n    );\n\n    let mut new_state = user_state;\n    // We don't need to check the move is legal, as black will have validated this when making a move proof\n    // TODO: EN PASSANT DOES NOT WORK BECAUSE WE NEED TO DELETE A SQUARE AND REPLACE WITH NOTHING\n    for i in 0..64 {\n        let is_some = opponent_output_state[0][i].is_some() as Field;\n        // if (opponent_output_state[0][i].is_some()) {\n        let decoded_packed = opponent_output_state[0][i].unwrap_unchecked();\n        let decoded: Piece = Piece::decode(decoded_packed);\n\n        let decoded_is_empty = (decoded.id == Pieces::EMPTY_SQUARE) as Field;\n        let original_square_is_not_empty =\n            (user_state.game_state[i].id != Pieces::EMPTY_SQUARE) as Field;\n        let original_square_not_player = (user_state.game_state[i].player_id != player_id) as Field;\n\n        let update_square = (1 - decoded_is_empty) * is_some;\n        let delete_square =\n            decoded_is_empty * original_square_is_not_empty * original_square_not_player * is_some;\n        std::as_witness(update_square);\n        std::as_witness(delete_square);\n        let leave_square_alone = (1 - update_square) * (1 - delete_square);\n        std::as_witness(leave_square_alone);\n\n        let original_packed = user_state.game_state[i].encode();\n\n        let updated_square = original_packed * leave_square_alone + decoded_packed * update_square;\n\n        // if leave_square_alone, piece is opponent piece and square is not visible, make square invisible\n        let square_not_visible = (1 - is_some);\n        let lost_vision_on_square =\n            square_not_visible * original_square_is_not_empty * original_square_not_player;\n        let updated_square = updated_square * (1 - lost_vision_on_square);\n        new_state.game_state[i] = Piece::decode(updated_square);\n    }\n\n    new_state\n}\n\nunconstrained fn __div2(input: Field) -> u32 {\n    let r = input as u32;\n    r / 2\n}\n\npub struct MoveHashes {\n    pub input_game_state: Field,\n    pub input_user_state: Field,\n    pub output_game_state: Field,\n    pub output_user_state: Field,\n}\nimpl std::default::Default for MoveHashes {\n    fn default() -> Self {\n        MoveHashes {\n            input_game_state: 0,\n            input_user_state: 0,\n            output_game_state: 0,\n            output_user_state: 0,\n        }\n    }\n}\n\npub fn move(\n    input_state: GameState,\n    user_state: UserState,\n    move_data: MoveData,\n    player_id: Field,\n) -> (GameState, MoveHashes) {\n    let input_state_hash = input_state.hash();\n    let input_user_state_hash = user_state.hash();\n    assert((player_id == WHITE_PLAYER_ID) | (player_id == BLACK_PLAYER_ID));\n    assert_eq(input_state.game_ended, false);\n    // Safety: cheapish check to see if player_id is correct. If move_count = even, white's turn. odd = black's turn\n    let move_count_div2 = unsafe { __div2(input_state.move_count) };\n    assert_eq(move_count_div2 as Field * 2 + player_id, input_state.move_count);\n    let mut user_state = user_state;\n    if ((input_state.move_count == 0) | (input_state.move_count == 1)) {\n        user_state = UserState::initialize(user_state, player_id);\n    }\n\n    // TODO: we need to validate that the provided user state is the same as a user state value that white previously committed to\n    // we can just output the user state hash and the game state hash and have a higher level fn handle it\n    move_data.x1.assert_max_bit_size::<3>();\n    move_data.x2.assert_max_bit_size::<3>();\n    move_data.y1.assert_max_bit_size::<3>();\n    move_data.y2.assert_max_bit_size::<3>();\n\n    let mut user_state: UserState =\n        consume_opponent_move_and_update_game_state(input_state, user_state, player_id);\n\n    // Validate Move\n    // Update Game State\n    let starting_piece = user_state.game_state[move_data.x1 + move_data.y1 * 8];\n    // let ending_piece = user_state.game_state[move_data.x2 + move_data.y2 * 8];\n    let starting_piece_data: PieceData =\n        PieceData { id: starting_piece.id, x: move_data.x1, y: move_data.y1, exists: 1 };\n    let ending_piece_data: PieceData =\n        PieceData { id: starting_piece.id, x: move_data.x2, y: move_data.y2, exists: 1 };\n\n    let existing_end_piece = user_state.game_state[move_data.x2 + move_data.y2 * 8];\n    let mut game_ended = false;\n    if ((existing_end_piece.id == Pieces::KING) & (existing_end_piece.player_id != player_id)) {\n        game_ended = true;\n    }\n\n    user_state.game_state = validate_move_and_update_board_state(\n        user_state.game_state,\n        starting_piece_data,\n        ending_piece_data,\n        player_id,\n    );\n    // If black has moved and captured a white piece, whice's mask vector needs to be updated\n    let visible_squares = update_vision(user_state.game_state, player_id);\n\n    // validate_move_and_update_board_state(user_state.encoded_pieces)\n    // when used inside a Noir program, previous_round_hash should be sourced from a pub variable\n    // assert_eq(previous_round_hash, round_state.hash());\n\n    // TODO this logic should be wrapped in a helper function\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([user_state.encrypt_secret, -1], 2),\n        input_state.mpc_state.user_encrypt_secret_hashes[player_id],\n    );\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([user_state.mask_secret, -1], 2),\n        input_state.mpc_state.user_mask_secret_hashes[player_id],\n    );\n    let white_output_state: UserOutputState<64, 2> = create_round_commitments(\n        user_state.encode_game_state(),\n        visible_squares,\n        user_state.encrypt_secret,\n        user_state.mask_secret,\n        input_state.mpc_state,\n        player_id as u32,\n    );\n\n    let output_mpc_state = input_state.mpc_state.update2(white_output_state, player_id as u32);\n\n    let mut output_state = GameState {\n        game_ended,\n        move_count: input_state.move_count + 1,\n        mpc_state: output_mpc_state,\n    };\n\n    (\n        output_state,\n        MoveHashes {\n            input_game_state: input_state_hash,\n            input_user_state: input_user_state_hash,\n            output_game_state: output_state.hash(),\n            output_user_state: user_state.hash(),\n        },\n    )\n    // need to validate move.\n    // if Castle, or En Passant, 2 states need to be updated\n\n    // White has received Black's mask commitments (what black wants to see from white)\n}\n\npub fn empty_game_state() -> GameState {\n    GameState::default()\n}\n\n#[test]\nfn test_move() {\n    let mut game_state: GameState = empty_game_state();\n\n    let mut alice_state: UserState = UserState::default();\n    let mut bob_state: UserState = UserState::default();\n\n    alice_state.encrypt_secret = poseidon2([1], 1);\n    alice_state.mask_secret = poseidon2([2], 1);\n    bob_state.encrypt_secret = poseidon2([3], 1);\n    bob_state.mask_secret = poseidon2([4], 1);\n\n    game_state =\n        game_state.commit_to_user_secrets(alice_state.encrypt_secret, alice_state.mask_secret, 0);\n    game_state =\n        game_state.commit_to_user_secrets(bob_state.encrypt_secret, bob_state.mask_secret, 1);\n\n    // alice moves pawn\n\n    let mut hashes: [MoveHashes; 10] = [MoveHashes::default(); 10];\n    let alice_move: MoveData = MoveData { x1: 4, y1: 1, x2: 4, y2: 3 };\n    let m = move(game_state, alice_state, alice_move, WHITE_PLAYER_ID);\n    game_state = m.0;\n    hashes[0] = m.1;\n    let mut alice_state =\n        api::update_user_state_from_move(true, alice_state, alice_move, WHITE_PLAYER_ID);\n\n    // bob updates her state after receiving alice's move output\n    let mut bob_new_state =\n        consume_opponent_move_and_update_game_state(game_state, bob_state, BLACK_PLAYER_ID);\n\n    let bob_move: MoveData = MoveData { x1: 4, y1: 6, x2: 4, y2: 4 };\n    let m = move(game_state, bob_state, bob_move, BLACK_PLAYER_ID);\n    game_state = m.0;\n    hashes[1] = m.1;\n    bob_state = api::update_user_state_from_move(true, bob_new_state, bob_move, BLACK_PLAYER_ID);\n    // // alice updates her state after receiving bob's move output\n    let alice_new_state =\n        consume_opponent_move_and_update_game_state(game_state, alice_state, WHITE_PLAYER_ID);\n\n    // alice moves queen to H5\n    let alice_move = MoveData { x1: 3, y1: 0, x2: 7, y2: 4 };\n    let m = move(game_state, alice_state, alice_move, WHITE_PLAYER_ID);\n    game_state = m.0;\n    hashes[2] = m.1;\n    alice_state =\n        api::update_user_state_from_move(false, alice_new_state, alice_move, WHITE_PLAYER_ID);\n    // // bob updates her state after receiving alice's move output\n    let bob_new_state =\n        consume_opponent_move_and_update_game_state(game_state, bob_state, BLACK_PLAYER_ID);\n\n    // bob moves pawn to F5\n    let bob_move = MoveData { x1: 5, y1: 6, x2: 5, y2: 5 };\n    let m = move(game_state, bob_state, bob_move, BLACK_PLAYER_ID);\n    game_state = m.0;\n    hashes[3] = m.1;\n    bob_state = api::update_user_state_from_move(false, bob_new_state, bob_move, BLACK_PLAYER_ID);\n    // alice moves queen to E8, checkmate\n\n    let alice_new_state =\n        consume_opponent_move_and_update_game_state(game_state, alice_state, WHITE_PLAYER_ID);\n\n    let alice_move = MoveData { x1: 7, y1: 4, x2: 4, y2: 7 };\n    let m = move(game_state, alice_state, alice_move, WHITE_PLAYER_ID);\n    game_state = m.0;\n    hashes[4] = m.1;\n    alice_state =\n        api::update_user_state_from_move(false, alice_new_state, alice_move, WHITE_PLAYER_ID);\n    assert_eq(game_state.game_ended, true);\n    // // alice updates her state after receiving bob's move output\n    // let alice_state =\n    //     consume_opponent_move_and_update_game_state(game_state, alice_state, WHITE_PLAYER_ID);\n\n    println(f\"hashes = {hashes}\");\n    assert_eq(hashes[0].output_game_state, hashes[1].input_game_state);\n    assert_eq(hashes[1].output_game_state, hashes[2].input_game_state);\n    assert_eq(hashes[2].output_game_state, hashes[3].input_game_state);\n    assert_eq(hashes[3].output_game_state, hashes[4].input_game_state);\n\n    assert_eq(hashes[0].output_user_state, hashes[2].input_user_state);\n    assert_eq(hashes[1].output_user_state, hashes[3].input_user_state);\n    assert_eq(hashes[2].output_user_state, hashes[4].input_user_state);\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/fog_of_war_chess/v0.1.3/src/lib.nr"},"65":{"source":"pub(crate) mod Pieces {\n    pub(crate) global EMPTY_SQUARE: Field = 0;\n    pub(crate) global WHITE_PAWN: Field = 1;\n    pub(crate) global BLACK_PAWN: Field = 2;\n    pub(crate) global KNIGHT: Field = 3;\n    pub(crate) global BISHOP: Field = 4;\n    pub(crate) global ROOK: Field = 5;\n    pub(crate) global QUEEN: Field = 6;\n    pub(crate) global KING: Field = 7;\n}\n\npub struct Piece {\n    pub id: Field,\n    pub player_id: Field,\n    pub has_moved: Field,\n}\nimpl std::default::Default for Piece {\n    fn default() -> Self {\n        Piece { id: Pieces::EMPTY_SQUARE, player_id: 0, has_moved: 0 }\n    }\n}\nimpl Piece {\n    pub(crate) fn encode(self) -> Field {\n        (self.id) + (self.player_id * 0x100) + (self.has_moved * 0x10000)\n    }\n\n    pub(crate) fn decode(encoded: Field) -> Self {\n        let bytes: [u8; 3] = encoded.to_le_bytes();\n        Piece { id: bytes[0] as Field, player_id: bytes[1] as Field, has_moved: bytes[2] as Field }\n    }\n}\n\npub(crate) struct PieceData {\n    pub(crate) exists: Field,\n    pub(crate) id: Field,\n    pub(crate) x: Field,\n    pub(crate) y: Field,\n}\nimpl std::default::Default for PieceData {\n    fn default() -> Self {\n        PieceData { exists: 0, id: 0, x: 0, y: 0 }\n    }\n}\nimpl PieceData {\n    pub(crate) fn pack(self) -> Field {\n        self.exists + (self.id * 0x100) + (self.x * 0x10000) + (self.y * 0x1000000)\n    }\n    pub(crate) fn unpack(packed: Field) -> Self {\n        let bytes: [u8; 4] = packed.to_le_bytes();\n        PieceData {\n            exists: bytes[0] as Field,\n            id: bytes[1] as Field,\n            x: bytes[2] as Field,\n            y: bytes[3] as Field,\n        }\n    }\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/fog_of_war_chess/v0.1.3/src/piece.nr"},"66":{"source":"use crate::{BLACK_PLAYER_ID, WHITE_PLAYER_ID};\nuse crate::piece::{Piece, PieceData, Pieces};\nuse crate::vision_table::VISION_TABLE;\n\npub(crate) fn get_piece_data(pieces: [Piece; 64], player_id: Field) -> [PieceData; 16] {\n    let mut r: [PieceData; 16] = [PieceData { exists: 0, id: 0, x: 0, y: 0 }; 16];\n    let mut idx: Field = 0;\n\n    let mut packed_piece_data: [Field; 17] = [0; 17];\n\n    for i in 0..64 {\n        let is_not_empty_square = (pieces[i].id != Pieces::EMPTY_SQUARE) as Field;\n        let mut is_player_piece = (pieces[i].player_id - player_id);\n        std::as_witness(is_player_piece);\n        is_player_piece = 1 - (is_player_piece * is_player_piece);\n        std::as_witness(is_player_piece);\n\n        let piece_x = (i % 8) as Field;\n        let piece_y = (i / 8) as Field;\n        assert_constant(piece_x);\n        assert_constant(piece_y);\n\n        let insert_piece = is_not_empty_square * is_player_piece;\n        std::as_witness(insert_piece);\n\n        let piece_to_insert =\n            PieceData { exists: 1, id: pieces[i].id, x: piece_x, y: piece_y }.pack();\n\n        let input_piece = packed_piece_data[idx];\n        let output = input_piece * (1 - insert_piece) + insert_piece * piece_to_insert;\n        packed_piece_data[idx] = output;\n        idx += insert_piece;\n    }\n\n    for i in 0..16 {\n        r[i] = PieceData::unpack(packed_piece_data[i]);\n    }\n\n    r\n}\n\npub(crate) fn update_vision(pieces: [Piece; 64], player_id: Field) -> [Field; 64] {\n    let piece_data: [PieceData; 16] = get_piece_data(pieces, player_id);\n\n    let mut vision: [Field; 64] = [0; 64];\n\n    for i in 0..16 {\n        update_vision_for_piece(&mut vision, pieces, piece_data[i]);\n    }\n    vision\n}\n\npub(crate) fn update_vision_for_piece(\n    output_vision: &mut [Field; 64],\n    pieces: [Piece; 64],\n    piece_data: PieceData,\n) {\n    let x = piece_data.x;\n    let y = piece_data.y;\n    let piece_id = piece_data.id - 1;\n    let vision_idx = piece_id * 64 + (x as Field) + (y as Field * 8);\n    let vision_idx = vision_idx * piece_data.exists as Field;\n    let vision_vector_f = VISION_TABLE[vision_idx];\n    let vision_vector: [u1; 64] = vision_vector_f.to_le_bits();\n\n    {\n        let input_vision = output_vision[x + (y * 8)];\n        let updated_vision = (1 - piece_data.exists) * input_vision + piece_data.exists;\n        output_vision[x + (y * 8)] = updated_vision;\n    }\n\n    let piece_exists = piece_data.exists as Field;\n    // // north-west\n    let mut vision_blocked: [Field; 8] = [0; 8];\n\n    for i in 0..7 {\n        let locations: [Field; 8] = [\n            (x + i as Field + 1) + ((y + i as Field + 1) * 8), // north west\n            (x + i as Field + 1) + ((y - i as Field - 1) * 8), // south west\n            (x - i as Field - 1) + ((y + i as Field + 1) * 8), // north east\n            (x - i as Field - 1) + ((y - i as Field - 1) * 8), // south east\n            (x as Field) + ((y + i as Field + 1) * 8), // north\n            (x as Field) + (y - i as Field - 1) * 8, // south\n            (x + i as Field + 1) + (y * 8), // east\n            (x - i as Field - 1) + (y * 8), // west\n        ];\n\n        for j in 0..8 {\n            let location = locations[j];\n            std::as_witness(location);\n            let location_valid = vision_vector[i + (7 * j)] as Field;\n            let bounded_location = location * location_valid;\n\n            let square_empty = (pieces[bounded_location].id == Pieces::EMPTY_SQUARE) as Field;\n            let mut blocked: Field = vision_blocked[j];\n            let execute = (piece_exists * location_valid);\n            std::as_witness(execute);\n            let execute = execute - execute * blocked;\n            std::as_witness(execute);\n            let mut visible = output_vision[bounded_location];\n            let updated_visible = (execute + visible - visible * execute);\n            output_vision[bounded_location] = updated_visible;\n            let is_blocked = execute * (1 - square_empty as Field);\n            std::as_witness(is_blocked);\n            let updated_blocked = blocked * (1 - is_blocked) + is_blocked;\n            vision_blocked[j] = updated_blocked;\n        }\n    }\n    let knight_locations_valid: [u1; 8] = [\n        vision_vector[56],\n        vision_vector[57],\n        vision_vector[58],\n        vision_vector[59],\n        vision_vector[60],\n        vision_vector[61],\n        vision_vector[62],\n        vision_vector[63],\n    ];\n\n    let knight_locations: [Field; 8] = [\n        ((x + 2) + (y + 1) * 8) * knight_locations_valid[0] as Field,\n        ((x + 1) + (y + 2) * 8) * knight_locations_valid[1] as Field,\n        ((x - 1) + (y + 2) * 8) * knight_locations_valid[2] as Field,\n        ((x - 2) + (y + 1) * 8) * knight_locations_valid[3] as Field,\n        ((x + 2) + (y - 1) * 8) * knight_locations_valid[4] as Field,\n        ((x + 1) + (y - 2) * 8) * knight_locations_valid[5] as Field,\n        ((x - 1) + (y - 2) * 8) * knight_locations_valid[6] as Field,\n        ((x - 2) + (y - 1) * 8) * knight_locations_valid[7] as Field,\n    ];\n\n    for i in 0..8 {\n        let location_valid = knight_locations_valid[i] as Field;\n        let piece_exists = piece_data.exists as Field;\n        let is_knight = (piece_data.id == Pieces::KNIGHT) as Field;\n        let execute = location_valid * piece_exists * is_knight;\n\n        let vision = output_vision[knight_locations[i]];\n\n        let updated_vision = vision * (1 - execute) + execute;\n        output_vision[knight_locations[i]] = updated_vision;\n    }\n}\n\n#[test]\nfn test_update_vision() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::WHITE_PAWN;\n\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    let expected: [Field; 64] = [\n        1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0,\n    ];\n\n    assert_eq(vision, expected);\n}\n#[test]\nfn test_update_white_vision2() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::KNIGHT;\n    state[2].id = Pieces::BISHOP;\n    state[3].id = Pieces::QUEEN;\n    state[4].id = Pieces::KING;\n    state[5].id = Pieces::BISHOP;\n    state[6].id = Pieces::KNIGHT;\n    state[7].id = Pieces::ROOK;\n    state[8].id = Pieces::WHITE_PAWN;\n    state[9].id = Pieces::WHITE_PAWN;\n    state[10].id = Pieces::WHITE_PAWN;\n    state[11].id = Pieces::WHITE_PAWN;\n    state[12].id = Pieces::WHITE_PAWN;\n    state[13].id = Pieces::WHITE_PAWN;\n    state[14].id = Pieces::WHITE_PAWN;\n    state[15].id = Pieces::WHITE_PAWN;\n\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    let expected: [Field; 64] = [\n        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0,\n    ];\n\n    assert_eq(vision, expected);\n}\n\n#[test]\nfn test_update_white_vision3() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    // state[0].id = Pieces::ROOK;\n    // state[1].id = Pieces::KNIGHT;\n    // state[2].id = Pieces::BISHOP;\n    // state[3].id = Pieces::QUEEN;\n    // state[4].id = Pieces::KING;\n    // state[5].id = Pieces::BISHOP;\n    // state[6].id = Pieces::KNIGHT;\n    // state[7].id = Pieces::ROOK;\n    // state[8].id = Pieces::WHITE_PAWN;\n    // state[9].id = Pieces::WHITE_PAWN;\n    // state[10].id = Pieces::WHITE_PAWN;\n    // state[11].id = Pieces::WHITE_PAWN;\n    // state[12].id = Pieces::WHITE_PAWN;\n    // state[13].id = Pieces::WHITE_PAWN;\n    // state[14].id = Pieces::WHITE_PAWN;\n    // state[15].id = Pieces::WHITE_PAWN;\n\n    state[27].id = Pieces::QUEEN;\n    state[35].id = Pieces::ROOK;\n    state[35].player_id = BLACK_PLAYER_ID;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        1,0,0,1,0,0,1,0,\n        0,1,0,1,0,1,0,0,\n        0,0,1,1,1,0,0,0,\n        1,1,1,1,1,1,1,1,\n        0,0,1,1,1,0,0,0,\n        0,1,0,0,0,1,0,0,\n        1,0,0,0,0,0,1,0,\n        0,0,0,0,0,0,0,1,\n    ];\n\n    // noir-fmt:ignore\n    /*\n    VISION = [0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,\n              0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01]    */\n    assert_eq(vision, expected);\n}\n\n#[test]\nfn test_update_vision4() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[35].id = Pieces::KNIGHT;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,1,0,1,0,0,0,\n        0,1,0,0,0,1,0,0,\n        0,0,0,1,0,0,0,0,\n        0,1,0,0,0,1,0,0,\n        0,0,1,0,1,0,0,0,\n        0,0,0,0,0,0,0,0,\n    ];\n\n    println(f\"vision = {vision}\");\n    println(f\"expected = {expected}\");\n    assert_eq(vision, expected);\n}\n\n#[test]\nfn test_update_vision_king() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[35].id = Pieces::KING;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,1,1,1,0,0,0,\n        0,0,1,1,1,0,0,0,\n        0,0,1,1,1,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n    ];\n\n    println(f\"vision = {vision}\");\n    println(f\"expected = {expected}\");\n    assert_eq(vision, expected);\n\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[4].id = Pieces::KING;\n    let vision = update_vision(state, WHITE_PLAYER_ID);\n\n    // noir-fmt:ignore\n    let expected: [Field; 64] = [\n        0,0,0,1,1,1,0,0,\n        0,0,0,1,1,1,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,\n    ];\n\n    println(f\"vision = {vision}\");\n    println(f\"expected = {expected}\");\n    assert_eq(vision, expected);\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/fog_of_war_chess/v0.1.3/src/update_vision.nr"},"67":{"source":"use crate::{BLACK_PLAYER_ID, WHITE_PLAYER_ID};\nuse crate::piece::{Piece, PieceData, Pieces};\nuse crate::update_vision::update_vision_for_piece;\n\npub(crate) fn validate_move_and_update_board_state(\n    board_state: [Piece; 64],\n    starting_piece: PieceData,\n    ending_piece: PieceData,\n    player_id: Field,\n) -> [Piece; 64] {\n    let mut result: [Piece; 64] = board_state;\n    let mut vision: [Field; 64] = [0; 64];\n    update_vision_for_piece(&mut vision, board_state, starting_piece);\n\n    assert((player_id == BLACK_PLAYER_ID) | (player_id == WHITE_PLAYER_ID));\n    // can the starting piece see the square we want to move to?\n    let end_location = ending_piece.y * 8 + ending_piece.x;\n    let can_see_square = vision[end_location] == 1;\n    let square_can_be_moved_into = (board_state[end_location].id == Pieces::EMPTY_SQUARE)\n        | (board_state[end_location].player_id != player_id);\n\n    let mut is_white_promotion = (ending_piece.y == 7)\n        & (starting_piece.id == Pieces::WHITE_PAWN)\n        & (\n            (ending_piece.id != Pieces::WHITE_PAWN)\n                | (ending_piece.id != Pieces::BLACK_PAWN)\n                | (ending_piece.id != Pieces::EMPTY_SQUARE)\n        );\n    let mut is_black_promotion = (ending_piece.y == 0)\n        & (starting_piece.id == Pieces::BLACK_PAWN)\n        & (\n            (ending_piece.id != Pieces::WHITE_PAWN)\n                | (ending_piece.id != Pieces::BLACK_PAWN)\n                | (ending_piece.id != Pieces::EMPTY_SQUARE)\n        );\n    let mut is_promotion = (is_white_promotion & (player_id == WHITE_PLAYER_ID))\n        | (is_black_promotion & (player_id == BLACK_PLAYER_ID));\n    assert((starting_piece.id == ending_piece.id) | is_promotion);\n    assert(starting_piece.id != Pieces::EMPTY_SQUARE);\n    if (player_id == WHITE_PLAYER_ID) {\n        assert(starting_piece.id != Pieces::BLACK_PAWN);\n    } else {\n        assert(starting_piece.id != Pieces::WHITE_PAWN);\n    }\n    let move_valid_if_not_pawn_or_castle =\n        can_see_square & square_can_be_moved_into & (starting_piece.id != Pieces::WHITE_PAWN);\n\n    let mut pawn_valid = false;\n    // black\n    {\n        let en_passant_y: bool = ending_piece.y == starting_piece.y - 1; // ??\n        let en_passant_x =\n            (ending_piece.x - starting_piece.x) * (ending_piece.x - starting_piece.x) == 1;\n        let en_passant_piece_x1 = starting_piece.y * 8 + starting_piece.x - 1;\n        let en_passant_piece_x1_valid = starting_piece.x != 0;\n        let en_passant_piece_x2_valid = starting_piece.x != 7;\n\n        let en_passant_piece_x2 = starting_piece.y * 8 + starting_piece.x + 1;\n        let en_passant_piece_1 = (\n            board_state[en_passant_piece_x1 * en_passant_piece_x1_valid as Field].id\n                == Pieces::WHITE_PAWN\n        )\n            & (en_passant_piece_x1_valid);\n        let en_passant_piece_2 = (\n            board_state[en_passant_piece_x2 * en_passant_piece_x2_valid as Field].id\n                == Pieces::WHITE_PAWN\n        )\n            & (en_passant_piece_x2_valid);\n        let en_passant_correct_row = starting_piece.y == 5;\n        let en_passant_piece = en_passant_piece_1 | en_passant_piece_2;\n        let is_pawn = starting_piece.id == Pieces::BLACK_PAWN;\n        let en_passant_valid =\n            en_passant_x & en_passant_y & en_passant_piece & en_passant_correct_row & is_pawn;\n\n        let pawn_capture_y = en_passant_y;\n        let pawn_capture_x = en_passant_x;\n        let pawn_capture_piece = (board_state[end_location].player_id == WHITE_PLAYER_ID)\n            & (board_state[end_location].id != Pieces::EMPTY_SQUARE);\n        let pawn_capture_valid = pawn_capture_y & pawn_capture_x & pawn_capture_piece & is_pawn;\n\n        let pawn_move_y =\n            en_passant_y | ((ending_piece.y - starting_piece.y) == 2) & (starting_piece.y == 6);\n        let pawn_move_x = starting_piece.x == ending_piece.x;\n        let pawn_move_piece = (board_state[end_location].id == Pieces::EMPTY_SQUARE);\n        let pawn_move_valid = pawn_move_y & pawn_move_x & pawn_move_piece & is_pawn;\n\n        let black_pawn_valid = en_passant_valid | pawn_capture_valid | pawn_move_valid;\n\n        if (player_id == BLACK_PLAYER_ID) {\n            pawn_valid = black_pawn_valid;\n        }\n\n        if (en_passant_valid & (player_id == BLACK_PLAYER_ID)) {\n            if (en_passant_piece_1) {\n                result[starting_piece.y * 8 + starting_piece.x - 1] = Piece::default();\n            }\n            if (en_passant_piece_2) {\n                result[starting_piece.y * 8 + starting_piece.x + 1] = Piece::default();\n            }\n        }\n    }\n\n    // white\n    {\n        let en_passant_y: bool = ending_piece.y == starting_piece.y + 1; // ??\n        let en_passant_x =\n            (ending_piece.x - starting_piece.x) * (ending_piece.x - starting_piece.x) == 1;\n        let en_passant_piece_x1 = starting_piece.y * 8 + starting_piece.x - 1;\n        let en_passant_piece_x1_valid = starting_piece.x != 0;\n        let en_passant_piece_x2_valid = starting_piece.x != 7;\n\n        let en_passant_piece_x2 = starting_piece.y * 8 + starting_piece.x + 1;\n        let en_passant_piece_1 = (\n            board_state[en_passant_piece_x1 * en_passant_piece_x1_valid as Field].id\n                == Pieces::BLACK_PAWN\n        )\n            & (en_passant_piece_x1_valid);\n        let en_passant_piece_2 = (\n            board_state[en_passant_piece_x2 * en_passant_piece_x2_valid as Field].id\n                == Pieces::BLACK_PAWN\n        )\n            & (en_passant_piece_x2_valid);\n        let en_passant_correct_row = starting_piece.y == 4;\n        let en_passant_piece = en_passant_piece_1 | en_passant_piece_2;\n        let is_pawn = starting_piece.id == Pieces::WHITE_PAWN;\n        let en_passant_valid =\n            en_passant_x & en_passant_y & en_passant_piece & en_passant_correct_row & is_pawn;\n\n        let pawn_capture_y = en_passant_y;\n        let pawn_capture_x = en_passant_x;\n        let pawn_capture_piece = (board_state[end_location].player_id == BLACK_PLAYER_ID)\n            & (board_state[end_location].id != Pieces::EMPTY_SQUARE);\n        let pawn_capture_valid = pawn_capture_y & pawn_capture_x & pawn_capture_piece & is_pawn;\n\n        let pawn_move_y =\n            en_passant_y | ((ending_piece.y - starting_piece.y) == 2) & (starting_piece.y == 1);\n        let pawn_move_x = starting_piece.x == ending_piece.x;\n        let pawn_move_piece = (board_state[end_location].id == Pieces::EMPTY_SQUARE);\n        let pawn_move_valid = pawn_move_y & pawn_move_x & pawn_move_piece & is_pawn;\n\n        let white_pawn_valid = en_passant_valid | pawn_capture_valid | pawn_move_valid;\n        if (player_id == WHITE_PLAYER_ID) {\n            pawn_valid = white_pawn_valid;\n        }\n\n        if (en_passant_valid & (player_id == WHITE_PLAYER_ID)) {\n            if (en_passant_piece_1) {\n                result[starting_piece.y * 8 + starting_piece.x - 1] = Piece::default();\n            }\n            if (en_passant_piece_2) {\n                result[starting_piece.y * 8 + starting_piece.x + 1] = Piece::default();\n            }\n        }\n    }\n    let castle_is_king = starting_piece.id == Pieces::KING;\n    let castle_king_not_moved = board_state[starting_piece.y * 8 + starting_piece.x].has_moved == 0;\n\n    let castle_left = ending_piece.x == starting_piece.x - 2;\n    let castle_right = ending_piece.y == starting_piece.x + 2;\n    let castle_y = ending_piece.y == starting_piece.y;\n\n    let white_rook_present_left =\n        (board_state[0].id == Pieces::ROOK) & (board_state[0].has_moved == 0);\n    let white_rook_present_right =\n        (board_state[7].id == Pieces::ROOK) & (board_state[7].has_moved == 0);\n\n    let white_rook_condition_met =\n        (castle_left & white_rook_present_left) | (castle_right & white_rook_present_right);\n\n    let black_rook_present_left =\n        (board_state[56].id == Pieces::ROOK) & (board_state[56].has_moved == 0);\n    let black_rook_present_right =\n        (board_state[63].id == Pieces::ROOK) & (board_state[63].has_moved == 0);\n\n    let black_rook_condition_met =\n        (castle_left & black_rook_present_left) | (castle_right & black_rook_present_right);\n\n    let rook_condition_met = (white_rook_condition_met & (player_id == WHITE_PLAYER_ID))\n        | (black_rook_condition_met & (player_id == BLACK_PLAYER_ID));\n    let first_empty_square_x = starting_piece.x + castle_right as Field - castle_left as Field;\n    let second_empty_square_x =\n        starting_piece.x + (2 * castle_right as Field) - (2 * castle_left as Field);\n\n    let mut y_offset = 0;\n    if (player_id == BLACK_PLAYER_ID) {\n        y_offset = 56;\n    }\n    let first_empty_square_met: bool =\n        board_state[first_empty_square_x + y_offset].id == Pieces::EMPTY_SQUARE;\n    let second_empty_square_met: bool =\n        board_state[second_empty_square_x + y_offset].id == Pieces::EMPTY_SQUARE;\n    let rook_empty_square_met =\n        ((board_state[1 + y_offset].id == Pieces::EMPTY_SQUARE) & castle_left) | castle_right;\n    let castle_empty_square_check =\n        first_empty_square_met & second_empty_square_met & rook_empty_square_met;\n\n    let castle_valid = castle_is_king\n        & castle_king_not_moved\n        & castle_y\n        & rook_condition_met\n        & castle_empty_square_check;\n    let valid_move = move_valid_if_not_pawn_or_castle | pawn_valid | castle_valid;\n\n    // need to move the rook\n    if (castle_valid) {\n        if (castle_left) {\n            let mut moved_rook = result[y_offset * 8];\n            moved_rook.has_moved = 1;\n            result[y_offset * 8] = Piece::default();\n            result[3 + y_offset * 8] = moved_rook;\n        }\n        if (castle_right) {\n            let mut moved_rook = result[y_offset * 8 + 7];\n            moved_rook.has_moved = 1;\n            result[y_offset * 8 + 7] = Piece::default();\n            result[5 + y_offset * 8] = moved_rook;\n        }\n    }\n\n    let mut moved_piece = result[starting_piece.y * 8 + starting_piece.x];\n    moved_piece.has_moved = 1;\n    result[starting_piece.y * 8 + starting_piece.x] = Piece::default();\n    result[ending_piece.y * 8 + ending_piece.x] = moved_piece;\n    assert_eq(valid_move, true);\n\n    result\n}\n\n#[test]\nfn test_validate_white_move() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::KNIGHT;\n    state[2].id = Pieces::BISHOP;\n    state[3].id = Pieces::QUEEN;\n    state[4].id = Pieces::KING;\n    state[5].id = Pieces::BISHOP;\n    state[6].id = Pieces::KNIGHT;\n    state[7].id = Pieces::ROOK;\n    state[8].id = Pieces::WHITE_PAWN;\n    state[9].id = Pieces::WHITE_PAWN;\n    state[10].id = Pieces::WHITE_PAWN;\n    state[11].id = Pieces::WHITE_PAWN;\n    state[12].id = Pieces::WHITE_PAWN;\n    state[13].id = Pieces::WHITE_PAWN;\n    state[14].id = Pieces::WHITE_PAWN;\n    state[15].id = Pieces::WHITE_PAWN;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 1 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 3 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KNIGHT, x: 1, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 2, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 0, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let starting_piece = PieceData { exists: 1, id: Pieces::KNIGHT, x: 6, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 7, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KNIGHT, x: 5, y: 2 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test]\nfn test_validate_white_pawn_move_and_capture() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[35].id = Pieces::WHITE_PAWN;\n    state[42].id = Pieces::BLACK_PAWN;\n    state[42].player_id = BLACK_PLAYER_ID;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 4 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 2, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    // en passant\n    state[35].id = Pieces::BLACK_PAWN;\n    state[35].player_id = BLACK_PLAYER_ID;\n    state[36].id = Pieces::WHITE_PAWN;\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 4 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_validate_white_pawn_cannot_move_diagonally_if_not_capture() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[35].id = Pieces::WHITE_PAWN;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 4 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 2, y: 5 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_validate_white_pawn_cannot_en_passant_on_wrong_row() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n\n    state[27].id = Pieces::BLACK_PAWN;\n    state[27].player_id = BLACK_PLAYER_ID;\n    state[28].id = Pieces::WHITE_PAWN;\n    let starting_piece = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 4, y: 3 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::WHITE_PAWN, x: 3, y: 4 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_validate_white_move_blocked() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::KNIGHT;\n    state[2].id = Pieces::BISHOP;\n    state[3].id = Pieces::QUEEN;\n    state[4].id = Pieces::KING;\n    state[5].id = Pieces::BISHOP;\n    state[6].id = Pieces::KNIGHT;\n    state[7].id = Pieces::ROOK;\n    state[8].id = Pieces::WHITE_PAWN;\n    state[9].id = Pieces::WHITE_PAWN;\n    state[10].id = Pieces::WHITE_PAWN;\n    state[11].id = Pieces::WHITE_PAWN;\n    state[12].id = Pieces::WHITE_PAWN;\n    state[13].id = Pieces::WHITE_PAWN;\n    state[14].id = Pieces::WHITE_PAWN;\n    state[15].id = Pieces::WHITE_PAWN;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 5, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 5, y: 1 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test]\nfn test_validate_white_castle() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[4].id = Pieces::KING;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_white_castle_fails_if_blocked() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[1].id = Pieces::WHITE_PAWN;\n    state[4].id = Pieces::KING;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_white_castle_fails_if_rook_already_moved() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[0].has_moved = 1;\n    state[4].id = Pieces::KING;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n\n#[test(should_fail)]\nfn test_white_castle_fails_if_king_already_moved() {\n    let mut state: [Piece; 64] =\n        [Piece { id: Pieces::EMPTY_SQUARE, player_id: WHITE_PLAYER_ID, has_moved: 0 }; 64];\n    state[0].id = Pieces::ROOK;\n    state[4].id = Pieces::KING;\n    state[4].has_moved = 1;\n\n    let starting_piece = PieceData { exists: 1, id: Pieces::KING, x: 4, y: 0 };\n    let ending_piece: PieceData = PieceData { exists: 1, id: Pieces::KING, x: 2, y: 0 };\n\n    let _ =\n        validate_move_and_update_board_state(state, starting_piece, ending_piece, WHITE_PLAYER_ID);\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/fog_of_war_chess/v0.1.3/src/validate_move.nr"},"71":{"source":"/// Given an initial secret Field element, expand it into `N` uniformly randomly distributed field elements\npub(crate) fn expand_secret<let N: u32>(secret: Field) -> [Field; N] {\n    let mut rolling_secret: [Field; 2] = [0, secret];\n    let mut r: [Field; N] = [0; N];\n    for i in 0..N {\n        r[i] = std::hash::poseidon2::Poseidon2::hash(rolling_secret, 2);\n        rolling_secret[1] += 1;\n    }\n    r\n}\n\npub(crate) fn symmetric_encrypt<let N: u32>(plaintext: [Field; N], secret: Field) -> [Field; N] {\n    let mut ciphertext: [Field; N] = [0; N];\n\n    let secrets: [Field; N] = expand_secret(secret);\n    for i in 0..N {\n        ciphertext[i] = secrets[i] + plaintext[i];\n    }\n    ciphertext\n}\n\npub(crate) fn symmetric_decrypt(\n    ciphertext: [Field; 2],\n    secret: Field,\n) -> std::option::Option<Field> {\n    let mut r: std::option::Option<Field> = std::option::Option::default();\n    let mut decrypted_text: [Field; 2] = [0; 2];\n\n    let secrets: [Field; 2] = expand_secret(secret);\n    for i in 0..2 {\n        decrypted_text[i] = ciphertext[i] - secrets[i];\n    }\n\n    let is_real = decrypted_text[0] == 0;\n\n    if is_real {\n        r = std::option::Option::some(decrypted_text[1]);\n    } else {\n        r = std::option::Option::none();\n    }\n    r\n}\n\nuse std::embedded_curve_ops::EmbeddedCurvePoint as Point;\n\npub struct Ciphertext<let N: u32> {\n    data: [Field; N * 2],\n}\n\nimpl<let N: u32> std::default::Default for Ciphertext<N> {\n    fn default() -> Self {\n        Ciphertext { data: [0; 2 * N] }\n    }\n}\n\npub(crate) fn trial_decrypt<let N: u32>(\n    possible_encryption_keys: [Point; N],\n    ciphertext: Ciphertext<N>,\n) -> [Option<Field>; N] {\n    let mut possible_plaintext: [Option<Field>; N] = [Option::default(); N];\n    for i in 0..N {\n        possible_plaintext[i] = symmetric_decrypt(\n            [ciphertext.data[2 * i], ciphertext.data[2 * i + 1]],\n            possible_encryption_keys[i].x,\n        );\n    }\n    possible_plaintext\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/mpclib/main/src/common/crypto.nr"},"76":{"source":"use std::embedded_curve_ops::{\n    embedded_curve_add_unsafe, EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul,\n};\nuse std::hash::poseidon2::Poseidon2::hash as poseidon2;\n\nuse crate::common::crypto::{Ciphertext, expand_secret, symmetric_encrypt, trial_decrypt};\n\nuse bignum::{BigNumTrait, BN254_Fq};\n\ntype Point = EmbeddedCurvePoint;\n\npub global G: Point = Point {\n    x: 0x083e7911d835097629f0067531fc15cafd79a89beecb39903f69572c636f4a5a,\n    y: 0x1a7f5efaad7f315c25a918f30cc8d7333fccab7ad7c90f14de81bcc528f9935d,\n    is_infinite: false,\n};\n\nglobal H: Point = Point {\n    x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n    y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n    is_infinite: false,\n};\n\npub struct RoundState<let NumEntries: u32, let NumParticipants: u32> {\n    pub round_number: u32,\n    pub user_encrypt_secret_hashes: [Field; NumParticipants],\n    pub user_mask_secret_hashes: [Field; NumParticipants],\n    pub previous_output_states: [UserOutputState<NumEntries, NumParticipants>; NumParticipants],\n}\n\npub struct UserOutputState<let NumEntries: u32, let NumParticipants: u32> {\n    ciphertext: Ciphertext<NumEntries>,\n    mask_commitments: [Point; NumEntries],\n    user_updated_mask_commitments: [[Point; NumEntries]; NumParticipants],\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> std::default::Default for UserOutputState<NumEntries, NumParticipants> {\n    fn default() -> Self {\n        UserOutputState {\n            ciphertext: Ciphertext::default(),\n            mask_commitments: [Point::point_at_infinity(); NumEntries],\n            user_updated_mask_commitments: [\n                [Point::point_at_infinity(); NumEntries]; NumParticipants\n            ],\n        }\n    }\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> UserOutputState<NumEntries, NumParticipants> {\n\n    pub fn flatten(self: Self) -> [Field; NumEntries * (NumParticipants + 2) * 2] {\n        let mut flattened_data: [Field; NumEntries * (NumParticipants + 2) * 2] =\n            [0; NumEntries * (NumParticipants + 2) * 2];\n\n        for i in 0..NumEntries {\n            flattened_data[i * 2] = self.ciphertext.data[2 * i];\n            flattened_data[i * 2 + 1] = self.ciphertext.data[2 * i + 1];\n\n            flattened_data[NumEntries * 2 + i * 2] = self.mask_commitments[i].x;\n            flattened_data[NumEntries * 2 + i * 2 + 1] = self.mask_commitments[i].y;\n        }\n\n        let offset: u32 = NumEntries * 4;\n        for i in 0..NumParticipants {\n            for j in 0..NumEntries {\n                flattened_data[offset + (i * NumEntries * 2) + j * 2] =\n                    self.user_updated_mask_commitments[i][j].x;\n                flattened_data[offset + (i * NumEntries * 2) + j * 2 + 1] =\n                    self.user_updated_mask_commitments[i][j].y;\n                // TODO I think its ok to not include point at infinity here in the hash?\n            }\n        }\n        flattened_data\n    }\n    pub fn hash(self: Self) -> Field {\n        std::hash::poseidon2::Poseidon2::hash(\n            self.flatten(),\n            NumEntries * (NumParticipants + 2) * 2,\n        )\n    }\n}\n\npub fn commit<let N: u32>(plaintext: [Field; N], secret: Field) -> Ciphertext<N> {\n    let secrets: [Field; N] = expand_secret(secret);\n\n    let mut encryption_keys: [Point; N] = [Point::point_at_infinity(); N];\n    let mut ciphertext: Ciphertext<N> = Ciphertext::default();\n    for i in 0..N {\n        encryption_keys[i] = multi_scalar_mul([G], [EmbeddedCurveScalar::from_field(secrets[i])]);\n        let encrypted = symmetric_encrypt([0, plaintext[i]], encryption_keys[i].x);\n        ciphertext.data[2 * i] = encrypted[0];\n        ciphertext.data[2 * i + 1] = encrypted[1];\n    }\n    ciphertext\n}\n\npub fn commit_mask<let N: u32>(reveal_vector: [Field; N], masking_secret: Field) -> [Point; N] {\n    // if reveal_vector[i] = true, use G1, else use G2\n    let secrets: [Field; N] = expand_secret(masking_secret);\n    // let mut base_points: [Point; N] = [Point::point_at_infinity(); N];\n    // for i in 0..N {\n    //     base_points[i] = G.conditional_assign(H, reveal_vector[i]);\n    // }\n    let mut masking_keys: [Point; N] = [Point::point_at_infinity(); N];\n\n    // embedded_curve_add_unsafe\n    for i in 0..N {\n        masking_keys[i] = multi_scalar_mul([G], [EmbeddedCurveScalar::from_field(secrets[i])]);\n\n        // we can use an unsafe add op here because masking_keys[i] is a function of [G], and colliding with [H] would require solving the dlog problem\n        let alternative_masking_key = embedded_curve_add_unsafe(masking_keys[i], H);\n\n        masking_keys[i].x = (masking_keys[i].x - alternative_masking_key.x) * reveal_vector[i]\n            + alternative_masking_key.x;\n        masking_keys[i].y = (masking_keys[i].y - alternative_masking_key.y) * reveal_vector[i]\n            + alternative_masking_key.y;\n    }\n\n    masking_keys\n}\n\npub fn update_mask<let N: u32>(masking_keys: [Point; N], encrypt_secret: Field) -> [Point; N] {\n    let secrets: [Field; N] = expand_secret(encrypt_secret);\n    let mut updated_masking_keys: [Point; N] = [Point::point_at_infinity(); N];\n    for i in 0..N {\n        updated_masking_keys[i] = multi_scalar_mul(\n            [masking_keys[i]],\n            [EmbeddedCurveScalar::from_field(secrets[i])],\n        );\n    }\n    updated_masking_keys\n}\n\npub fn reveal_mask<let N: u32>(\n    updated_masking_keys: [Point; N],\n    masking_secret: Field,\n) -> [Point; N] {\n    let mut masking_secrets: [Field; N] = expand_secret(masking_secret);\n    //   println(f\"final masking secrets {inverse_masking_secrets}\");\n    let mut inverse_masking_secrets: [BN254_Fq; N] = [BN254_Fq::new(); N];\n\n    // oh arse we need to invert in the bn254 field\n    for i in 0..N {\n        let secret_bn = BN254_Fq::from(masking_secrets[i]);\n        let inverse = BN254_Fq::one() / secret_bn;\n        inverse_masking_secrets[i] = inverse;\n    }\n\n    let mut possible_encryption_keys: [Point; N] = [Point::point_at_infinity(); N];\n    for i in 0..N {\n        let bit_limbs = inverse_masking_secrets[i].limbs;\n        // 120, 120, 120\n        let low_120 = bit_limbs[0] as Field;\n        let mid_120 = bit_limbs[1] as Field;\n        let mid_bytes = (mid_120 as Field).to_le_bytes::<15>();\n        let low_128 = low_120 + (mid_bytes[0] as Field) * 0x1000000000000000000000000000000;\n\n        let remainder_mid_112 = (mid_120 - (mid_bytes[0] as Field)) / 0x100;\n\n        let high_16 = bit_limbs[2] as Field;\n\n        let high_128 = remainder_mid_112 + high_16 * 0x10000000000000000000000000000;\n        possible_encryption_keys[i] = multi_scalar_mul(\n            [updated_masking_keys[i]],\n            [EmbeddedCurveScalar::new(low_128, high_128)],\n        );\n    }\n    possible_encryption_keys\n}\n\npub fn create_round_commitments<let NumEntries: u32, let NumParticipants: u32>(\n    user_plaintext: [Field; NumEntries],\n    reveal_vector: [Field; NumEntries],\n    encrypt_secret: Field,\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    user_index: u32,\n) -> UserOutputState<NumEntries, NumParticipants> {\n    let mut r: UserOutputState<NumEntries, NumParticipants> = UserOutputState::default();\n    for i in 0..NumParticipants {\n        if (i != user_index) {\n            r.user_updated_mask_commitments[i] = update_mask(\n                round_state.previous_output_states[i].mask_commitments,\n                encrypt_secret,\n            );\n        }\n    }\n    r.ciphertext = commit(user_plaintext, encrypt_secret);\n    r.mask_commitments = commit_mask(reveal_vector, masking_secret);\n    r\n}\n\npub fn consume_round_commitments<let NumEntries: u32, let NumParticipants: u32>(\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    user_index: u32,\n) -> [[Option<Field>; NumEntries]; NumParticipants - 1] {\n    let mut count: Field = 0;\n\n    let mut target_plaintexts: [[Option<Field>; NumEntries]; NumParticipants - 1] =\n        [[Option::default(); NumEntries]; NumParticipants - 1];\n    for i in 0..NumParticipants {\n        if (i != user_index) {\n            let decryption_keys = reveal_mask(\n                round_state.previous_output_states[i].user_updated_mask_commitments[user_index],\n                masking_secret,\n            );\n            let plaintexts = trial_decrypt(\n                decryption_keys,\n                round_state.previous_output_states[i].ciphertext,\n            );\n            target_plaintexts[count] = plaintexts;\n            count += 1;\n        }\n    }\n    target_plaintexts\n}\n\nimpl<let NumEntries: u32, let NumParticipants: u32> std::default::Default for RoundState<NumEntries, NumParticipants> {\n    fn default() -> Self {\n        RoundState {\n            round_number: 0,\n            user_encrypt_secret_hashes: [0; NumParticipants],\n            user_mask_secret_hashes: [0; NumParticipants],\n            previous_output_states: [UserOutputState::default(); NumParticipants],\n        }\n    }\n}\nimpl<let NumEntries: u32, let NumParticipants: u32> RoundState<NumEntries, NumParticipants> {\n\n    pub fn hash(self) -> Field {\n        let mut flattened_data: [Field; NumParticipants * 3 + 1] = [0; NumParticipants * 3 + 1];\n\n        for i in 0..NumParticipants {\n            flattened_data[3 * i] = self.user_encrypt_secret_hashes[i];\n            flattened_data[3 * i + 1] = self.user_mask_secret_hashes[i];\n            flattened_data[3 * i + 2] = self.previous_output_states[i].hash();\n        }\n        flattened_data[NumParticipants * 3] = self.round_number as Field - 1;\n\n        std::hash::poseidon2::Poseidon2::hash(flattened_data, NumParticipants * 3 + 1)\n    }\n\n    pub fn update2(\n        self,\n        new_output_state: UserOutputState<NumEntries, NumParticipants>,\n        user_index: u32,\n    ) -> Self {\n        let mut updated = self;\n\n        updated.round_number += 1;\n        updated.previous_output_states[user_index] = new_output_state;\n        updated\n    }\n    pub fn update(\n        self,\n        new_output_states: [UserOutputState<NumEntries, NumParticipants>; NumParticipants],\n    ) -> Self {\n        let mut updated = self;\n\n        updated.round_number += 1;\n        updated.previous_output_states = new_output_states;\n        updated\n    }\n}\n\npub fn execute_round<let NumEntries: u32, let NumParticipants: u32>(\n    user_plaintext: [Field; NumEntries],\n    reveal_vector: [Field; NumEntries],\n    encrypt_secret: Field,\n    masking_secret: Field,\n    round_state: RoundState<NumEntries, NumParticipants>,\n    previous_round_hash: Field,\n    user_index: u32,\n    ) -> (UserOutputState<NumEntries, NumParticipants>, [[Option<Field>; NumEntries]; NumParticipants - 1]) {\n    std::assert_constant(user_index);\n\n    // when used inside a Noir program, previous_round_hash should be sourced from a pub variable\n    assert_eq(previous_round_hash, round_state.hash());\n\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([encrypt_secret, -1], 2),\n        round_state.user_encrypt_secret_hashes[user_index],\n    );\n    assert_eq(\n        std::hash::poseidon2::Poseidon2::hash([masking_secret, -1], 2),\n        round_state.user_mask_secret_hashes[user_index],\n    );\n    let state = create_round_commitments(\n        user_plaintext,\n        reveal_vector,\n        encrypt_secret,\n        masking_secret,\n        round_state,\n        user_index,\n    );\n\n    let plaintexts = consume_round_commitments(masking_secret, round_state, user_index);\n\n    (state, plaintexts)\n}\n\n#[test]\nfn test_execute_round() {\n    let alice_secret = std::hash::poseidon2::Poseidon2::hash([0], 1);\n    let alice_mask = std::hash::poseidon2::Poseidon2::hash([1], 1);\n    let bob_secret = std::hash::poseidon2::Poseidon2::hash([2], 1);\n    let bob_mask = std::hash::poseidon2::Poseidon2::hash([3], 1);\n\n    let round_state: RoundState<4, 2> = RoundState {\n        round_number: 1,\n        user_encrypt_secret_hashes: [\n            poseidon2([alice_secret, -1], 2),\n            poseidon2([bob_secret, -1], 2),\n        ],\n        user_mask_secret_hashes: [poseidon2([alice_mask, -1], 2), poseidon2([bob_mask, -1], 2)],\n        previous_output_states: [UserOutputState::default(); 2],\n    };\n\n    let previous_round_hash = round_state.hash();\n    let alice_state = [0, 1, 2, 3];\n    let alice_reveal = [0, 1, 0, 1];\n    let bob_state = [-1, -2, -3, -4];\n    let bob_reveal = [1, 0, 1, 0];\n\n    // after executing. we have ciphertexts and mask commitments, but no mask reveal commitments\n    let alice_output = execute_round(\n        alice_state,\n        alice_reveal,\n        alice_secret,\n        alice_mask,\n        round_state,\n        previous_round_hash,\n        0,\n    );\n\n    let round_state = round_state.update([alice_output.0, round_state.previous_output_states[1]]);\n    let previous_round_hash = round_state.hash();\n\n    let bob_output = execute_round(\n        bob_state,\n        bob_reveal,\n        bob_secret,\n        bob_mask,\n        round_state,\n        previous_round_hash,\n        1,\n    );\n\n    let round_state = round_state.update([round_state.previous_output_states[0], bob_output.0]);\n    let previous_round_hash = round_state.hash();\n\n    let alice_output = execute_round(\n        alice_state,\n        alice_reveal,\n        alice_secret,\n        alice_mask,\n        round_state,\n        previous_round_hash,\n        0,\n    );\n\n    let round_state = round_state.update([alice_output.0, round_state.previous_output_states[1]]);\n    let previous_round_hash = round_state.hash();\n\n    let bob_output = execute_round(\n        bob_state,\n        bob_reveal,\n        bob_secret,\n        bob_mask,\n        round_state,\n        previous_round_hash,\n        1,\n    );\n\n    let alice_decrypted = alice_output.1[0];\n    let bob_decrypted = bob_output.1[0];\n\n    assert_eq(alice_decrypted[0].is_some(), false);\n    assert_eq(alice_decrypted[1].is_some(), true);\n    assert_eq(alice_decrypted[2].is_some(), false);\n    assert_eq(alice_decrypted[3].is_some(), true);\n\n    assert_eq(alice_decrypted[1].unwrap_unchecked(), -2);\n    assert_eq(alice_decrypted[3].unwrap_unchecked(), -4);\n\n    assert_eq(bob_decrypted[0].is_some(), true);\n    assert_eq(bob_decrypted[1].is_some(), false);\n    assert_eq(bob_decrypted[2].is_some(), true);\n    assert_eq(bob_decrypted[3].is_some(), false);\n\n    assert_eq(bob_decrypted[0].unwrap_unchecked(), 0);\n    assert_eq(bob_decrypted[2].unwrap_unchecked(), 2);\n}\n\n/// This doesn't really do anything by ensures that there is a test for CI to run.\n#[test]\nfn smoke_test() {\n    let plaintext: [Field; 3] = [0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, 123, -1];\n    let bob_reveal_vector: [Field; 3] = [0, 1, 1];\n\n    let alice_encrypt_secret: Field = std::hash::poseidon2::Poseidon2::hash([0], 1);\n\n    let bob_masking_secret: Field = std::hash::poseidon2::Poseidon2::hash([2], 1);\n\n    // Round 1a: Alice generates the ciphertext that describes her hidden state, sends to Bob\n    let ciphertext = commit(plaintext, alice_encrypt_secret);\n\n    // Round 1b: Bob generates commitment mask that describes which parts of the state he is entitled to see, sends to Alice\n    let bob_masking_keys = commit_mask(bob_reveal_vector, bob_masking_secret);\n\n    // Round 2: Alice uses Bob's commitment mask to create a hidden version of her encryption keys, sends to Bob\n    let alice_masking_update = update_mask(bob_masking_keys, alice_encrypt_secret);\n\n    // Round 3: Bob removes his masking component from Alice's updated mask to produce partial decryption keys\n    let partial_decrypt_keys = reveal_mask(alice_masking_update, bob_masking_secret);\n\n    // (still round 3): Bob uses the partial decryption keys to decrypt the part of Alice's state he is entitled to see\n    let partial_plaintext = trial_decrypt(partial_decrypt_keys, ciphertext);\n\n    assert_eq(partial_plaintext[0].is_some(), false);\n    assert_eq(partial_plaintext[1].is_some(), true);\n    assert_eq(partial_plaintext[2].is_some(), true);\n\n    assert_eq(partial_plaintext[1].unwrap_unchecked(), 123);\n    assert_eq(partial_plaintext[2].unwrap_unchecked(), -1);\n}\n","path":"/Users/zac/nargo/github.com/zac-williamson/mpclib/main/src/selective_disclosure/selective_disclosure.nr"},"83":{"source":"use crate::utils::map::map;\nuse std::cmp::Ordering;\n\nuse crate::params::BigNumParamsGetter;\n\nuse crate::fns::{\n    constrained_ops::{\n        add, assert_is_not_equal, cmp, conditional_select, derive_from_seed, div, eq, from_field,\n        is_zero, limbs_to_field, mul, neg, sub, udiv, udiv_mod, umod, validate_in_field,\n        validate_in_range,\n    },\n    expressions::{__compute_quadratic_expression, evaluate_quadratic_expression},\n    serialization::{from_be_bytes, to_le_bytes},\n    unconstrained_ops::{\n        __add, __batch_invert, __batch_invert_slice, __derive_from_seed, __div, __eq, __invmod,\n        __is_zero, __mul, __neg, __pow, __sub, __tonelli_shanks_sqrt, __udiv_mod,\n    },\n};\nuse std::ops::{Add, Div, Mul, Neg, Sub};\n\npub struct BigNum<let N: u32, let MOD_BITS: u32, Params> {\n    pub limbs: [u128; N],\n}\n// We aim to avoid needing to add a generic parameter to this trait, for this reason we do not allow\n// accessing the limbs of the bignum except through slices.\npub trait BigNumTrait: Neg + Add + Sub + Mul + Div + Eq {\n    // TODO: this crashes the compiler? v0.32\n    // fn default() -> Self { std::default::Default::default  () }\n    fn new() -> Self;\n    fn zero() -> Self;\n    fn one() -> Self;\n    fn derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self;\n    unconstrained fn __derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self;\n    fn from_slice(limbs: [u128]) -> Self;\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self;\n    fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes];\n\n    fn modulus() -> Self;\n    fn modulus_bits(self) -> u32;\n    fn num_limbs(self) -> u32;\n    fn get_limbs_slice(self) -> [u128];\n    fn get_limb(self, idx: u32) -> u128;\n    fn set_limb(&mut self, idx: u32, value: u128);\n\n    unconstrained fn __eq(self, other: Self) -> bool;\n    unconstrained fn __is_zero(self) -> bool;\n\n    unconstrained fn __neg(self) -> Self;\n    unconstrained fn __add(self, other: Self) -> Self;\n    unconstrained fn __sub(self, other: Self) -> Self;\n    unconstrained fn __mul(self, other: Self) -> Self;\n    unconstrained fn __div(self, other: Self) -> Self;\n    unconstrained fn __udiv_mod(self, divisor: Self) -> (Self, Self);\n    unconstrained fn __invmod(self) -> Self;\n    unconstrained fn __pow(self, exponent: Self) -> Self;\n\n    unconstrained fn __batch_invert<let M: u32>(to_invert: [Self; M]) -> [Self; M];\n    unconstrained fn __batch_invert_slice<let M: u32>(to_invert: [Self]) -> [Self];\n\n    unconstrained fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self>;\n\n    unconstrained fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        add: [Self; ADD_N],\n        add_flags: [bool; ADD_N],\n    ) -> (Self, Self);\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        add: [Self; ADD_N],\n        add_flags: [bool; ADD_N],\n    );\n\n    fn assert_is_not_equal(self, other: Self);\n    fn validate_in_range(self);\n    fn validate_in_field(self);\n\n    fn udiv_mod(self, divisor: Self) -> (Self, Self);\n    fn udiv(self, divisor: Self) -> Self;\n    fn umod(self, divisor: Self) -> Self;\n\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n    fn is_zero(self) -> bool;\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::convert::From<Field> for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn from(input: Field) -> Self {\n        Self { limbs: from_field::<N, MOD_BITS>(input) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> Neg for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn neg(self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: neg::<_, MOD_BITS>(params, self.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> BigNumTrait for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n\n    #[deprecated(\"`BigNum::zero()` is preferred\")]\n    fn new() -> Self {\n        Self::zero()\n    }\n\n    fn zero() -> Self {\n        Self { limbs: [0; N] }\n    }\n\n    fn one() -> Self {\n        let mut result = BigNum::zero();\n        result.limbs[0] = 1;\n        result\n    }\n\n    fn derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self {\n        let params = Params::get_params();\n        Self { limbs: derive_from_seed::<_, MOD_BITS, _>(params, seed) }\n    }\n\n    unconstrained fn __derive_from_seed<let SeedBytes: u32>(seed: [u8; SeedBytes]) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __derive_from_seed::<_, MOD_BITS, _>(params, seed) }\n    }\n\n    fn from_slice(limbs: [u128]) -> Self {\n        Self { limbs: limbs.as_array() }\n    }\n\n    fn from_be_bytes<let NBytes: u32>(x: [u8; NBytes]) -> Self {\n        Self { limbs: from_be_bytes::<_, MOD_BITS, _>(x) }\n    }\n\n    fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes] {\n        to_le_bytes::<_, MOD_BITS, _>(self.limbs)\n    }\n\n    fn modulus() -> Self {\n        Self { limbs: Params::get_params().modulus }\n    }\n\n    fn modulus_bits(_: Self) -> u32 {\n        MOD_BITS\n    }\n\n    fn num_limbs(_: Self) -> u32 {\n        N\n    }\n\n    fn get_limbs_slice(self) -> [u128] {\n        self.limbs\n    }\n\n    fn get_limb(self, idx: u32) -> u128 {\n        self.limbs[idx]\n    }\n\n    fn set_limb(&mut self, idx: u32, value: u128) {\n        self.limbs[idx] = value;\n    }\n\n    unconstrained fn __eq(self, other: Self) -> bool {\n        __eq(self.limbs, other.limbs)\n    }\n\n    unconstrained fn __is_zero(self) -> bool {\n        __is_zero(self.limbs)\n    }\n\n    unconstrained fn __neg(self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __neg(params, self.limbs) }\n    }\n\n    unconstrained fn __add(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __add(params, self.limbs, other.limbs) }\n    }\n\n    unconstrained fn __sub(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __sub(params, self.limbs, other.limbs) }\n    }\n\n    unconstrained fn __mul(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __mul::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n\n    unconstrained fn __div(self, divisor: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __div::<_, MOD_BITS>(params, self.limbs, divisor.limbs) }\n    }\n\n    unconstrained fn __udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let (q, r) = __udiv_mod(self.limbs, divisor.limbs);\n        (Self { limbs: q }, Self { limbs: r })\n    }\n\n    unconstrained fn __invmod(self) -> Self {\n        let params = Params::get_params();\n        assert(params.has_multiplicative_inverse);\n        Self { limbs: __invmod::<_, MOD_BITS>(params, self.limbs) }\n    }\n\n    unconstrained fn __pow(self, exponent: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: __pow::<_, MOD_BITS>(params, self.limbs, exponent.limbs) }\n    }\n\n    unconstrained fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M] {\n        let params = Params::get_params();\n        assert(params.has_multiplicative_inverse);\n        __batch_invert::<_, MOD_BITS, _>(params, x.map(|bn: Self| bn.limbs)).map(|limbs| {\n            Self { limbs }\n        })\n    }\n\n    unconstrained fn __batch_invert_slice<let M: u32>(x: [Self]) -> [Self] {\n        let params = Params::get_params();\n        assert(params.has_multiplicative_inverse);\n        __batch_invert_slice::<_, MOD_BITS>(params, x.map(|bn: Self| bn.limbs)).map(|limbs| {\n            Self { limbs }\n        })\n    }\n\n    unconstrained fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self> {\n        let params = Params::get_params();\n        let maybe_limbs = __tonelli_shanks_sqrt(params, self.limbs);\n        maybe_limbs.map(|limbs| Self { limbs })\n    }\n\n    unconstrained fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self) {\n        let params = Params::get_params();\n        let (q_limbs, r_limbs) = __compute_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            rhs_flags,\n            map(linear_terms, |bn: Self| bn.limbs),\n            linear_flags,\n        );\n        (Self { limbs: q_limbs }, Self { limbs: r_limbs })\n    }\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) {\n        let params = Params::get_params();\n        evaluate_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn: Self| bn.limbs)),\n            rhs_flags,\n            map(linear_terms, |bn: Self| bn.limbs),\n            linear_flags,\n        )\n    }\n\n    fn validate_in_field(self: Self) {\n        let params = Params::get_params();\n        validate_in_field::<_, MOD_BITS>(params, self.limbs);\n    }\n\n    fn validate_in_range(self) {\n        validate_in_range::<_, _, MOD_BITS>(self.limbs);\n    }\n\n    fn assert_is_not_equal(self, other: Self) {\n        let params = Params::get_params();\n        assert_is_not_equal(params, self.limbs, other.limbs);\n    }\n\n    fn udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = Params::get_params();\n        let (q, r) = udiv_mod::<_, MOD_BITS>(params, self.limbs, divisor.limbs);\n        (Self { limbs: q }, Self { limbs: r })\n    }\n\n    fn udiv(self, divisor: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: udiv::<_, MOD_BITS>(params, self.limbs, divisor.limbs) }\n    }\n\n    fn umod(self, divisor: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: umod::<_, MOD_BITS>(params, self.limbs, divisor.limbs) }\n    }\n\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        Self { limbs: conditional_select(lhs.limbs, rhs.limbs, predicate) }\n    }\n\n    fn is_zero(self) -> bool {\n        is_zero::<N, MOD_BITS>(self.limbs)\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> Default for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn default() -> Self {\n        Self::zero()\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Add for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn add(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: add::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Sub for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn sub(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: sub::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Mul for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: mul::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::ops::Div for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, other: Self) -> Self {\n        let params = Params::get_params();\n        Self { limbs: div::<_, MOD_BITS>(params, self.limbs, other.limbs) }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::cmp::Eq for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn eq(self, other: Self) -> bool {\n        let params = Params::get_params();\n        eq::<_, MOD_BITS>(params, self.limbs, other.limbs)\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32, Params> std::cmp::Ord for BigNum<N, MOD_BITS, Params>\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    fn cmp(self, other: Self) -> Ordering {\n        cmp::<_, MOD_BITS>(self.limbs, other.limbs)\n    }\n}\n\n/// `to_field` converts a BigNum to a Field, conditioned on the bignum fitting in a field element\n///\n/// we have opted to not add this to the BigNumTrait as it might lead to bad usage of it\n/// i.e. using this function with modulus larger than the Grumpkin modulus would lead to runtime errors, if the bignum is not deliberately picked to be in range, e.g. the bignum is the output of a hash function.\n/// for such use cases we advise developers to use comptime assertions to ensure the modulus is not larger than the Grumpkin modulus\npub fn to_field<let N: u32, let MOD_BITS: u32, Params>(input: BigNum<N, MOD_BITS, Params>) -> Field\nwhere\n    Params: BigNumParamsGetter<N, MOD_BITS>,\n{\n    limbs_to_field(Params::get_params(), input.limbs)\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/bignum.nr"},"115":{"source":"use crate::constants::TWO_POW_120;\nuse crate::fns::{\n    expressions::evaluate_quadratic_expression,\n    unconstrained_helpers::{\n        __add_with_flags, __from_field, __neg_with_flags, __sub_with_flags, __validate_gt_remainder,\n        __validate_in_field_compute_borrow_flags,\n    },\n    unconstrained_ops::{__add, __div, __mul, __neg, __sub, __udiv_mod},\n};\nuse crate::params::BigNumParams as P;\nuse std::cmp::Ordering;\n\n/**\n * In this file:\n *\n * conditional_select\n * assert_is_not_equal\n * eq\n * validate_in_field\n * validate_in_range\n * validate_quotient_in_range\n * validate_gt\n * neg\n * add\n * sub\n * mul\n * div\n * udiv_mod\n * udiv\n * umod\n * gt \n * check_gt_with_flags\n */\n\npub(crate) fn limbs_to_field<let N: u32, let MOD_BITS: u32>(\n    _params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> Field {\n    if N > 2 {\n        // validate that the limbs is less than the modulus the grumpkin modulus\n        let mut grumpkin_modulus = [0; N];\n        grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n        grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n        grumpkin_modulus[2] = 0x3064;\n        validate_gt::<N, MOD_BITS>(grumpkin_modulus, limbs);\n        // validate that the limbs are in range\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n    }\n    // validate the limbs sum up to the field value\n    if N < 2 {\n        limbs[0] as Field\n    } else if N == 2 {\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n        (limbs[0] + limbs[1] * TWO_POW_120) as Field\n    } else {\n        // validate_in_range::<N, 254>(limbs);\n        (\n            limbs[0] as Field\n                + limbs[1] as Field * TWO_POW_120 as Field\n                + limbs[2] as Field * TWO_POW_120 as Field * TWO_POW_120 as Field\n        )\n    }\n}\n\npub(crate) fn from_field<let N: u32, let MOD_BITS: u32>(field: Field) -> [u128; N] {\n    // Safety: we check that the resulting limbs represent the intended field element\n    // we check the bit length, the limbs being max 120 bits, and the value in total is less than the field modulus\n    let result: [u128; N] = unsafe { __from_field::<N>(field) };\n    if !std::runtime::is_unconstrained() {\n        // validate the limbs are in range and the value in total is less than 2^254\n\n        // validate that the last limb is less than the modulus\n        if N > 2 {\n            // validate that the result is less than the modulus\n            let mut grumpkin_modulus = [0; N];\n            grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n            grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n            grumpkin_modulus[2] = 0x3064;\n            validate_gt::<N, MOD_BITS>(grumpkin_modulus, result);\n            // validate that the limbs are in range\n            validate_in_range::<_, N, MOD_BITS>(result);\n        }\n        // validate the limbs sum up to the field value\n        let TWO_POW_120_FIELD = TWO_POW_120 as Field;\n        let field_val = if N < 2 {\n            result[0] as Field\n        } else if N == 2 {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field + result[1] as Field * TWO_POW_120_FIELD\n        } else {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field\n                + result[1] as Field * TWO_POW_120_FIELD\n                + result[2] as Field * TWO_POW_120_FIELD * TWO_POW_120_FIELD\n        };\n        assert_eq(field_val, field);\n    }\n\n    result\n}\n\n/**\n* @brief given an input seed, generate a pseudorandom BigNum value\n* @details we hash the input seed into `modulus_bits * 2` bits of entropy,\n* which is then reduced into a BigNum value\n* We use a hash function that can be modelled as a random oracle\n* This function *should* produce an output that is a uniformly randomly distributed value modulo BigNum::modulus()\n**/\n\npub(crate) fn derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let mut rolling_seed: [u8; SeedBytes + 1] = [0; SeedBytes + 1];\n    for i in 0..SeedBytes {\n        rolling_seed[i] = seed[i];\n        assert_eq(rolling_seed[i], seed[i]);\n    }\n\n    let mut hash_buffer: [u8; N * 2 * 15] = [0; N * 2 * 15];\n\n    let mut rolling_hash_fields: [Field; (SeedBytes / 31) + 1] = [0; (SeedBytes / 31) + 1];\n    let mut seed_ptr = 0;\n    for i in 0..(SeedBytes / 31) + 1 {\n        let mut packed: Field = 0;\n        for _ in 0..31 {\n            if (seed_ptr < SeedBytes) {\n                packed *= 256;\n                packed += seed[seed_ptr] as Field;\n                seed_ptr += 1;\n            }\n        }\n        rolling_hash_fields[i] = packed;\n    }\n\n    let compressed =\n        std::hash::poseidon2::Poseidon2::hash(rolling_hash_fields, (SeedBytes / 31) + 1);\n    let mut rolling_hash: [Field; 2] = [compressed, 0];\n\n    let num_hashes = (240 * N) / 254 + (((30 * N) % 32) != 0) as u32;\n    for i in 0..num_hashes - 1 {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        for j in 0..30 {\n            hash_buffer[i * 30 + j] = hash[j];\n        }\n        rolling_hash[1] += 1;\n    }\n\n    {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        let remaining_bytes = 30 * N - (num_hashes - 1) * 30;\n        for j in 0..remaining_bytes {\n            hash_buffer[(num_hashes - 1) * 30 + j] = hash[j];\n        }\n    }\n\n    let num_bits = MOD_BITS * 2;\n    let num_bytes = num_bits / 8 + ((num_bits % 8) != 0) as u32;\n\n    let bits_in_last_byte = num_bits as u8 % 8;\n    let last_byte_mask = (1 as u8 << bits_in_last_byte) - 1;\n    hash_buffer[num_bytes - 1] = hash_buffer[num_bytes - 1] & last_byte_mask;\n\n    let num_bigfield_chunks = (2 * N) / (N - 1) + (((2 * N) % (N - 1)) != 0) as u32;\n    let mut byte_ptr = 0;\n\n    // we want to convert our byte array into bigfield chunks\n    // each chunk has at most N-1 limbs\n    // to determine the exact number of chunks, we need the `!=` or `>` operator which is not avaiable when defining array sizes\n    // so we overestimate at 4\n    // e.g. if N = 20, then we have 40 limbs we want to reduce, but each bigfield chunk is 19 limbs, so we need 3\n    // if N = 2, we have 4 limbs we want to reduce but each bigfield chunk is only 1 limb, so we need 4\n    // max possible number of chunks is therefore 4\n    let mut bigfield_chunks: [[u128; N]; 4] = [[0; N]; 4];\n    for k in 0..num_bigfield_chunks {\n        let mut bigfield_limbs: [u128; N] = [0; N];\n        let mut num_filled_bytes = (k * 30);\n        let mut num_remaining_bytes = num_bytes - num_filled_bytes;\n        let mut num_remaining_limbs =\n            (num_remaining_bytes / 15) + (num_remaining_bytes % 15 > 0) as u32;\n        let mut more_than_N_minus_one_limbs = (num_remaining_limbs > (N - 1)) as u32;\n        let mut num_limbs_in_bigfield = more_than_N_minus_one_limbs * (N - 1)\n            + num_remaining_limbs * (1 - more_than_N_minus_one_limbs);\n\n        for j in 0..num_limbs_in_bigfield {\n            let mut limb: u128 = 0;\n            for _ in 0..15 {\n                let need_more_bytes = (byte_ptr < num_bytes);\n                let mut byte = hash_buffer[byte_ptr];\n                limb *= (256 * need_more_bytes as u128 + (1 - need_more_bytes as u128));\n                limb += byte as u128 * need_more_bytes as u128;\n                byte_ptr += need_more_bytes as u32;\n            }\n            bigfield_limbs[num_limbs_in_bigfield - 1 - j] = limb;\n        }\n        bigfield_chunks[num_bigfield_chunks - 1 - k] = bigfield_limbs;\n    }\n\n    let mut bigfield_rhs_limbs: [u128; N] = [0; N];\n    bigfield_rhs_limbs[N - 1] = 1;\n    validate_in_range::<_, _, MOD_BITS>(bigfield_rhs_limbs);\n\n    let mut result: [u128; N] = [0; N];\n\n    for i in 0..num_bigfield_chunks {\n        let bigfield_lhs_limbs = bigfield_chunks[i];\n\n        // result = mul(params, result, bigfield_rhs_limbs);\n        result = add(params, result, bigfield_lhs_limbs);\n    }\n\n    result\n}\n\n/**\n* @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n* @description should be cheaper than using an IF statement (TODO: check!)\n**/\npub(crate) fn conditional_select<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n    predicate: bool,\n) -> [u128; N] {\n    let mut result: [u128; N] = lhs;\n    for i in 0..N {\n        // (lhs[i] - rhs[i]) * predicate + rhs[i]\n        // in case lhs < rhs, this will underflow so we have to do one extra multiplication to prevent it\n        result[i] = lhs[i] * predicate as u128 + rhs[i] * (1 - predicate as u128);\n    }\n    result\n}\n\n/**\n    * @brief Validate self != other\n    * @details If A == B, then A == B mod N.\n    *          We can efficiently evaluate A == B mod N where N = circuit modulus\n    *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n    *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n    *          (todo: compute how tiny)\n    **/\npub(crate) fn assert_is_not_equal<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) {\n    let mut l: Field = 0;\n    let mut r: Field = 0;\n    let mut modulus_mod_n: Field = 0;\n    for i in 0..N {\n        l *= TWO_POW_120 as Field;\n        r *= TWO_POW_120 as Field;\n        modulus_mod_n *= TWO_POW_120 as Field;\n        l += lhs[N - i - 1] as Field;\n        r += rhs[N - i - 1] as Field;\n        modulus_mod_n += params.modulus[N - i - 1] as Field;\n    }\n\n    // lhs can be either X mod N or P + X mod N\n    // rhs can be either Y mod N or P + Y mod N\n    // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n    let diff = l - r;\n    let target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n    assert(target != 0, \"asssert_is_not_equal fail\");\n}\n\npub(crate) fn eq<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let diff = sub::<_, MOD_BITS>(params, lhs, rhs);\n    // if self == other, possible values of `diff` will be `p` or `0`\n    // (the subtract operator constrains diff to be < ceil(log(p)))\n    // TODO: can do this more efficiently via witngen in unconstrained functions?\n    let is_equal_modulus: bool = diff == params.modulus;\n    let is_equal_zero: bool = diff.all(|elem| elem == 0);\n    is_equal_modulus | is_equal_zero\n}\n\npub(crate) fn is_zero<let N: u32, let MOD_BITS: u32>(val: [u128; N]) -> bool {\n    val.all(|limb| limb == 0)\n}\n\npub(crate) fn validate_in_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) {\n    // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n    let mut p_minus_self: [Field; N] = [0; N];\n    let modulus: [u128; N] = params.modulus;\n    for i in 0..N {\n        p_minus_self[i] = (modulus[i] as Field - val[i] as Field);\n    }\n    let borrow_flags = unsafe { __validate_in_field_compute_borrow_flags(params, val) };\n    p_minus_self[0] += (borrow_flags[0] as Field * TWO_POW_120 as Field);\n    for i in 1..N - 1 {\n        p_minus_self[i] +=\n            (borrow_flags[i] as Field * TWO_POW_120 as Field - borrow_flags[i - 1] as Field);\n    }\n    p_minus_self[N - 1] -= (borrow_flags[N - 2] as Field);\n    validate_in_range::<_, _, MOD_BITS>(p_minus_self);\n}\n\n/**\n* @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n**/\npub(crate) fn validate_in_range<T, let N: u32, let MOD_BITS: u32>(limbs: [T; N])\nwhere\n    T: Into<Field>,\n{\n    for i in 0..(N - 1) {\n        limbs[i].into().assert_max_bit_size::<120>();\n    }\n\n    limbs[N - 1].into().assert_max_bit_size::<MOD_BITS - ((N - 1) * 120)>();\n}\n\n/**\n* @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n* @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n*              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n*              Why is this?\n*              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n*                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n*                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n*              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n*\n*              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n*              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n**/\npub(crate) fn validate_quotient_in_range<let N: u32, let MOD_BITS: u32>(limbs: [u128; N]) {\n    for i in 0..(N) {\n        (limbs[i] as Field).assert_max_bit_size::<120>();\n    }\n    // Note: replace magic number 6 with definition\n    (limbs[N - 1] as Field).assert_max_bit_size::<MOD_BITS - ((N - 1) * 120) + 6>();\n}\n\n// validate that lhs - rhs does not underflow i.e. lhs > rhs\npub(crate) fn validate_gt<let N: u32, let MOD_BITS: u32>(lhs: [u128; N], rhs: [u128; N]) {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    // a - b = r\n    // p + a - b - r = 0\n    let (underflow, result, carry_flags, borrow_flags) =\n        unsafe { __validate_gt_remainder(lhs, rhs) };\n    validate_in_range::<_, _, MOD_BITS>(result);\n    assert(!underflow, \"BigNum::validate_gt check fails\");\n    check_gt_with_flags::<N, MOD_BITS>(lhs, rhs, result, borrow_flags, carry_flags);\n}\n\npub(crate) fn neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __neg(params, val)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe { __neg_with_flags(params, val) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n        let result_limb = modulus[0] + (borrow_flags[0] as u128 * TWO_POW_120) - val[0] - result[0];\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] + (borrow_flags[i] as u128 * TWO_POW_120)\n                - val[i]\n                - result[i]\n                - borrow_flags[i - 1] as u128;\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val[N - 1] - result[N - 1] - borrow_flags[N - 2] as u128;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            // __add_u128(params, lhs, rhs)\n            __add(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) =\n            unsafe { __add_with_flags(params, lhs, rhs) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut subtrahend: [u128; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = lhs[0] as Field + rhs[0] as Field\n            - subtrahend[0] as Field\n            - result[0] as Field\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = lhs[i] as Field + rhs[i] as Field\n                - subtrahend[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry\n                + borrow_sub_carry * TWO_POW_120 as Field;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = lhs[N - 1] as Field + rhs[N - 1] as Field\n            - subtrahend[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __sub(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) =\n            unsafe { __sub_with_flags(params, lhs, rhs) };\n\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut addend: [u128; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n            + addend[0] as Field\n            + lhs[0] as Field\n            - rhs[0] as Field\n            - result[0] as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n                + addend[i] as Field\n                + lhs[i] as Field\n                - rhs[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = addend[N - 1] as Field + lhs[N - 1] as Field\n            - rhs[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\n// Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n//       via evaluate_quadratic_expression\n// e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n//      will create much fewer constraints than calling `mul` and `add` directly\npub(crate) fn mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let result = unsafe { __mul::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[lhs]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [result],\n            [true],\n        );\n    }\n    result\n}\n\n// Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\npub(crate) fn div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    assert(\n        params.has_multiplicative_inverse,\n        \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\",\n    );\n    let result = unsafe { __div::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[result]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [lhs],\n            [true],\n        );\n    }\n    result\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) fn udiv_mod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let (quotient, remainder) = unsafe { __udiv_mod(numerator, divisor) };\n    if !std::runtime::is_unconstrained() {\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        evaluate_quadratic_expression(\n            params,\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false],\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        validate_gt::<_, MOD_BITS>(divisor, remainder);\n    }\n    (quotient, remainder)\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. return param is floor(numerator / divisor)\n**/\npub(crate) fn udiv<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).0\n}\n\n/**\n* @brief udiv_mod performs integer modular reduction\n*\n* i.e. 1. numerator % divisor = return value\n**/\npub(crate) fn umod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).1\n}\n\n// a comparison function. returns true if lhs > rhs and false otherwise\npub(crate) fn cmp<let N: u32, let MOD_BITS: u32>(lhs: [u128; N], rhs: [u128; N]) -> Ordering {\n    let (underflow, result, carry_flags, borrow_flags) =\n        unsafe { __validate_gt_remainder(lhs, rhs) };\n    // if underflow is true, swap lhs and rhs\n    let (lhs, rhs) = if underflow { (rhs, lhs) } else { (lhs, rhs) };\n    check_gt_with_flags::<N, MOD_BITS>(lhs, rhs, result, borrow_flags, carry_flags);\n    if lhs == rhs {\n        Ordering::equal()\n    } else if underflow {\n        Ordering::less()\n    } else {\n        Ordering::greater()\n    }\n}\n\n// the constraining function for the results returned by __validate_gt_remainder. this is used in both comparisons and validate gt\npub(crate) fn check_gt_with_flags<let N: u32, let MOD_BITS: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n    result: [u128; N],\n    borrow_flags: [bool; N],\n    carry_flags: [bool; N],\n) {\n    let mut addend: [Field; N] = [0; N];\n    let result_limb = lhs[0] as Field - rhs[0] as Field + addend[0] - result[0] as Field - 1\n        + (borrow_flags[0] as Field - carry_flags[0] as Field) * TWO_POW_120 as Field;\n    assert(result_limb == 0);\n\n    for i in 1..N - 1 {\n        let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n        let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n        let result_limb = lhs[i] as Field - rhs[i] as Field + addend[i] as Field\n            - result[i] as Field\n            - prev_borrow_sub_carry\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n    }\n\n    let result_limb = lhs[N - 1] as Field - rhs[N - 1] as Field + addend[N - 1] as Field\n        - result[N - 1] as Field\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/constrained_ops.nr"},"116":{"source":"use crate::utils::split_bits;\n\nuse crate::constants::{TWO_POW_120, TWO_POW_126, TWO_POW_246};\nuse crate::fns::{\n    constrained_ops::validate_quotient_in_range, unconstrained_helpers::__barrett_reduction,\n};\nuse crate::params::BigNumParams as P;\n\n/**\n* @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n* @description The expression is of the form:\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n* For example, when computing the product a * b - q * p = 0, it is possible that:\n*      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n*      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n* In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n* In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n*\n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\n\nunconstrained fn __compute_quadratic_expression_with_borrow_flags<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N], [Field; 2 * N - 2]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut mulout_p = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n\n    let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, MOD_BITS, params.modulus);\n    assert(remainder == [0; N]);\n    for i in 0..N {\n        for j in 0..N {\n            mulout_n[i + j] += quotient[i] as Field * params.modulus[j] as Field;\n        }\n    }\n\n    // compute borrow flags from mulout_p and mulout_n\n    let mut borrow_flags: [Field; 2 * N - 2] = [0; 2 * N - 2];\n    let borrow_shift: Field = TWO_POW_246; // 2^{246}\n    let borrow_carry: Field = TWO_POW_126; // 2^{246 - 120} = 2^{126}\n    let downshift: Field = 1 / (TWO_POW_120 as Field);\n\n    // determine whether we need to borrow from more significant limbs.\n    // initial limb is \"simple\" comparison operation\n    // TODO: check how expensive `lt` operator is w.r.t. witness generation\n    borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n    // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n    // and there is nothing to borrow against for the final limb.\n    let mut hi_bits =\n        (mulout_p[0] - mulout_n[0] + (borrow_flags[0] as Field * borrow_shift)) * downshift;\n    for i in 1..(N + N - 2) {\n        // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n        // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n        //     * downshift;\n        mulout_p[i] += hi_bits;\n\n        // determine whether negative limb values are greater than positive limb values\n        let underflow: Field =\n            mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n        borrow_flags[i] = underflow;\n\n        hi_bits = (\n            mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)\n        )\n            * downshift;\n    }\n\n    (quotient, remainder, borrow_flags)\n}\n\n/**\n* @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n**/\n// NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n// To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n// We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n// Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n// Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\nunconstrained fn __add_linear_expression<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n    flags: [bool; M],\n) -> ([u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut sum: [u128; N] = [0; N];\n    // TODO: ugly! Will fail if input array is empty\n    let modulus2: [u128; N] = params.double_modulus;\n    for i in 0..M {\n        if (flags[i]) {\n            for j in 0..N {\n                sum[j] = sum[j] + (modulus2[j] as Field - x[i][j] as Field) as u128;\n                // assert(x[i][j].lt(modulus2[j]));\n            }\n        } else {\n            for j in 0..N {\n                sum[j] = sum[j] + x[i][j];\n            }\n        }\n    }\n    // problem if we normalize when used in computing quotient\n    sum\n}\n\n/**\n* @brief computes the limb products of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\nunconstrained fn __compute_quadratic_expression_product<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> [Field; 2 * N] {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut lhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut rhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n\n    for i in 0..NUM_PRODUCTS {\n        lhs[i] = __add_linear_expression(params, lhs_terms[i], lhs_flags[i]);\n        rhs[i] = __add_linear_expression(params, rhs_terms[i], rhs_flags[i]);\n    }\n\n    let add: [u128; N] = __add_linear_expression(params, linear_terms, linear_flags);\n\n    let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                mulout[i + j] += (lhs[k][i] as Field * rhs[k][j] as Field);\n            }\n        }\n        mulout[i] += add[i] as Field;\n    }\n    mulout\n}\n\n/**\n* @brief computes the quotient/remainder of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\npub(crate) unconstrained fn __compute_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mulout: [Field; (N * 2)] = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n    // size 4\n    // a[3] * b[3] = a[6] = 7\n    // TODO: ugly! Will fail if input slice is empty\n    let k = MOD_BITS;\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, k, params.modulus);\n\n    let mut q = quotient;\n    let mut r = remainder;\n    (q, r)\n}\n\n/**\n* @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n* @description The expression is of the form (when evaluated as an integer relation):\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* Note: this method requires the remainder term of the expression to be ZERO\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The expensive parts of this algorithm are the following:\n*      1. evaluating the limb products required to compute `lhs * rhs`\n*      2. applying range constraints to validate the result is 0\n*\n* Range constraints are needed for the following reason:\n* When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n* Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n* Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n* To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n* (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n* To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n* We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n* TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n* I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n* TODO: explain why we apply a 126-bit range check, this feels like a magic number\n* (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n* TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n* \n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\npub(crate) fn evaluate_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) {\n    // use an unconstrained function to compute the value of the quotient\n    let (quotient, _, borrow_flags): ([u128; N], [u128; N], [Field; 2 * N - 2]) = unsafe {\n        __compute_quadratic_expression_with_borrow_flags::<_, MOD_BITS, _, _, _, _>(\n            params,\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags,\n        )\n    };\n\n    // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n    // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n    validate_quotient_in_range::<_, MOD_BITS>(quotient);\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    // (should be a compile-time check...unconstrained function?)\n    // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n    let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t4: [Field; N] = [0; N];\n\n    // TODO: this is super nasty as it requires a multiplication\n    let double_modulus: [u128; N] = params.double_modulus;\n\n    for k in 0..NUM_PRODUCTS {\n        for i in 0..N {\n            for j in 0..LHS_N {\n                // note: if is_negative is not known at comptime this is very expensive\n                if (lhs_flags[k][j]) {\n                    t0[k][i] -= lhs_terms[k][j][i] as Field;\n                    t0[k][i] += double_modulus[i] as Field;\n                } else {\n                    t0[k][i] += lhs_terms[k][j][i] as Field;\n                }\n            }\n            for j in 0..RHS_N {\n                if (rhs_flags[k][j]) {\n                    t1[k][i] -= rhs_terms[k][j][i] as Field;\n                    t1[k][i] += double_modulus[i] as Field;\n                } else {\n                    t1[k][i] += rhs_terms[k][j][i] as Field;\n                }\n            }\n        }\n    }\n    for i in 0..N {\n        for j in 0..ADD_N {\n            if (linear_flags[j]) {\n                t4[i] -= linear_terms[j][i] as Field;\n                t4[i] += double_modulus[i] as Field;\n            } else {\n                t4[i] += linear_terms[j][i] as Field;\n            }\n        }\n    }\n\n    // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n    // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n    // so that we can ensure that no limbs will underflow for an honest Prover\n    let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n    // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n    // TODO: this is super nasty as it requires a multiplication\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                if k == 0 {\n                    let new_term =\n                        t0[k][i] * t1[k][j] - quotient[i] as Field * params.modulus[j] as Field;\n                    std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                    product_limbs[i + j] += new_term;\n                } else {\n                    product_limbs[i + j] += t0[k][i] * t1[k][j] as Field;\n                }\n            }\n            if (NUM_PRODUCTS == 0) {\n                product_limbs[i + j] -= quotient[i] as Field * params.modulus[j] as Field;\n            }\n        }\n        product_limbs[i] += t4[i];\n    }\n\n    // each limb product represents the sum of 120-bit products.\n    // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n    // where no more than 64 limb products are summed together.\n    // TODO: check in unconstrained function that this condition is satisfied\n    // TODO: define trade-offs regarding the value of borrow_shift\n    // (the larger the value, the greater the range check that is required on product_limbs)\n    // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n    // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n    //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n    // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n    borrow_flags[0].assert_max_bit_size::<1>();\n    product_limbs[0] += borrow_flags[0] * borrow_shift;\n    for i in 1..(N + N - 2) {\n        borrow_flags[i].assert_max_bit_size::<1>();\n        product_limbs[i] += (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n    }\n    product_limbs[N + N - 2] -= borrow_flags[N + N - 3] as Field * borrow_carry;\n\n    // Final step: Validate `product_limbs` represents the integer value `0`\n    // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n    // i.e. we need to do the following for each limb `i`:\n    //      1. validate the limb's low-120 bits equals zero\n    //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n    //      3. add the carry into limb `i+1`\n    // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n    // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n    // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n    //  where k is the number of bits in the prime field)\n    // We then add the result into the next limb and repeat.\n    let hi_shift: Field = 0x1000000000000000000000000000000;\n    let hi_downshift: Field = 1 / hi_shift;\n    for i in 0..N + N - 2 {\n        product_limbs[i] *= hi_downshift;\n        std::as_witness(product_limbs[i]);\n        product_limbs[i].assert_max_bit_size::<126>(); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n        product_limbs[i + 1] += product_limbs[i];\n    }\n    // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n    assert(product_limbs[N + N - 2] == 0);\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/expressions.nr"},"119":{"source":"use crate::constants::{TWO_POW_119, TWO_POW_120, TWO_POW_60};\nuse crate::fns::unconstrained_ops::{__add, __gte, __mul, __neg, __one, __pow};\nuse crate::params::BigNumParams as P;\nuse crate::utils::msb::get_msb64;\nuse crate::utils::split_bits::__normalize_limbs;\n\npub(crate) unconstrained fn __from_field<let N: u32>(field: Field) -> [u128; N] {\n    let mut x = field;\n    let x_first_u128 = (x as u128);\n    let first: u128 = x_first_u128 % TWO_POW_120;\n    // this becomes the same as a integer division because we're removing the remainder\n    x = (x - (first as Field)) / (TWO_POW_120 as Field);\n    let x_second_u128 = (x as u128);\n    let second = x_second_u128 % TWO_POW_120;\n    x = (x - (second as Field)) / (TWO_POW_120 as Field);\n    let x_third_u128 = (x as u128);\n    let third = x_third_u128 % TWO_POW_120;\n    let mut result: [u128; N] = [0; N];\n    if N > 2 {\n        result[0] = first;\n        result[1] = second;\n        result[2] = third;\n    }\n    if N == 2 {\n        result[0] = first;\n        result[1] = second;\n    }\n    if N == 1 {\n        result[0] = first;\n    }\n    result\n}\n\npub(crate) unconstrained fn __validate_in_field_compute_borrow_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [bool; N] {\n    let mut flags: [bool; N] = [false; N];\n    let modulus: [u128; N] = params.modulus;\n    flags[0] = modulus[0] < val[0];\n    for i in 1..N - 1 {\n        flags[i] = modulus[i] < val[i] + flags[i - 1] as u128;\n    }\n    flags\n}\n\npub(crate) unconstrained fn __validate_gt_remainder<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> (bool, [u128; N], [bool; N], [bool; N]) {\n    let mut a = lhs;\n    let mut b = rhs;\n    let underflow = !__gte(lhs, rhs);\n\n    let mut result: [u128; N] = [0; N];\n    // swap a and b if there's an underflow\n    let (a, b) = if underflow { (b, a) } else { (a, b) };\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 1;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = a[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = b[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = (borrow * TWO_POW_120 + add_term - sub_term);\n\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (underflow, result, carry_flags, borrow_flags)\n}\n\npub(crate) unconstrained fn __neg_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> ([u128; N], [bool; N - 1]) {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow_in: u128 = 0;\n\n    let mut borrow_flags: [bool; N - 1] = [false; N - 1];\n    for i in 0..N {\n        let sub_term = val[i] + borrow_in;\n        let borrow = (sub_term > params.modulus[i]) as u128;\n        result[i] = borrow * TWO_POW_120 + params.modulus[i] - sub_term;\n\n        borrow_in = borrow;\n        if (i < N - 1) {\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (result, borrow_flags)\n}\n\npub(crate) unconstrained fn __add_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N - 1], bool) {\n    let add_res = __helper_add(lhs, rhs);\n    let overflow = __gte(add_res, params.modulus);\n\n    let mut subtrahend: [u128; N] = [0; N];\n    let mut result: [u128; N] = [0; N];\n\n    if overflow {\n        subtrahend = params.modulus;\n    }\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N - 1] = [false; N - 1];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term = lhs[i] + rhs[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry as u128;\n\n        let sub_term = subtrahend[i] + borrow_in;\n\n        let mut borrow: u128 = (sub_term > add_term) as u128;\n        result[i] = borrow * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow as u128;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            if (i < N - 1) {\n                borrow_flags[i] = borrow as bool;\n            }\n        }\n    }\n    (result, carry_flags, borrow_flags, overflow)\n}\n\npub(crate) unconstrained fn __sub_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N - 1], bool) {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let underflow = !__gte(lhs, rhs);\n    let addend: [u128; N] = if underflow { params.modulus } else { [0; N] };\n    let mut result: [u128; N] = [0; N];\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N - 1] = [false; N - 1];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = lhs[i] + addend[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = rhs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = borrow as u128 * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            if (i < N - 1) {\n                borrow_flags[i] = borrow as bool;\n            }\n        }\n    }\n    (result, carry_flags, borrow_flags, underflow)\n}\n\n/**\n * @brief BARRETT_REDUCTION_OVERFLOW_BITS defines how large an input to barrett reduction can be\n * @details maximum value = modulus^2 <<BARRETT_REDUCTION_OVERFLOW_BITS\n *          see __barrett_reduction for more details\n **/\ncomptime global BARRETT_REDUCTION_OVERFLOW_BITS: u32 = 4;\n\npub(crate) unconstrained fn __barrett_reduction<let N: u32>(\n    x: [u128; 2 * N],\n    redc_param: [u128; N],\n    k: u32,\n    modulus: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mulout_field: [Field; 3 * N] = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout_field[i + j] += x[i] as Field * redc_param[j] as Field;\n        }\n    }\n\n    let mulout: [u128; 3 * N] = __normalize_limbs(mulout_field, 3 * N - 1);\n\n    // When we apply the barrett reduction, the maximum value of the output will be\n    // <= p * (1 + x/2^{2k})\n    // where p = modulus,\n    //       x = reduction input\n    // if x > p * p, we need k to be larger than modulus_bits()\n    // we hardcode k = 4, which means that the maximum value of x is approx. 16 * p * p\n    // this should be larger than most values put into `evaluate_quadratic_expression`\n    // TODO: try and detect cases where x might be too large at comptime\n    // N.B. BARRETT_REDUCTION_OVERFLOW_BITS affects how `redc_param` is generated.\n    // `redc_param` = 2^{modulus_bits() * 2 + BARRETT_REDUCTION_OVERFLOW_BITS} / modulus\n    // NOTE: very niche edge case error that we need to be aware of:\n    //       N must be large enough to cover the modulus *plus* BARRETT_REDUCTION_OVERFLOW_BITS\n    //       i.e. a 359-bit prime needs (I think) 4 limbs to represent or we may overflow when calling __barrett_reduction\n    let mut quotient = __shr(mulout, (k + k + BARRETT_REDUCTION_OVERFLOW_BITS));\n    // the quotient has bunch of zero limbs now, so we can just take the first N limbs as a result\n    let mut smaller_quotient = [0; N];\n    for i in 0..N {\n        smaller_quotient[i] = quotient[i] as u128;\n    }\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient_full should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = __into_field_array(quotient);\n\n    // quotient_mul_modulus_normalized can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N] = [0; 2 * N];\n\n    // First, accumulate the products into quotient_mul_modulus_normalized\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus_normalized[i + j] +=\n                partial_quotient_full[i] * modulus[j] as Field;\n        }\n    }\n\n    // Then, split the accumulated values and propagate higher bits\n    let long_quotient_mul_modulus_normalized: [u128; 2 * N] =\n        __normalize_limbs(quotient_mul_modulus_normalized, 2 * N);\n    let mut quotient_mul_modulus_normalized: [u128; N] = [0; N];\n    for i in 0..N {\n        quotient_mul_modulus_normalized[i] = long_quotient_mul_modulus_normalized[i];\n    }\n\n    let mut long_remainder = __helper_sub(x, long_quotient_mul_modulus_normalized);\n    // ugly but have to remove a bunch of zeros from this\n    let mut remainder = [0; N];\n    for i in 0..N {\n        remainder[i] = long_remainder[i];\n    }\n    // barrett reduction is quirky so might need to remove a few modulus from the remainder\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n\n    (smaller_quotient, remainder)\n}\n\n/**\n* @brief compute the log of the size of the primitive root\n* @details find the maximum value k where x^k = 1, where x = primitive root\n*          This is needed for our Tonelli-Shanks sqrt algorithm\n**/\npub(crate) unconstrained fn __primitive_root_log_size<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> u32 {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let mut target = __helper_sub(params.modulus, one);\n    let mut result: u32 = 0;\n    for _ in 0..MOD_BITS {\n        let lsb_is_one = (target[0] & 1) == 1;\n        if (lsb_is_one) {\n            break;\n        }\n        result += 1;\n        target = __shr1(target);\n    }\n    result\n}\n\n/**\n* @brief inner loop fn for `find_multiplive_generator`\n* @details recursive function to get around the lack of a `while` keyword\n**/\nunconstrained fn __recursively_find_multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    target: [u128; N],\n    p_minus_one_over_two: [u128; N],\n) -> (bool, [u128; N]) {\n    let exped = __pow(params, target, p_minus_one_over_two);\n    let one: [u128; N] = __one();\n    let neg_one = __neg(params, one);\n    let found = exped == neg_one;\n    let mut result: (bool, [u128; N]) = (found, target);\n    if (!found) {\n        let _target: [u128; N] = __add(params, target, one);\n        result = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n            params,\n            _target,\n            p_minus_one_over_two,\n        );\n    }\n    result\n}\n\n/**\n* @brief find multiplicative generator `g` where `g` is the smallest value that is not a quadratic residue\n*        i.e. smallest g where g^2 = -1\n* @note WARNING if multiplicative generator does not exist, this function will enter an infinite loop!\n**/\npub(crate) unconstrained fn __multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> [u128; N] {\n    let mut target: [u128; N] = __one();\n    let p_minus_one_over_two = __shr1(__helper_sub(params.modulus, __one()));\n    let (_, target) = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n        params,\n        target,\n        p_minus_one_over_two,\n    );\n    target\n}\n\npub(crate) unconstrained fn __tonelli_shanks_sqrt_inner_loop_check<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    t2m: [u128; N],\n    i: u32,\n) -> u32 {\n    let one: [u128; N] = __one();\n    let is_one = t2m == one;\n    let mut result = i;\n    if (!is_one) {\n        let t2m = __mul::<_, MOD_BITS>(params, t2m, t2m);\n        let i = i + 1;\n        result = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, i);\n    }\n    result\n}\n\npub(crate) unconstrained fn __increment<let N: u32>(val: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 1;\n    for i in 0..N {\n        let mut add_term = (val[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift = (120 - limb_shift) as u8;\n    let mask: u128 = (((1 as u128) << limb_shift) - 1) << remainder_shift;\n    result[0] = (input[0 + num_shifted_limbs] >> limb_shift);\n    for i in 1..(N - num_shifted_limbs) {\n        let value = input[i + num_shifted_limbs];\n        result[i] = value >> limb_shift;\n        let remainder: u128 = (value << remainder_shift) & mask;\n        result[i - 1] = result[i - 1] + remainder;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shl<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift: u8 = 120 - limb_shift as u8;\n\n    // 83\n    // limb shift = 1\n    // inside shift = 19 bits to the left\n    // meaning we have 19 carry bits and 41 remainder bits\n    let mask: u128 = (1 as u128 << 120) - 1;\n    //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n    let value = input[0];\n\n    let mut remainder = (value >> remainder_shift);\n    result[num_shifted_limbs] = (value << limb_shift) & mask;\n\n    // shift 84. num shifted = 1\n    for i in 1..((N) - num_shifted_limbs) {\n        let value = input[i];\n        let upshift = ((value << limb_shift) + remainder) & mask;\n        result[i + num_shifted_limbs] = upshift;\n        remainder = (value >> remainder_shift);\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_sub<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    for i in 0..N {\n        borrow = ((rhs[i] + borrow_in) > lhs[i]) as u128;\n        let sub = (borrow << 120) + lhs[i] as u128 - rhs[i] as u128 - borrow_in;\n        result[i] = sub;\n        borrow_in = borrow;\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_add<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr1<let N: u32>(mut input: [u128; N]) -> [u128; N] {\n    let value = input[N - 1];\n    input[N - 1] = value >> 1;\n\n    let mut remainder = (value & 1) << 119;\n\n    for i in 1..N {\n        let value = input[N - 1 - i];\n        input[N - 1 - i] = (value >> 1) + remainder;\n        remainder = (value << 119) & TWO_POW_119;\n    }\n    input\n}\n\npub(crate) unconstrained fn __get_msb<let N: u32>(val: [u128; N]) -> u32 {\n    let mut count = 0;\n    for i in 0..N {\n        let v = val[((N) - 1 - i)];\n        let v_low = v as u64 % TWO_POW_60 as u64;\n        let v_high = ((v - v_low as u128) / TWO_POW_60) as u64;\n        if (v_high > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2)) + get_msb64(v_high);\n            break;\n        }\n        if (v_low > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2 + 1)) + get_msb64(v_low);\n            break;\n        }\n    }\n    count\n}\n\npub(crate) fn __get_bit<let N: u32>(input: [u128; N], bit: u32) -> bool {\n    let segment_index: u32 = bit / 120;\n    let uint_index = bit % 120;\n    let limb: u128 = input[segment_index];\n    let value = (limb >> uint_index as u8) & 1;\n    value == 1\n}\n\npub(crate) fn __into_field_array<let N: u32>(input: [u128; N]) -> [Field; N] {\n    let mut result: [Field; N] = [0; N];\n    for i in 0..N {\n        result[i] = input[i] as Field;\n    }\n    result\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/unconstrained_helpers.nr"},"120":{"source":"use crate::fns::constrained_ops::derive_from_seed;\nuse crate::fns::unconstrained_helpers::{\n    __barrett_reduction, __get_bit, __get_msb, __helper_add, __helper_sub, __increment,\n    __multiplicative_generator, __primitive_root_log_size, __shl, __shr,\n    __tonelli_shanks_sqrt_inner_loop_check,\n};\nuse crate::params::BigNumParams as P;\nuse crate::utils::split_bits;\nuse super::unconstrained_helpers::__shr1;\n\npub(crate) unconstrained fn __one<let N: u32>() -> [u128; N] {\n    let mut limbs: [u128; N] = [0; N];\n    limbs[0] = 1;\n    limbs\n}\n\n/// Deterministically derives a big_num from a seed value.\n///\n/// Takes a seed byte array and generates a big_num in the range [0, modulus-1].\n///\n/// ## Value Parameters\n///\n/// - `params`: The BigNum parameters containing modulus and reduction info\n/// - `seed`:  Input seed bytes to derive from.\n///\n/// ## Returns\n///\n///  An array of field elements derived from the seed (the limbs of the big_num)\npub(crate) unconstrained fn __derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let out = derive_from_seed::<N, MOD_BITS, SeedBytes>(params, seed);\n    out\n}\n\npub(crate) unconstrained fn __eq<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> bool {\n    lhs == rhs\n}\n\npub(crate) unconstrained fn __is_zero<let N: u32>(limbs: [u128; N]) -> bool {\n    let mut result: bool = true;\n    for i in 0..N {\n        result = result & (limbs[i] == 0);\n    }\n\n    result\n}\n\n/**\n* @brief given an input `x`, compute `2p - x` (unconstrained)\n*\n* @description we subtract the input from double the modulus, because all constrained BigNum operations\n*              only guarantee that the output is in the range [0, ceil(log2(p))].\n*              I.E. the input may be larger than the modulus `p`.\n*              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n*              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n*              because such a check is expensive and usually unneccesary.\n*/\npub(crate) unconstrained fn __neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> [u128; N] {\n    let f: [u128; N] = limbs;\n    __helper_sub(params.modulus, f)\n}\n\npub(crate) unconstrained fn __add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    // check if the result is greater than the modulus\n    if __gte(result, params.modulus) {\n        __helper_sub(result, params.modulus)\n    } else {\n        result\n    }\n}\n\n/**\n* @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n* @description see `__neg` for why we use 2p instead of p\n**/\npub(crate) unconstrained fn __sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    __add(params, lhs, __neg(params, rhs))\n}\n\npub(crate) unconstrained fn __mul_with_quotient<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mul: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..N {\n        for j in 0..N {\n            mul[i + j] += (lhs[i] as Field * rhs[j] as Field);\n        }\n    }\n    let to_reduce: [u128; (N * 2)] = split_bits::__normalize_limbs(mul, 2 * N);\n    let (q, r) = __barrett_reduction(to_reduce, params.redc_param, MOD_BITS, params.modulus);\n    // ([0; N], [0; N])\n    (q, r)\n}\n\npub(crate) unconstrained fn __mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let (_, b) = __mul_with_quotient::<_, MOD_BITS>(params, lhs, rhs);\n    b\n}\n\npub(crate) unconstrained fn __div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    let inv_divisor: [u128; N] = __invmod::<_, MOD_BITS>(params, divisor);\n    __mul::<_, MOD_BITS>(params, numerator, inv_divisor)\n}\n\n/**\n* @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) unconstrained fn __udiv_mod<let N: u32>(\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut quotient: [u128; N] = [0; N];\n    let mut remainder: [u128; N] = numerator;\n\n    let b = divisor;\n    let numerator_msb = __get_msb(numerator);\n    let divisor_msb = __get_msb(divisor);\n    if divisor_msb > numerator_msb {\n        ([0; N], numerator)\n    } else {\n        let mut bit_difference = __get_msb(remainder) - __get_msb(divisor);\n        let mut accumulator: [u128; N] = __one();\n        let mut divisor = __shl(divisor, bit_difference);\n        accumulator = __shl(accumulator, bit_difference);\n\n        if (__gte(divisor, __increment(remainder))) {\n            divisor = __shr1(divisor);\n            accumulator = __shr1(accumulator);\n        }\n\n        for _ in 0..(N * 120) {\n            if (__gte(remainder, b) == false) {\n                break;\n            }\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (__gte(remainder, divisor)) {\n                remainder = __helper_sub(remainder, divisor);\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient = __helper_add(quotient, accumulator);\n            }\n            divisor = __shr1(divisor); // >>= 1;\n            accumulator = __shr1(accumulator); //  >>= 1;\n        }\n\n        (quotient, remainder)\n    }\n}\n\npub(crate) unconstrained fn __invmod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    let one = __one();\n    let exp = __helper_sub(params.modulus, __helper_add(one, one));\n    __pow::<_, MOD_BITS>(params, val, exp)\n}\n\npub(crate) unconstrained fn __pow<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n    exponent: [u128; N],\n) -> [u128; N] {\n    let x = exponent;\n    let num_bits = MOD_BITS + 1;\n\n    let mut accumulator: [u128; N] = __one::<N>();\n\n    for i in 0..num_bits {\n        accumulator = __mul::<_, MOD_BITS>(params, accumulator, accumulator);\n        if __get_bit(x, num_bits - i - 1) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, val);\n        }\n    }\n    accumulator\n}\n\npub(crate) unconstrained fn __batch_invert<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n) -> [[u128; N]; M] {\n    // TODO: ugly! Will fail if input slice is empty\n\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]; M] = std::mem::zeroed();\n\n    for i in 0..M {\n        temporaries[i] = accumulator;\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]; M] = [[0; N]; M];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..M {\n        let idx = M - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __batch_invert_slice<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]],\n) -> [[u128; N]] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]] = &[];\n    for i in 0..x.len() {\n        temporaries = temporaries.push_back(accumulator);\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]] = [];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..x.len() {\n        let idx = x.len() - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result = result.push_front(T0);\n        } else {\n            result = result.push_front([0; N]);\n        };\n    }\n\n    result\n}\n\n/**\n* @brief compute a modular square root using the Tonelli-Shanks algorithm\n* @details only use for prime fields! Function may infinite loop if used for non-prime fields\n* @note this is unconstrained fn. To constrain a square root, validate that output^2 = self\n* TODO: create fn that constrains nonexistence of square root (i.e. find x where x^2 = -self)\n**/\npub(crate) unconstrained fn __tonelli_shanks_sqrt<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    input: [u128; N],\n) -> std::option::Option<[u128; N]> {\n    // Tonelli-shanks algorithm begins by finding a field element Q and integer S,\n    // such that (p - 1) = Q.2^{s}\n    // We can compute the square root of a, by considering a^{(Q + 1) / 2} = R\n    // Once we have found such an R, we have\n    // R^{2} = a^{Q + 1} = a^{Q}a\n    // If a^{Q} = 1, we have found our square root.\n    // Otherwise, we have a^{Q} = t, where t is a 2^{s-1}'th root of unity.\n    // This is because t^{2^{s-1}} = a^{Q.2^{s-1}}.\n    // We know that (p - 1) = Q.w^{s}, therefore t^{2^{s-1}} = a^{(p - 1) / 2}\n    // From Euler's criterion, if a is a quadratic residue, a^{(p - 1) / 2} = 1\n    // i.e. t^{2^{s-1}} = 1\n    // To proceed with computing our square root, we want to transform t into a smaller subgroup,\n    // specifically, the (s-2)'th roots of unity.\n    // We do this by finding some value b,such that\n    // (t.b^2)^{2^{s-2}} = 1 and R' = R.b\n    // Finding such a b is trivial, because from Euler's criterion, we know that,\n    // for any quadratic non-residue z, z^{(p - 1) / 2} = -1\n    // i.e. z^{Q.2^{s-1}} = -1\n    // => z^Q is a 2^{s-1}'th root of -1\n    // => z^{Q^2} is a 2^{s-2}'th root of -1\n    // Since t^{2^{s-1}} = 1, we know that t^{2^{s - 2}} = -1\n    // => t.z^{Q^2} is a 2^{s - 2}'th root of unity.\n    // We can iteratively transform t into ever smaller subgroups, until t = 1.\n    // At each iteration, we need to find a new value for b, which we can obtain\n    // by repeatedly squaring z^{Q}\n    let one = __one();\n    let primitive_root_log_size = __primitive_root_log_size::<_, MOD_BITS>(params);\n    let Q = __shr(\n        __helper_sub(params.modulus, one),\n        primitive_root_log_size - 1,\n    );\n    let two = __helper_add(one, one);\n    let Q_minus_one_over_two = __shr(__helper_sub(Q, two), 2);\n    let mut z = __multiplicative_generator::<_, MOD_BITS>(params); // the generator is a non-residue\n    let mut b = __pow::<_, MOD_BITS>(params, input, Q_minus_one_over_two);\n    let mut r = __mul::<_, MOD_BITS>(params, input, b);\n    let mut t = __mul::<_, MOD_BITS>(params, r, b);\n    let mut check: [u128; N] = t;\n    for _ in 0..primitive_root_log_size - 1 {\n        check = __mul::<_, MOD_BITS>(params, check, check);\n    }\n    let mut result = Option::none();\n    if (__eq(check, one)) {\n        let mut t1 = __pow::<_, MOD_BITS>(params, z, Q_minus_one_over_two);\n        let mut t2 = __mul::<_, MOD_BITS>(params, t1, z);\n        let mut c = __mul::<_, MOD_BITS>(params, t2, t1);\n        let mut m: u32 = primitive_root_log_size;\n        // tonelli shanks inner 1\n        // (if t2m == 1) then skip\n        // else increase i and square t2m and go again\n        // algorithm runtime should only be max the number of bits in modulus\n        for _ in 0..MOD_BITS {\n            if (__eq(t, one)) {\n                result = Option::some(r);\n                break;\n            }\n            let mut t2m = t;\n            // while loop time\n            let i = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, 0);\n            let mut j = m - i - 1;\n            b = c;\n            for _ in 0..j {\n                // how big\n                if (j == 0) {\n                    break;\n                }\n                b = __mul(params, b, b);\n                //j -= 1;\n            }\n            c = __mul::<_, MOD_BITS>(params, b, b);\n            t = __mul::<_, MOD_BITS>(params, t, c);\n            r = __mul::<_, MOD_BITS>(params, r, b);\n            m = i;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __gte<let N: u32, let MOD_BITS: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let mut result = false;\n    let mut early_exit = false;\n    for i in 0..(N) {\n        let idx = (N) - 1 - i;\n        if (rhs[idx] == lhs[idx]) {\n            continue;\n        }\n\n        result = rhs[idx] < lhs[idx];\n        early_exit = true;\n        break;\n    }\n    if early_exit {\n        result\n    } else {\n        lhs[0] == rhs[0]\n    }\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/fns/unconstrained_ops.nr"},"130":{"source":"use crate::constants::TWO_POW_120;\n\nunconstrained fn split_120_bits(mut x: Field) -> (u128, u128) {\n    // Here we're taking advantage of truncating 128 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let low = (x as u128) % TWO_POW_120;\n    let high = ((x - low as Field) / TWO_POW_120 as Field) as u128;\n    (low, high)\n}\n\npub(crate) unconstrained fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32,\n) -> [u128; N] {\n    let mut normalized: [u128; N] = [0; N];\n    let mut next: Field = input[0];\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(next);\n        normalized[i] = lo as u128;\n        next = input[i + 1] + hi as Field;\n    }\n    {\n        let (lo, hi) = split_120_bits(next);\n        normalized[range - 1] = lo as u128;\n        assert(hi == 0);\n    }\n    normalized\n}\n","path":"/Users/zac/nargo/github.com/noir-lang/noir-bignum/v0.6.1/src/utils/split_bits.nr"}},"names":["main"],"brillig_names":["__div2","__from_field","__validate_gt_remainder","__div","__compute_quadratic_expression_with_borrow_flags","decompose_hint","lte_hint","directive_invert","directive_integer_quotient","directive_to_radix"]}